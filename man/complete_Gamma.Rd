% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrix_completions_main.R
\name{complete_Gamma}
\alias{complete_Gamma}
\title{Completion of Gamma matrices}
\usage{
complete_Gamma(Gamma, graph = NULL, allowed_graph_type = "general", ...)
}
\arguments{
\item{Gamma}{Numeric \eqn{d \times d}{d x d} variogram matrix.}

\item{graph}{Graph object from \code{igraph} package.
The \code{graph} must be a connected, undirected graph.
Can also be implied by \code{NA} entries in \code{Gamma} if decomposable.}

\item{allowed_graph_type}{Is passed as \code{graph_type} to \code{\link[=check_graph]{check_graph()}}.
Can be used to throw an error if \code{graph} is not of the specified type,
but does not have any influence on the completion algorithm.}

\item{...}{Further arguments passed to \code{\link[=complete_gamma_general]{complete_gamma_general()}} if \code{graph}
is not decomposable}
}
\value{
Completed \dxd{} \code{Gamma} matrix.
}
\description{
Given a \code{graph} and \code{Gamma} matrix specified (at least) on the
edges of \code{graph}, returns the full \code{Gamma} matrix implied
by the conditional independencies. For results on the existence and
uniqueness of this completion, see
\insertCite{hen2022;textual}{graphicalExtremes}.
}
\details{
If \code{graph} is decomposable, \code{Gamma} only needs to be specified on
the edges of the graph and the graph structure can be implied by setting
the remaining entries to \code{NA}.

If \code{graph} is not decomposable, the algorithm requires a fully specified
variogram matrix \code{Gamma} and the graph structure needs to be explicitly
provided in \code{graph}.

For a decomposable graph it suffices to specify the dependence parameters of the Huesler--Reiss
distribution within the cliques of the \code{graph}, the remaining entries are implied
by the conditional independence properties. For details see \insertCite{eng2019;textual}{graphicalExtremes}.
}
\examples{
## Block graph:
Gamma <- rbind(
  c(0, .5, NA, NA),
  c(.5, 0, 1, 1.5),
  c(NA, 1, 0, .8),
  c(NA, 1.5, .8, 0)
)

complete_Gamma(Gamma)

## Alternative representation of the same completion problem:
my_graph <- igraph::graph_from_adjacency_matrix(rbind(
  c(0, 1, 0, 0),
  c(1, 0, 1, 1),
  c(0, 1, 0, 1),
  c(0, 1, 1, 0)
), mode = "undirected")
Gamma_vec <- c(.5, 1, 1.5, .8)
complete_Gamma(Gamma_vec, my_graph)

## Decomposable graph:
G <- rbind(
c(0, 5, 7, 6, NA),
c(5, 0, 14, 15, NA),
c(7, 14, 0, 5, 5),
c(6, 15, 5, 0, 6),
c(NA, NA, 5, 6, 0)
)

complete_Gamma(G)

## Non-decomposable graph:
G <- rbind(
c(0, 5, 7, 6, 6),
c(5, 0, 14, 15, 13),
c(7, 14, 0, 5, 5),
c(6, 15, 5, 0, 6),
c(6, 13, 5, 6, 0)
)
g <- igraph::make_ring(5)

complete_Gamma(G, g)


}
\references{
\insertAllCited{}
}
\seealso{
\code{\link[=Gamma2Theta]{Gamma2Theta()}}

Other Matrix completions: 
\code{\link{DEPRECATED_complete_Gamma_general}()},
\code{\link{complete_Gamma_decomposable}()},
\code{\link{complete_Gamma_general_demo}()},
\code{\link{complete_Gamma_one_step}()}
}
\concept{Matrix completions}
