[{"path":"/articles/applicationDanube.html","id":"danube-data","dir":"Articles","previous_headings":"","what":"Danube Data","title":"Introduction and application to Danube data","text":"Throughout document use Danube dataset Asadi et al. (2015) illustrate functions concepts. dataset provided package danube, see corresponding help page details related functions.","code":"# Plot the physical locations of measuring stations, indicating flow volume by width plotDanube(useStationVolume = TRUE, useConnectionVolume = TRUE, xyRatio = 1.5) # Plot only the flow graph danube_flow <- getDanubeFlowGraph() plotDanubeIGraph(graph = danube_flow) # Plot some pairwise scatter plots plotData <- as_tibble(danube$data_clustered) ggplot(plotData) + geom_point(aes(x = X1, y = X2)) ggplot(plotData) + geom_point(aes(x = X22, y = X28))"},{"path":[]},{"path":"/articles/applicationDanube.html","id":"definition","dir":"Articles","previous_headings":"2 Multivariate Pareto distributions","what":"Definition","title":"Introduction and application to Danube data","text":"goal study extremal tail multivariate random vector \\(\\mathbf{X} = (X_1,\\dots, X_d)\\). , interested extremal dependence therefore normalize marginal distributions \\(F_j\\) \\(X_j\\) standard Pareto distributions \\[\\begin{equation}     1 /\\{1- F_j(X_j)\\}, \\quad j=1,\\dots, d.     \\tag{2.1} \\end{equation}\\] assume sequel vector \\(\\mathbf{X}\\) normalized standard Pareto margins. multivariate Pareto distribution (MPD) defined limiting distribution exceedances \\(\\mathbf{X}\\) high threshold, multivariate threshold chosen terms \\(l_\\infty\\)-norm. \\(u>0\\), define exceedance distribution \\[\\begin{equation}     \\mathbf{X}_u = \\mathbf{X} \\mid \\| \\mathbf{X} \\|_\\infty > u     \\tag{2.2} \\end{equation}\\] sending \\(u\\\\infty\\) normalizing properly, random vector \\(\\mathbf{X}_u\\) converges limiting distribution \\(\\mathbf{Y}\\) called MPD: \\[ \\mathbf{Y} = \\lim_{u\\\\infty} \\mathbf{X}_u /u,\\] limit terms convergence distribution. construction, distribution MPD \\(\\mathbf{Y}\\) defined space \\(\\mathcal L = \\{\\mathbf{x} \\[0,\\infty)^d : \\| \\mathbf{x} \\|_\\infty > 1\\}\\), \\(\\mathbf{Y}\\) possesses density \\(f_{\\mathbf{Y}}\\), proportional -called exponent measure density \\(\\lambda\\); details see Engelke Hitz (2020). practice, use approximation \\(\\mathbf{Y} \\approx \\mathbf{X}_u\\) large value \\(u\\), \\(u\\) can chosen \\(p\\)th quantile distribution \\(\\|\\mathbf{X}\\|_\\infty\\). Given \\(n\\) oberservations \\(\\mathbf{X}_1, \\dots, \\mathbf{X}_n\\) \\(\\mathbf{X}\\), function data2mpareto() first computes standardization (2.1) based empirical distribution functions \\(\\hat F_j\\) selects exceedances \\(\\mathbf{X}_u\\) according (2.2).","code":"X <- danube$data_clustered Y <- data2mpareto(data = X, p = .8)"},{"path":"/articles/applicationDanube.html","id":"examples","dir":"Articles","previous_headings":"2 Multivariate Pareto distributions","what":"Examples","title":"Introduction and application to Danube data","text":"Example 2.1  extremal logistic distribution parameter \\(\\theta\\(0,1)\\) induces multivariate Pareto distribution density \\[\\begin{equation} f_{\\mathbf{Y}}(\\mathbf{y}) = \\frac{1}{d^{\\theta}} \\left(y_1^{-1/\\theta}+\\dots+y_d^{-1/\\theta}\\right)^{\\theta-d}\\prod_{=1}^{d-1}\\left(\\frac{}{\\theta}-1\\right) \\prod_{=1}^{d} y_i^{-1/\\theta-1}, \\quad \\mathbf{y} \\\\mathcal L. \\end{equation}\\] parameter \\(\\theta\\) governs extremal dependence, ranging complete dependence \\(\\theta\\0\\) independence \\(\\theta \\1\\). function rmpareto() generates samples MPD \\(\\mathbf{Y}\\) based exact algorithm described Engelke Hitz (2020). Example 2.2  \\(d\\)-dimensional Hüsler–Reiss distribution (Hüsler Reiss, 1989) parameterized variogram matrix \\(\\Gamma = \\{\\Gamma_{ij}\\}_{1\\leq ,j\\leq d}\\). corresponding density exponent measure can written \\(k\\\\{1,\\dots, d\\}\\) \\[\\begin{equation}     \\lambda(\\mathbf{y}) = y_k^{-2}\\prod_{\\neq k} y_i^{-1} \\phi_{d-1}\\left(\\mathbf{\\tilde y}_{\\setminus k}; \\Sigma^{(k)}\\right), \\quad \\mathbf{y} \\\\mathcal L,  \\tag{2.3} \\end{equation}\\] \\(\\phi_p(\\cdot; \\Sigma)\\) density centred \\(p\\)-dimensional normal distribution covariance matrix \\(\\Sigma\\), \\(\\mathbf{\\tilde y} = \\{\\log(y_i/y_k) + \\Gamma_{ik}/2\\}_{=1,\\dots, d}\\) \\[\\begin{equation}\\label{sigma_k}     \\Sigma^{(k)}  =\\frac{1}{2} \\{\\Gamma_{ik}+\\Gamma_{jk}-\\Gamma_{ij}\\}_{,j\\neq k} \\\\mathbb R^{(d-1)\\times (d-1)}. \\tag{2.4} \\end{equation}\\] matrix \\(\\Sigma^{(k)}\\) positive definite play important role theory extremal graphical models. representation density (2.3) seems depend choice \\(k\\), , fact, value right-hand side equation independent \\(k\\). Hüsler–Reiss multivariate Pareto distribution density \\(f_{\\mathbf{Y}}(\\mathbf{y}) \\propto \\lambda(\\mathbf{y})\\) strength dependence \\(\\)th \\(j\\)th component parameterized \\(\\Gamma_{ij}\\), ranging complete dependence \\(\\Gamma_{ij} \\0\\) independence \\(\\Gamma_{ij} \\\\infty\\). extension Hüsler–Reiss distributions random fields Brown–Resnick processes (Kabluchko et al., 2009), widely used models spatial extremes. Note can also generate samples corresponding max-stable distribution function rmstable(), following exact algorithm Dombry et al. (2016).","code":"theta <- .5 Ysim <- rmpareto(n = 100, model = \"logistic\", d = 2, par = theta) G <- cbind(c(0, 1.5), c(1.5, 0)) Ysim <- rmpareto(n = 100, model = \"HR\", par = G)"},{"path":[]},{"path":"/articles/applicationDanube.html","id":"extremal-correlation","dir":"Articles","previous_headings":"2 Multivariate Pareto distributions > 2.3 Measures of extremal dependence","what":"Extremal correlation","title":"Introduction and application to Danube data","text":"extremal correlation \\(\\chi_{ij}\\[0,1]\\) measures dependence largest values random variables \\(X_i\\) \\(X_j\\). defined \\[\\begin{equation}\\label{EC}     \\chi_{ij} = \\lim_{p\\1} \\chi_{ij}(p) = \\lim_{p\\1} \\mathbb P\\left\\{F_i(X_i) > p\\mid  F_j(X_j) > p \\right\\}, \\end{equation}\\] boundary cases \\(0\\) \\(1\\) correspond asymptotic independence complete dependence, respectively. \\(n\\) observations \\(X_1,\\dots, X_n\\) \\(d\\)-dimensional vector \\(X\\), can empirically estimate \\(d\\times d\\) matrix pairwise extremal correlations fixed threshold \\(p\\) close 1. functions, default argument p = NULL implies data already expected MPD scale, thresholding performed. danube data, may therefore directly use \\(\\mathbf{Y}\\) instead \\(\\mathbf{X}\\): Example 2.3  Hüsler–Reiss distribution parameter matrix \\(\\Gamma = \\{\\Gamma_{ij}\\}_{1\\leq ,j\\leq d}\\), extremal correlation given \\[ \\chi_{ij} =  2 - 2 \\Phi(\\sqrt{\\Gamma_{ij}}/2),\\] \\(\\Phi\\) standard normal distribution function. can use functions Gamma2chi() chi2Gamma() switch two coefficients.","code":"chi_hat <- emp_chi(data = X, p = .8) chi_hat <- emp_chi(data = Y)"},{"path":"/articles/applicationDanube.html","id":"extremal-variogram","dir":"Articles","previous_headings":"2 Multivariate Pareto distributions > 2.3 Measures of extremal dependence","what":"Extremal variogram","title":"Introduction and application to Danube data","text":"exist several summary statistics extremal dependence. extremal variogram introduced Engelke Volgushev (2022) turns particularly useful inference extremal graphical models discussed . root node \\(k\\V\\), pre-asymptotic extremal variogram defined matrix \\(\\Gamma^{(k)}\\) entries \\[\\begin{equation*}     \\Gamma_{ij}^{(k)}(p) = \\mathop{\\mathrm{Var}}\\left[\\log\\{1 -  F_i(X_{})\\}- \\log\\{1 - F_j(X_j)\\} \\mid F_k(X_k) > p\\right], \\quad ,j\\V,     \\end{equation*}\\] whenever right-hand side exists. Note \\(-\\log\\{1 -  F_i(X_{})\\}\\) transforms \\(X_i\\) standard exponential distribution, \\(\\Gamma^{(k)}\\) simply variogram matrix \\(\\mathbf{X}\\) exponential scale, conditioned \\(k\\)th variable large. limit \\(p\\1\\) called extremal variogram can expressed terms MPD \\(\\mathbf{Y}\\): \\[\\begin{equation*} \\Gamma_{ij}^{(k)} = \\lim_{p\\1} \\Gamma_{ij}^{(k)}(p) = \\mathop{\\mathrm{Var}}\\left\\{ \\log Y^k_{} - \\log Y^k_j \\mid Y_k > 1 \\right\\}, \\quad ,j\\V. \\end{equation*}\\] Weak/strong extremal dependence indicated large/small values extremal variogram, respectively. function emp_vario() estimates (pre-asymptotic) extremal variogram, instance \\(k=1\\). general, matrices \\(\\Gamma^{(k)}\\) can different \\(k \\V\\), example Hüsler–Reiss distribution, coincide. Example 2.4  Hüsler–Reiss distribution parameter matrix \\(\\Gamma\\), extremal variogram matrices satisfy \\[ \\Gamma = \\Gamma^{(1)} = \\dots = \\Gamma^{(d)}.\\] case makes sense estimate extremal variogram \\(\\hat \\Gamma\\) average estimators \\(\\hat \\Gamma^{(k)}\\):","code":"Gamma_1_hat <- emp_vario(data = X, k = 1, p = 0.8) Gamma_hat <- emp_vario(data = X, p = 0.8) Gamma_hat <- emp_vario(data = Y)"},{"path":"/articles/applicationDanube.html","id":"extremal-graphical-models","dir":"Articles","previous_headings":"","what":"Extremal graphical models","title":"Introduction and application to Danube data","text":"Let \\(G=(V,E)\\) undirected graph index set \\(V = \\{1,\\dots, d\\}\\) edges \\(E \\subset V \\times V\\). figure shows examples different graphical structures: tree, decomposable graph non-decomposable graph. Engelke Hitz (2020) introduce new notion extremal conditional independence MPDs, denoted \\(\\perp_e\\). define extremal graphical model \\(G\\) MPD \\(Y = (Y_j : j\\V)\\) satisfies pairwise Markov property \\[   Y_i \\perp_e Y_j \\mid  Y_{\\setminus \\{,j\\}}, \\quad \\text{ } (,j)\\notin E,\\] , \\(Y_i\\) \\(Y_j\\) conditionally independent extremal sense \\(\\perp_e\\) given nodes whenever edge \\(\\) \\(j\\) \\(G\\). MPD possesses density \\(f_{\\mathbf{Y}}\\), graph \\(G\\) connected. Engelke Hitz (2020) show Hammersley–Clifford theorem stating extremal graphical model decomposable graph \\(G\\), density \\(f_{\\mathbf{Y}}\\) factorizes marginal density cliques.","code":"# A tree graph, a decomposable graph, and a non-decomposable (cycle) graph plot(graph_from_literal(1--2--3, 2--4)) plot(graph_from_literal(1--2--3--1, 2--4)) plot(graph_from_literal(1--2--3--4--1))"},{"path":"/articles/applicationDanube.html","id":"trees","dir":"Articles","previous_headings":"3 Extremal graphical models","what":"Trees","title":"Introduction and application to Danube data","text":"tree \\(T = (V,E)\\) particularly simple type graph, connected cycles. implies exactly \\(|E| = d-1\\) edges. Hammersley–Clifford theorem shown Engelke Hitz (2020) yields density extremal tree model \\(\\mathbf{Y}\\) tree \\(T= (V,E)\\) factorizes \\[\\begin{equation}     f_{\\mathbf{Y}}(\\mathbf{y}) \\propto  \\prod_{\\{,j\\}\\E} {\\lambda_{ij}(y_i,y_j) \\y_i^{-2} y_j^{-2}} \\prod_{\\V} y_i^{-2},  \\tag{3.1} \\end{equation}\\] \\(\\lambda_{ij}\\) bivariate marginals exponent measure density \\(\\lambda\\) corresponding \\(\\mathbf{Y}\\). \\(d\\)-dimensional density MPD therefore reduced bivariate interactions . extremal graphical models trees, extremal variograms \\(\\Gamma^{(k)}\\), \\(k \\V\\), natural since define -called additive tree metric, ,\\[\\begin{equation} \\Gamma_{ij}^{(k)} = \\sum_{(s,t) \\\\text{ph}(ij)} \\Gamma^{(k)}_{st}, \\tag{3.2} \\end{equation}\\] \\(\\text{ph}(ij)\\) denotes path node \\(\\) \\(j\\) tree \\(T\\).","code":""},{"path":"/articles/applicationDanube.html","id":"simulation","dir":"Articles","previous_headings":"3 Extremal graphical models > 3.1 Trees","what":"Simulation","title":"Introduction and application to Danube data","text":"representation (3.1) can specify bivariate models \\(\\lambda_{ij}\\) \\((,j) \\E\\) combine valid tree model. instance, use bivariate Hüsler–Reiss distributions edges tree \\(T\\), resulting \\(d\\)-dimensional tree model Hüsler–Reiss parameter matrix \\(\\Gamma\\) implied (3.2). use bivariate logistic distributions edges, resulting extremal tree model \\(d\\)-dimensional logistic model, flexible model \\(d-1\\) parameters. function rmpareto_tree() generates samples extremal tree model \\(\\mathbf{Y}\\). Note can also generate samples corresponding max-stable distribution function rmstable_tree().","code":"set.seed(42)  my_model <- generate_random_model(d = 4, graph_type = \"tree\") Ysim <- rmpareto_tree(     n = 100,     model = \"HR\",     tree = my_model$graph,     par = my_model$Gamma )  theta_vec <- c(.2, .8, .3) Ysim <- rmpareto_tree(     n = 100,     model = \"logistic\",     tree = my_model$graph,     par = theta_vec )"},{"path":"/articles/applicationDanube.html","id":"estimation","dir":"Articles","previous_headings":"3 Extremal graphical models > 3.1 Trees","what":"Estimation","title":"Introduction and application to Danube data","text":"given tree \\(T= (V,E)\\) parametric model \\(\\{f_{\\mathbf{Y}}(\\mathbf{y}; \\theta): \\theta \\\\Theta\\}\\) MPDs tree \\(T\\), estimation model parameters fairly straight-forward. \\(\\theta = \\{ \\theta_{ij}: (,j) \\E\\}\\) consists one parameter per edge, thanks factorization (3.1) may fit parameter \\(\\theta_{ij}\\) separately. can done (censored) maximum likelihood methods, methods M-estimation. provided tree data, function fmpareto_graph_HR() estimates \\(d-1\\) parameters Hüsler–Reiss model tree. example, fit extremal tree model (undirected) tree resulting flow connections danube() data set compare fitted empirical extremal coefficients.","code":"# Utility function to plot fitted parameters against true/empirical ones plot_fitted_params <- function(G0, G1, xlab = 'True', ylab = 'Fitted'){     return(         ggplot()         + geom_point(aes(             x = G0[upper.tri(G0)],             y = G1[upper.tri(G1)]         ))         + geom_abline(slope = 1, intercept = 0)         + xlab(xlab)         + ylab(ylab)     ) } # Get flow graph from package flow_graph <- getDanubeFlowGraph()  # Fit parameter matrix with this graph structure flow_Gamma <- fmpareto_graph_HR(data = Y, graph = flow_graph)  # Compute likelihood/ICs and plot parameters flow_loglik <- loglik_HR(     data = Y,     Gamma = flow_Gamma,     graph = flow_graph ) plot_fitted_params(chi_hat, Gamma2chi(flow_Gamma), xlab = 'Empirical')"},{"path":"/articles/applicationDanube.html","id":"structure-learning","dir":"Articles","previous_headings":"3 Extremal graphical models > 3.1 Trees","what":"Structure learning","title":"Introduction and application to Danube data","text":"practice, underlying conditional independence tree \\(T = (V,E)\\) usually unknown estimated data-driven way. extremal tree models, turns can done efficiently completely non-parametric way; see Engelke Volgushev (2022) details. method based notion minimum spanning tree. set symmetric weights \\(\\rho_{ij} > 0\\) associated pair nodes \\(,j\\V\\), \\(\\neq j\\), latter defined tree structure \\[\\begin{align}\\label{Tmin}     T_{\\mathop{\\mathrm{mst}}} = \\mathop{\\mathrm{arg\\,min}}_{T' = (V,E)} \\sum_{(,j)\\E} \\rho_{ij}, \\end{align}\\] minimizes sum distances tree. Engelke Volgushev (2022) show \\(\\mathbf{Y}\\) extremal graphical model unknown tree \\(T\\), minimum spanning tree extremal variogram \\(\\rho_{ij} = \\Gamma_{ij}^{(k)}\\) weights unique satisfies \\(T_{\\mathop{\\mathrm{mst}}} = T\\). Using empirical estimates \\(\\hat \\Gamma_{ij}^{(k)}\\) weights, can thus consistently recover underlying tree structure fully non-parametric way. fact, taking average \\(\\hat \\Gamma^{(k)}\\), \\(k \\V\\), using weights \\(\\rho_{ij} = \\hat \\Gamma_{ij}\\) makes better use data usually improves performance structure estimation significantly. Engelke Volgushev (2022) show empirical extremal correlation \\(\\rho_{ij} = \\hat \\chi_{ij}\\) may also used consistent tree recovery, performance typically inferior extremal variogram based algorithms. function emst() estimates extremal tree structure minimum spanning tree algorithm based different summary statistics extremal dependence. provides estimated tree implied extremal variogram matrix (3.2).","code":"# Fit tree grpah to the data emst_fit <- emst(data = Y, method = \"vario\")  # Compute likelihood/ICs, and plot fitted graph, parameters loglik_emst <- loglik_HR(     data = Y,     Gamma = emst_fit$Gamma,     graph = emst_fit$graph ) plotDanubeIGraph(graph = emst_fit$graph) plot_fitted_params(chi_hat, Gamma2chi(emst_fit$Gamma), xlab = 'Empirical')"},{"path":"/articles/applicationDanube.html","id":"hueslerreiss-graphical-models","dir":"Articles","previous_headings":"3 Extremal graphical models","what":"Huesler–Reiss graphical models","title":"Introduction and application to Danube data","text":"Hüsler–Reiss Pareto distribution \\(\\mathbf{Y}\\) parametrized variogram matrix \\(\\Gamma\\). Using linear transformation (2.4), obtain covariance matrix \\(\\Sigma^{(k)}\\) \\(k\\V\\). inverse, called precision matrix, denoted \\(\\Theta^{(k)}\\). Following Hentschel et al. (2022), \\((d-1) \\times (d-1)\\) matrices can combined \\(d \\times d\\) precision matrix \\(\\Theta\\) \\[\\begin{equation*}     \\Theta_{ij} = \\Theta^{(k)}_{ij} \\text{ } k \\neq ,j. \\end{equation*}\\] Engelke Hitz (2020) show matrix well-defined encodes extremal conditional independence zeros -diagonal: \\[\\begin{equation*}     Y_i\\perp_e Y_j\\mid \\mathbf{Y}_{V\\setminus \\{,j\\}} \\quad \\iff \\quad     \\Theta_{ij}= 0,  \\quad ,j \\V. \\end{equation*}\\]","code":""},{"path":"/articles/applicationDanube.html","id":"transformations","dir":"Articles","previous_headings":"3 Extremal graphical models > 3.2 Huesler–Reiss graphical models","what":"Transformations","title":"Introduction and application to Danube data","text":"Hüsler–Reiss distribution parameterized variogram matrix \\(\\Gamma\\), objects \\(\\Theta^{(k)}\\), \\(\\Sigma^{(k)}\\), \\(\\Theta\\), Moore–Penrose inverse \\(\\Sigma := \\Theta^+\\) often required, instance, identify extremal graphical structure. functions Gamma2Sigma(), Sigma2Gamma(), Gamma2Theta(), etc. perform transformations. Note function bijections. functions Gamma2graph(), Theta2graph() etc. create igraph::graph() object, represents corresponding extremal graph structure.","code":"Gamma <- cbind(     c(0, 1.5, 1.5, 2),     c(1.5, 0, 2, 1.5),     c(1.5, 2, 0, 1.5),     c(2, 1.5, 1.5, 0) ) Gamma2Sigma(Gamma, k = 1) #>      [,1] [,2] [,3] #> [1,]  1.5  0.5    1 #> [2,]  0.5  1.5    1 #> [3,]  1.0  1.0    2 Gamma2Theta(Gamma) #>      [,1] [,2] [,3] [,4] #> [1,]  1.0 -0.5 -0.5  0.0 #> [2,] -0.5  1.0  0.0 -0.5 #> [3,] -0.5  0.0  1.0 -0.5 #> [4,]  0.0 -0.5 -0.5  1.0 Gamma2graph(Gamma) #> IGRAPH fd232a1 U--- 4 4 --  #> + edges from fd232a1: #> [1] 1--2 1--3 2--4 3--4"},{"path":"/articles/applicationDanube.html","id":"completion-of-gamma","dir":"Articles","previous_headings":"3 Extremal graphical models > 3.2 Huesler–Reiss graphical models","what":"Completion of \\(\\Gamma\\)","title":"Introduction and application to Danube data","text":"Hüsler–Reiss graphical models suffices specify graph structure \\(G = (V,E)\\) entries parameter matrix \\(\\Gamma_{ij}\\) \\((,j) \\E\\). remaining entries matrix \\(\\Gamma\\) implied graph structure (Hentschel et al., 2022). function complete_Gamma() takes inputs partially specified \\(\\Gamma\\) matrix corresponding graph structure, completes \\(\\Gamma\\) matrix. mathematical theory completion different depending whether graph decomposable non-decomposable. simplest case tree, entries \\(\\Gamma_{ij}\\) \\((,j) \\notin E\\) can easily obtained additive tree metric property (3.2).  also works general decomposable graphs, matrix \\(\\Gamma\\) specified cliques. decomposable graphs, graph structure can also implied \\(\\Gamma_{ij} = \\text{NA}\\) \\((,j)\\notin E\\).  non-decomposable graphs, valid \\(\\Gamma\\) matrix undirected, connected graph provided.","code":"set.seed(42) my_tree <- generate_random_tree(d = 4) Gamma_vec <- c(.5, 1.4, .8) Gamma_comp <- complete_Gamma(Gamma = Gamma_vec, graph = my_tree) print(Gamma_comp) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.9  1.3 #> [2,]  0.5  0.0  1.4  0.8 #> [3,]  1.9  1.4  0.0  2.2 #> [4,]  1.3  0.8  2.2  0.0 plot(Gamma2graph(Gamma_comp)) G <- rbind(     c(0, 5, 7, 6, NA),     c(5, 0, 14, 15, NA),     c(7, 14, 0, 5, 5),     c(6, 15, 5, 0, 6),     c(NA, NA, 5, 6, 0) ) Gamma_comp <- complete_Gamma(Gamma = G) plot(Gamma2graph(Gamma_comp)) set.seed(42) G <- rbind(     c(0, 5, 7, 6, 6),     c(5, 0, 14, 15, 13),     c(7, 14, 0, 5, 5),     c(6, 15, 5, 0, 6),     c(6, 13, 5, 6, 0) ) my_graph <- generate_random_connected_graph(d = 5, m = 5) Gamma_comp <- complete_Gamma(Gamma = G, graph = my_graph) plot(Gamma2graph(Gamma_comp))"},{"path":"/articles/applicationDanube.html","id":"estimation-1","dir":"Articles","previous_headings":"3 Extremal graphical models > 3.2 Huesler–Reiss graphical models","what":"Estimation","title":"Introduction and application to Danube data","text":"Let us first suppose connected graph \\(G\\) given. data set, function fmpareto_graph_HR() fits Hüsler–Reiss graphical model graph \\(G\\). graph decomposable, parameters clique can fitted separately combined together full \\(\\Gamma\\) matrix. cliques small enough, (censored) maximum likelihood estimation feasible, otherwise empirical extremal variogram used. Combining clique estimates relies principle complete_Gamma() function, care required ensure \\(\\Gamma_{ij}\\) estimates consistent \\((,j)\\) belongs separator set two cliques.   graph \\(G\\) non-decomposable, empirical extremal variogram first computed fitted graph structure \\(G\\) using function complete_Gamma().","code":"set.seed(42) d <- 10 my_model <- generate_random_model(d = d, graph_type = \"decomposable\") plot(my_model$graph) Ysim <- rmpareto(n = 100, d = d, model = \"HR\", par = my_model$Gamma) my_fit <- fmpareto_graph_HR(data = Ysim, graph = my_model$graph, p = NULL) plot_fitted_params(Gamma2chi(my_model$Gamma), Gamma2chi(my_fit)) set.seed(1) d <- 20 my_model <- generate_random_model(d = d, graph_type = \"general\") plot(my_model$graph) Ysim <- rmpareto(n = 100, d = d, model = \"HR\", par = my_model$Gamma) my_fit <- fmpareto_graph_HR(data = Ysim, graph = my_model$graph, p = NULL, method = \"vario\") plot_fitted_params(Gamma2chi(my_model$Gamma), Gamma2chi(my_fit))"},{"path":"/articles/applicationDanube.html","id":"general-structure-learning","dir":"Articles","previous_headings":"3 Extremal graphical models > 3.2 Huesler–Reiss graphical models","what":"General structure learning","title":"Introduction and application to Danube data","text":"structure learning general, possibly non-decomposable graphs, can use eglearn method. Given estimate \\(\\widehat \\Gamma\\) parameter matrix, e.g., obtained emp_vario(), compute corresponding matrices \\(\\widehat \\Sigma^{(k)}\\) function Gamma2Sigma(). order enforce sparsity, compute \\(\\ell_1\\)-penalized precision matrices \\(k\\V\\). tuning parameter \\(\\rho\\geq 0\\) choice \\(k\\), estimated \\((d-1) \\times (d-1)\\) precision matrix \\[\\begin{align*}   \\widehat \\Theta^{(k)}_{\\rho} = \\underset{{\\Theta} \\succeq 0}{\\mathop{\\mathrm{arg\\,max}}} \\,\\,   \\log \\det{\\Theta}-\\operatorname{tr}(\\widehat \\Sigma^{(k)}\\Theta) -\\rho \\sum_{\\substack{\\neq j \\\\ ,j\\neq k}} \\left|\\Theta_{ij}\\right|. \\end{align*}\\] Since run \\(d\\) different graphical lasso algorithms \\(k\\)th enforces sparsity edges involve \\(k\\)th node, determine estimated graph structure \\(\\widehat{G}_\\rho = (\\widehat E_\\rho,V)\\) majority vote: \\[ (,j) \\\\widehat E_\\rho \\quad \\Leftrightarrow \\quad \\frac1{d-2} \\# \\left\\{k \\V \\setminus \\{,j\\}: \\right(\\widehat\\Theta^{(k)}_\\rho \\left)_{ij} \\neq 0 \\right\\} \\geq 1/2.\\] best parameter \\(\\rho\\) can chosen instance minimizer BIC resulting models. extremal graphical lasso implemented eglearn() function. returns (sequence) estimated graphs , desired, corresponding \\(\\widehat \\Gamma_\\rho\\) estimates.","code":"# Run eglearn for a suitable list of penalization parameters rholist <- seq(0, 0.1, length.out = 11) eglearn_fit <- eglearn(     data = Y,     rholist = rholist,     complete_Gamma = TRUE )  # Compute the corresponding likelihoods/ICs logliks_eglearn <- sapply(     seq_along(rholist),     FUN = function(j) {         Gamma <- eglearn_fit$Gamma[[j]]         if(is.null(Gamma)) return(c(NA, NA, NA))         loglik_HR(             data = Y,             Gamma = Gamma,             graph = eglearn_fit$graph[[j]]         )     } )  # Plot the BIC vs rho/number of edges ggplot(mapping = aes(x = rholist, y = logliks_eglearn['bic', ])) +     geom_line() +     geom_point(shape = 21, size = 3, stroke = 1, fill = \"white\") +     geom_hline(aes(yintercept = flow_loglik['bic']), lty = \"dashed\") +     geom_hline(aes(yintercept = loglik_emst['bic']), lty = \"dotted\") +     xlab(\"rho\") +     ylab(\"BIC\") +     scale_x_continuous(         breaks = rholist,         labels = round(rholist, 3),         sec.axis = sec_axis(             trans = ~., breaks = rholist,             labels = sapply(eglearn_fit$graph, igraph::gsize),             name = \"Number of edges\"         )     ) # Compare fitted chi to empirical one best_index <- which.min(logliks_eglearn['bic', ]) best_Gamma <- eglearn_fit$Gamma[[best_index]] best_graph <- eglearn_fit$graph[[best_index]] plotDanubeIGraph(graph = best_graph) plot_fitted_params(chi_hat, Gamma2chi(best_Gamma), xlab='Empirical')"},{"path":[]},{"path":"/articles/applicationFlights.html","id":"the-dataset","dir":"Articles","previous_headings":"","what":"The dataset","title":"Application to flight data","text":"flights dataset contains daily total delays major U.S. airlines. details, see corresponding documentation page. , plot airports dataset.  perform example application, follow Section 6 Hentschel et al. (2022). subset airports analyzed obtained previous clustering step, whose results available function getFlightDelayData(). detailed explanations individual methods see Vignette “applicationDanube” help pages applied functions. Note: Due size restrictions, CRAN version package contains part full dataset. version package complete dataset available GitHub.  hyperparameter tuning model comparison purposes, use train-test-split, utilizing data estimate graph structure parameter matrix, remaining data compute likelihood value. function used later compare fitted parameters empirical ones.","code":"library(graphicalExtremes) library(ggplot2) library(igraph) plotFlights(plotConnections = FALSE, map = \"world\", xyRatio = 2) # Get IATAs from Texas cluster IATAs <- getFlightDelayData('IATAs', 'tcCluster')  # Plot airports + connections (indicating number of flights by thickness) plotFlights(     IATAs,     useAirportNFlights = TRUE,     useConnectionNFlights = TRUE ) # Check whether all dates from the train-test-split are available # (due to size restrictions, the CRAN version of this package does not contain all dates) allDatesAvailable <- tryCatch({     getFlightDelayData('dates', dateFilter = c('tcAll'))     TRUE }, error = function(...) FALSE) cat('All dates avilable:', allDatesAvailable, '\\n') #> All dates avilable: TRUE  # Create train and test data sets if(allDatesAvailable){     # Use train-test-split and threshold p from article     matEst <- drop(getFlightDelayData('delays', 'tcCluster', 'tcTrain'))     matVal <- drop(getFlightDelayData('delays', 'tcCluster', 'tcTest'))     p <- 0.95 } else {     # Take all available dates that do not contain NAs     mat <- drop(getFlightDelayData('delays', 'tcCluster', 'all'))     rowHasNA <- apply(is.na(mat), 1, any)     mat <- mat[!rowHasNA, ]          # Split dates in half     splitInd <- floor(nrow(mat)/2)     matEst <- mat[1:splitInd,]     matVal <- mat[(splitInd+1):nrow(mat),]          # Use a lower threshold to compensate for the smaller dataset     p <- 0.8 } # Compute the empirical extremal correlation matrix emp_chi_mat <- emp_chi(matEst, p = p)  # Utility function to plot fitted parameters against true/empirical ones plot_fitted_params <- function(G0, G1, xlab = 'Empirical', ylab = 'Fitted'){     return(         ggplot()         + geom_point(aes(             x = G0[upper.tri(G0)],             y = G1[upper.tri(G1)]         ))         + geom_abline(slope = 1, intercept = 0)         + xlab(xlab)         + ylab(ylab)     ) }"},{"path":"/articles/applicationFlights.html","id":"fitting-a-model-to-the-flight-graph","dir":"Articles","previous_headings":"","what":"Fitting a model to the flight graph","title":"Application to flight data","text":"baseline graphical modelling, consider graph edges representing least monthly connections airports.  Given flight_graph object, fit Hüsler–Reiss model graphical structure.","code":"# Compute undirected flights per connection between selected airports nYears <- dim(flights$flightCounts)[3] flightsPerConnection <- apply(flights$flightCounts[IATAs,IATAs,], c(1, 2), sum) flightsPerConnectionUD <- flightsPerConnection + t(flightsPerConnection)  # Make flight graph from adjacency matrix A <- 1 * (flightsPerConnectionUD > nYears * 12) flight_graph <- graph_from_adjacency_matrix(A, diag = FALSE, mode = \"undirected\")  # Plot flight graph plotFlights(IATAs, graph = flight_graph, clipMap = 1.3, xyRatio = 1) # Fit the model model_fit <- fmpareto_graph_HR(     data = matEst,     graph = flight_graph,     p = p,     method = \"vario\" )  # Compute likelihood/ICs flights_loglik_graph <- loglik_HR(     data = matVal,     p = p,     graph = flight_graph,     Gamma = model_fit ) cat(\"Flight graph test-loglikelihood =\", round(flights_loglik_graph['loglik'], 2), \"\\n\") #> Flight graph test-loglikelihood = 536.05  # Plot fitted parameters plot_fitted_params(emp_chi_mat, Gamma2chi(model_fit))"},{"path":"/articles/applicationFlights.html","id":"fitting-a-tree-model","dir":"Articles","previous_headings":"","what":"Fitting a tree model","title":"Application to flight data","text":"Next, fit extremal tree model flight delays using emst().","code":"# Fit the model flights_emst_fit <- emst(data = matEst, p = p, method = \"vario\")  # Compute likelihood/ICs flights_loglik_tree <- loglik_HR(     data = matVal,     p = p,     Gamma = flights_emst_fit$Gamma,     graph = flights_emst_fit$graph ) cat(\"Tree test-loglikelihood =\", round(flights_loglik_tree['likelihood'], 2), \"\\n\") #> Tree test-loglikelihood = NA  # Plot fitted graph, parameters plotFlights(     IATAs,     graph = flights_emst_fit$graph,     xyRatio = 1,     clipMap = 1.3 ) plot_fitted_params(emp_chi_mat, Gamma2chi(flights_emst_fit$Gamma))"},{"path":"/articles/applicationFlights.html","id":"fitting-a-general-model","dir":"Articles","previous_headings":"","what":"Fitting a general model","title":"Application to flight data","text":"Lastly, fit general graphical model eglearn(), using suitable list penalization parameters. “best” penalization parameter can chosen e.g. test-likelihood maximized  plot estimated graph parameters best fitted model.","code":"# Fit the model rholist <- seq(0, 0.50, length.out = 11) flights_eglearn_fit <- eglearn(matEst, p = p, rholist = rholist, complete_Gamma = TRUE)  # Compute likelihood/ICs flights_loglik <- sapply(seq_along(rholist), FUN = function(j) {     loglik_HR(         data = matVal,         p = p,         Gamma = flights_eglearn_fit$Gamma[[j]],         graph = flights_eglearn_fit$graph[[j]]     ) }) ggplot(     mapping = aes(x = rholist, y = flights_loglik['loglik', ])) +     geom_line() +     geom_point(shape = 21, size = 3, stroke = 1, fill = \"white\") +     geom_hline(aes(yintercept = flights_loglik_graph['loglik']), lty = \"dashed\") +     geom_hline(aes(yintercept = flights_loglik_tree['loglik']), lty = \"dotted\") +     xlab(\"rho\") +     ylab(\"Log-likelihood\") +     scale_x_continuous(         breaks = rholist,         labels = round(rholist, 3),         sec.axis = sec_axis(             trans = ~., breaks = rholist,             labels = sapply(                 flights_eglearn_fit$graph,                 igraph::gsize             ),             name = \"Number of edges\"         ) ) #> Warning: The `trans` argument of `sec_axis()` is deprecated as of ggplot2 3.5.0. #> ℹ Please use the `transform` argument instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. best_index <- which.max(flights_loglik['loglik',]) cat('Best rho =', rholist[best_index], '\\n') #> Best rho = 0.15 cat('Corresponding test-loglikelihood =', flights_loglik['loglik', best_index]) #> Corresponding test-loglikelihood = 1123.402 best_graph <- flights_eglearn_fit$graph[[best_index]] best_Gamma <- flights_eglearn_fit$Gamma[[best_index]] plotFlights(IATAs, graph = best_graph, clipMap = 1.3, xyRatio = 1) plot_fitted_params(emp_chi_mat, Gamma2chi(best_Gamma))"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Engelke. Author, maintainer. Adrien S. Hitz. Author. Nicola Gnecco. Author. Manuel Hentschel. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Engelke S, Hitz , Gnecco N, Hentschel M (2024). graphicalExtremes: Statistical Methodology Graphical Extreme Value Models. R package version 0.3.2, https://github.com/sebastian-engelke/graphicalExtremes.","code":"@Manual{,   title = {graphicalExtremes: Statistical Methodology for Graphical Extreme Value Models},   author = {Sebastian Engelke and Adrien S. Hitz and Nicola Gnecco and Manuel Hentschel},   year = {2024},   note = {R package version 0.3.2},   url = {https://github.com/sebastian-engelke/graphicalExtremes}, }"},{"path":"/index.html","id":"graphical-extremes","dir":"","previous_headings":"","what":"Statistical Methodology for Graphical Extreme Value Models","title":"Statistical Methodology for Graphical Extreme Value Models","text":"implementation statistical methodology paper Engelke Hitz (2020) sparse multivariate extreme value models. Includes exact simulation algorithms statistical inference methods multivariate Pareto distributions graphical structures. Contains also implementations statistical methods Engelke Volgushev (2022), Röttger et al. (2021), Engelke et al. (2022), Hentschel et al. (2022), Engelke Taeb (2024), well data sets Asadi et al. (2015) Hentschel et al. (2022).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Statistical Methodology for Graphical Extreme Value Models","text":"latest CRAN version can installed using: latest GitHub version can installed using:","code":"install.packages(\"graphicalExtremes\") # install.packages(\"devtools\") devtools::install_github(\"sebastian-engelke/graphicalExtremes\")"},{"path":[]},{"path":"/reference/Gamma2chi_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"Computes theoretical \\(\\chi\\) coefficient 3 dimensions.","code":""},{"path":"/reference/Gamma2chi_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"","code":"Gamma2chi_3D(Gamma)"},{"path":"/reference/Gamma2chi_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"Gamma Numeric \\(3 \\times 3\\) matrix.","code":""},{"path":"/reference/Gamma2chi_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"3-dimensional \\(\\chi\\) coefficient, .e., extremal correlation coefficient HR distribution. Note \\(0 \\leq \\chi \\leq 1\\).","code":""},{"path":"/reference/V_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute exponent measure — V_HR","title":"Compute exponent measure — V_HR","text":"Computes exponent measure HR distribution.","code":""},{"path":"/reference/V_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute exponent measure — V_HR","text":"","code":"V_HR(x, Gamma = NULL, Theta = NULL)"},{"path":"/reference/V_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute exponent measure — V_HR","text":"x Numeric vector d positive elements exponent measure evaluated. Gamma d x d variogram matrix numeric vector d(d-1)/2 elements, containing upper triangular part variogram matrix. Theta d x d precision matrix numeric vector d(d-1)/2 elements, containing upper triangular part precision matrix.","code":""},{"path":"/reference/V_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute exponent measure — V_HR","text":"Numeric. exponent measure HR distribution.","code":""},{"path":"/reference/V_HR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute exponent measure — V_HR","text":"Gamma needed computation. Theta used compute Gamma necessary.","code":""},{"path":"/reference/Zmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Z-matrix — Zmatrix","title":"Computes the Z-matrix — Zmatrix","text":"Copied R package \"golazo\" kind permission Piotr Zwiernik piotr.zwiernik@utoronto.ca. function outputs Z matrix, , unique ultrametric matrix dominating S. matrix used construct starting point GOLAZO algorithm L=0 U strictly positive (-diagonal entries).","code":""},{"path":"/reference/Zmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Z-matrix — Zmatrix","text":"","code":"Zmatrix(S)"},{"path":"/reference/Zmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Z-matrix — Zmatrix","text":"S covariance matrix","code":""},{"path":"/reference/censor.html","id":null,"dir":"Reference","previous_headings":"","what":"Censor dataset — censor","title":"Censor dataset — censor","text":"Censors row matrix x vector p.","code":""},{"path":"/reference/censor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Censor dataset — censor","text":"","code":"censor(x, p)"},{"path":"/reference/censor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Censor dataset — censor","text":"x Numeric \\(n \\times d\\) matrix. p Numeric vector d elements.","code":""},{"path":"/reference/censor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Censor dataset — censor","text":"Numeric \\(n \\times d\\) matrix.","code":""},{"path":"/reference/checkGamma.html","id":null,"dir":"Reference","previous_headings":"","what":"HR parameter matrix checks — checkGamma","title":"HR parameter matrix checks — checkGamma","text":"Checks whether matrix given valid Huesler-Reiss parameter matrix role \\(\\Gamma\\), \\(\\Theta\\), \\(\\Sigma\\), respectively.","code":""},{"path":"/reference/checkGamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HR parameter matrix checks — checkGamma","text":"","code":"checkGamma(Gamma, alert = NULL, tol = get_small_tol(), returnBoolean = FALSE)  checkSigmaTheta(   M,   k,   full,   matrixName = \"Sigma\",   tol = get_small_tol(),   alert = NULL,   returnBoolean = FALSE )  checkTheta(   Theta,   k = NULL,   full = FALSE,   tol = get_small_tol(),   alert = NULL,   returnBoolean = FALSE )  checkSigma(   Sigma,   k = NULL,   full = FALSE,   tol = get_small_tol(),   alert = NULL,   returnBoolean = FALSE )  checkMatrix(   M,   name = c(\"Gamma\", \"Sigma\", \"Theta\")[1],   k = NULL,   full = FALSE,   tol = get_small_tol(),   alert = NULL,   returnBoolean = FALSE )  is_valid_Gamma(M, tol = get_small_tol())  is_valid_Theta(Theta, k = NULL, full = FALSE, tol = get_small_tol())  is_valid_Sigma(Sigma, k = NULL, full = FALSE, tol = get_small_tol())"},{"path":"/reference/checkGamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HR parameter matrix checks — checkGamma","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. alert Passed get_alert_function: NULL TRUE read option value, FALSE return dummy function, function takes arbitrary number strings arguments (e.g. stop()). tol Numeric scalar. Values considered zero, zeros required (e.g. row-sums). returnBoolean Logical scalar, set TRUE return boolean instead (adjusted) input. M Numeric matrix, \\(\\Gamma\\), \\(\\Sigma\\), \\(\\Theta\\). k NULL input/output matrix \\(\\Sigma\\)/\\(\\Theta\\). Else, integer 1 d indicating value k \\(\\Sigma^k\\), \\(\\Theta^k\\). full Logical. TRUE !.null(k), input/output matrix \\(d \\times d\\) matrix kth row filled zeros. matrixName Name matrix used alerts/error messages. Theta Numeric \\(d \\times d\\) \\((d-1) \\times (d-1)\\) precision matrix. Sigma Numeric \\(d \\times d\\) \\((d-1) \\times (d-1)\\) covariance matrix. name Name input matrix, indicating function call.","code":""},{"path":"/reference/checkGamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HR parameter matrix checks — checkGamma","text":"check*, input matrix, passed ensure_matrix_symmetry_and_truncate_zeros. is_valid_*, boolean indicating whether input valid parameter matrix.","code":""},{"path":"/reference/checkGamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HR parameter matrix checks — checkGamma","text":"function is_valid_* wrapper around check*, arguments alert=FALSE returnBoolean=TRUE.","code":""},{"path":[]},{"path":"/reference/check_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input graph — check_graph","title":"Check input graph — check_graph","text":"Checks input graph valid graph extremal graphical model. necessary, converts graph undirected graph. Removes vertex labels present.","code":""},{"path":"/reference/check_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input graph — check_graph","text":"","code":"check_graph(   graph,   graph_type = c(\"general\", \"decomposable\", \"block\", \"tree\"),   check_connected = TRUE,   nVertices = NULL )"},{"path":"/reference/check_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input graph — check_graph","text":"graph [igraph::graph] object. graph_type \"general\", \"decomposable\", \"block\", \"tree\". required type graph. check_connected Whether check graph connected. nVertices number vertices required graph.","code":""},{"path":"/reference/check_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input graph — check_graph","text":"given graph, necessary converted undirected. graph valid error thrown.","code":""},{"path":[]},{"path":"/reference/check_partial_matrix_and_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input graph and partial matrix — check_partial_matrix_and_graph","title":"Check input graph and partial matrix — check_partial_matrix_and_graph","text":"Checks converts partial matrix graph given HR graphical model.","code":""},{"path":"/reference/check_partial_matrix_and_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input graph and partial matrix — check_partial_matrix_and_graph","text":"","code":"check_partial_matrix_and_graph(M, graph = NULL, graph_type = \"general\")"},{"path":"/reference/check_partial_matrix_and_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input graph and partial matrix — check_partial_matrix_and_graph","text":"M partial matrix vector entries corresponding edges graph graph graph object NULL graph structure implied NA structure M graph_type Passed check_graph().","code":""},{"path":"/reference/check_partial_matrix_and_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input graph and partial matrix — check_partial_matrix_and_graph","text":"list consisting matrix matrix given input implied input graph graph given input implied input Throws error input valid.","code":""},{"path":[]},{"path":"/reference/check_split_by_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify pairs of vertices that are split by a separator — check_split_by_sep","title":"Identify pairs of vertices that are split by a separator — check_split_by_sep","text":"Identify pairs vertices split separator","code":""},{"path":"/reference/check_split_by_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify pairs of vertices that are split by a separator — check_split_by_sep","text":"","code":"check_split_by_sep(graph, sep, edgeMat)"},{"path":"/reference/check_split_by_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify pairs of vertices that are split by a separator — check_split_by_sep","text":"graph graph sep set vertex ids used split graph edgeMat two-column matrix, containing vertex-paris checked","code":""},{"path":"/reference/check_split_by_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify pairs of vertices that are split by a separator — check_split_by_sep","text":"logical vector, indicating edge whether split sep","code":""},{"path":"/reference/chi2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation between \\(\\chi\\) and \\(\\Gamma\\) — chi2Gamma","title":"Transformation between \\(\\chi\\) and \\(\\Gamma\\) — chi2Gamma","text":"Transforms extremal correlation \\(\\chi\\) variogram \\(\\Gamma\\). valid Huesler-Reiss distributions. Done element-wise, checks entire matrix structure performed.","code":""},{"path":"/reference/chi2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation between \\(\\chi\\) and \\(\\Gamma\\) — chi2Gamma","text":"","code":"chi2Gamma(chi)  Gamma2chi(Gamma)"},{"path":"/reference/chi2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation between \\(\\chi\\) and \\(\\Gamma\\) — chi2Gamma","text":"chi Numeric vector matrix entries 0 1. Gamma Numeric vector matrix non-negative entries.","code":""},{"path":"/reference/chi2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation between \\(\\chi\\) and \\(\\Gamma\\) — chi2Gamma","text":"Numeric vector matrix containing implied \\(\\Gamma\\). Numeric vector matrix containing implied \\(\\chi\\).","code":""},{"path":"/reference/chi2Gamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation between \\(\\chi\\) and \\(\\Gamma\\) — chi2Gamma","text":"formula transformation \\(\\chi\\) \\(\\Gamma\\) element-wise $$\\Gamma = (2 \\Phi^{-1}(1 - 0.5 \\chi))^2,$$ \\(\\Phi^{-1}\\) inverse standard normal distribution function. formula transformation \\(\\Gamma\\) \\(\\chi\\) element-wise $$\\chi = 2 - 2 \\Phi(\\sqrt{\\Gamma} / 2),$$ \\(\\Phi\\) standard normal distribution function.","code":""},{"path":[]},{"path":"/reference/complete_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of Gamma matrices — complete_Gamma","title":"Completion of Gamma matrices — complete_Gamma","text":"Given graph (partial) variogram matrix Gamma, returns full variogram matrix agrees Gamma entries corresponding edges graph whose corresponding precision matrix, obtained Gamma2Theta(), zeros entries corresponding non-edges graph. results existence uniqueness completion, see Hentschel et al. (2022) .","code":""},{"path":"/reference/complete_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of Gamma matrices — complete_Gamma","text":"","code":"complete_Gamma(Gamma, graph = NULL, ...)"},{"path":"/reference/complete_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completion of Gamma matrices — complete_Gamma","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. graph NULL igraph::graph object. NULL, graph implied non-edge entries Gamma NA. Must connected, undirected. ... arguments passed complete_Gamma_general_split() graph decomposable","code":""},{"path":"/reference/complete_Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completion of Gamma matrices — complete_Gamma","text":"Completed \\(d \\times d\\) variogram matrix.","code":""},{"path":"/reference/complete_Gamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Completion of Gamma matrices — complete_Gamma","text":"graph decomposable, Gamma needs specified edges graph, entries ignored. graph decomposable, graphical completion algorithm requires fully specified (non-graphical) variogram matrix Gamma begin . necessary, initial completion computed using edmcr::npf().","code":""},{"path":"/reference/complete_Gamma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Completion of Gamma matrices — complete_Gamma","text":"Hentschel M, Engelke S, Segers J (2022). “Statistical Inference Hüsler-Reiss Graphical Models Matrix Completions.” doi:10.48550/ARXIV.2210.14292 , https://arxiv.org/abs/2210.14292.","code":""},{"path":[]},{"path":"/reference/complete_Gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Completion of Gamma matrices — complete_Gamma","text":"","code":"## Block graph: Gamma <- rbind(   c(0, .5, NA, NA),   c(.5, 0, 1, 1.5),   c(NA, 1, 0, .8),   c(NA, 1.5, .8, 0) )  complete_Gamma(Gamma) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.5  2.0 #> [2,]  0.5  0.0  1.0  1.5 #> [3,]  1.5  1.0  0.0  0.8 #> [4,]  2.0  1.5  0.8  0.0  ## Alternative representation of the same completion problem: my_graph <- igraph::graph_from_adjacency_matrix(rbind(   c(0, 1, 0, 0),   c(1, 0, 1, 1),   c(0, 1, 0, 1),   c(0, 1, 1, 0) ), mode = \"undirected\") Gamma_vec <- c(.5, 1, 1.5, .8) complete_Gamma(Gamma_vec, my_graph) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.5  2.0 #> [2,]  0.5  0.0  1.0  1.5 #> [3,]  1.5  1.0  0.0  0.8 #> [4,]  2.0  1.5  0.8  0.0  ## Decomposable graph: G <- rbind( c(0, 5, 7, 6, NA), c(5, 0, 14, 15, NA), c(7, 14, 0, 5, 5), c(6, 15, 5, 0, 6), c(NA, NA, 5, 6, 0) )  complete_Gamma(G) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  0.0  5.0    7    6  9.6 #> [2,]  5.0  0.0   14   15 17.4 #> [3,]  7.0 14.0    0    5  5.0 #> [4,]  6.0 15.0    5    0  6.0 #> [5,]  9.6 17.4    5    6  0.0  ## Non-decomposable graph: G <- rbind( c(0, 5, 7, 6, 6), c(5, 0, 14, 15, 13), c(7, 14, 0, 5, 5), c(6, 15, 5, 0, 6), c(6, 13, 5, 6, 0) ) g <- igraph::make_ring(5)  complete_Gamma(G, g) #>          [,1]      [,2]      [,3]     [,4]     [,5] #> [1,]  0.00000  5.000000 12.723425 10.37104 6.000000 #> [2,]  5.00000  0.000000 14.000000 12.72342 9.676194 #> [3,] 12.72342 14.000000  0.000000  5.00000 9.676194 #> [4,] 10.37104 12.723425  5.000000  0.00000 6.000000 #> [5,]  6.00000  9.676194  9.676194  6.00000 0.000000"},{"path":"/reference/complete_Gamma_decomposable.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"Given decomposable graph incomplete variogram matrix Gamma, returns full Gamma matrix implied conditional independencies.","code":""},{"path":"/reference/complete_Gamma_decomposable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"","code":"complete_Gamma_decomposable(Gamma, graph = NULL)"},{"path":"/reference/complete_Gamma_decomposable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"Gamma variogram matrix specified edges graph diagonals. entries ignored (graph specified), NA indicate non-edges graph. graph NULL decomposable [igraph::graph] object. NULL, structure NA entries Gamma used instead.","code":""},{"path":"/reference/complete_Gamma_decomposable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"complete variogram matrix agrees Gamma entries corresponding edges graph diagonals. corresponding \\(\\Theta\\) matrix produced Gamma2Theta() zeros remaining entries.","code":""},{"path":[]},{"path":"/reference/complete_Gamma_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-decomposable completion of variogram matrices — complete_Gamma_general","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general","text":"Given non-decomposable graph, (non-graphical) variogram matrix Gamma, modifies Gamma non-edge entries, resulting matrix variogram matrix graphical structure described graph.","code":""},{"path":"/reference/complete_Gamma_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general","text":"","code":"complete_Gamma_general(   Gamma,   graph,   N = 10000,   tol = get_large_tol(),   check_tol = 100 )"},{"path":"/reference/complete_Gamma_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. graph igraph::graph() object. N Maximum number iterations. tol Numeric scalar. Tolerance used completing submatrices. check_tol Numeric/integer scalar. often check tolerance completing submatrices.","code":""},{"path":"/reference/complete_Gamma_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general","text":"completed \\(d \\times d\\) variogram matrix.","code":""},{"path":[]},{"path":"/reference/complete_Gamma_general_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","title":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","text":"Given graph variogram matrix Gamma, returns full Gamma matrix implied conditional independencies. DEMO VERSION: Returns lot details allows specifying graph list used. way slower functions.","code":""},{"path":"/reference/complete_Gamma_general_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","text":"","code":"complete_Gamma_general_demo(Gamma, graph, N = 1000, tol = 0, gList = NULL)"},{"path":"/reference/complete_Gamma_general_demo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","text":"Gamma complete variogram matrix (without graphical structure). graph igraph::graph object. N maximal number iterations algorithm. tol tolerance use checking zero entries Theta. gList list graphs used instead output make_sep_list().","code":""},{"path":"/reference/complete_Gamma_general_demo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","text":"nested list, containing following details. \"error term\" maximal absolute value Theta non-edge entry. graph, N, tol input gList input computed make_sep_list(). Gamma0, Theta0, err0 Initial Gamma, Theta, error term. iterations nested list, containing following infos performed iteration: n Number iteration t Corresponding index gList g graph used Gamma, Theta, err value Gamma, Theta, error term iteration","code":""},{"path":[]},{"path":"/reference/complete_Gamma_general_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","text":"Given non-decomposable graph, (non-graphical) variogram matrix Gamma, modifies Gamma non-edge entries, resulting matrix variogram matrix graphical structure described graph. splitting graph complete separators smaller subgraphs, calling complete_Gamma_general subgraph/submatrix, using multiple cores available.","code":""},{"path":"/reference/complete_Gamma_general_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","text":"","code":"complete_Gamma_general_split(   Gamma,   graph,   N = 10000,   sub_tol = get_large_tol() * 0.001,   check_tol = 100,   mc_cores_overwrite = NULL,   final_tol = get_large_tol() )"},{"path":"/reference/complete_Gamma_general_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. graph igraph::graph() object. N Maximum number iterations. sub_tol Numeric scalar. Tolerance used completing submatrices. smaller final_tol. check_tol Numeric/integer scalar. often check tolerance completing submatrices. mc_cores_overwrite NULL numeric/integer scalar. Maximal number cores use. final_tol Numeric scalar. Check convergence final result tolerance. Skipped value < 0.","code":""},{"path":"/reference/complete_Gamma_general_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","text":"completed \\(d \\times d\\) variogram matrix.","code":""},{"path":[]},{"path":"/reference/complete_Gamma_one_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","title":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","text":"Given decomposable graph consisting two cliques incomplete variogram matrix Gamma, returns full Gamma matrix implied conditional independencies. rows/columns Gamma must ordered clique size nA (excluding separator) comes first, separator size nC, remaining nB vertices.","code":""},{"path":"/reference/complete_Gamma_one_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","text":"","code":"complete_Gamma_one_step(Gamma, nA, nC, nB)"},{"path":"/reference/computeLimits.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute plot limits — computeLimits","title":"Compute plot limits — computeLimits","text":"Helper function compute axis limits plot given x, y data optionally fixed x-y-ratio correcting latitude/longitude scale different latitudes","code":""},{"path":"/reference/computeLimits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute plot limits — computeLimits","text":"","code":"computeLimits(xData, yData, xyRatio = 1, convertLatLong = TRUE, stretch = 1)"},{"path":"/reference/danube.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper Danube basin dataset — danube","title":"Upper Danube basin dataset — danube","text":"dataset containing river discharge data tributaries Danube.","code":""},{"path":"/reference/danube.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper Danube basin dataset — danube","text":"","code":"danube"},{"path":"/reference/danube.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Upper Danube basin dataset — danube","text":"named list four entries data_clustered numeric matrix, containing pre-processed discharge data gauging station data_raw numeric matrix, containing daily (raw) discharge data gauging station info data frame, containing information gauging station flow_edges two-column numeric matrix. row contains indices (info) pair gauging stations directly connected river.","code":""},{"path":"/reference/danube.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Upper Danube basin dataset — danube","text":"Bavarian Environmental Agency https://www.gkd.bayern.de.","code":""},{"path":"/reference/danube.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upper Danube basin dataset — danube","text":"obtain matrix data_clustered, daily discharge data summer months 1960 2010, given data_raw, declustered, yielding seven ten observations per year. row corresponds one observation declustered time series, non-unique rownames indicate year observation . column corresponds one gauging stations, column indices data_raw/data_clustered corresponding row indices info. See (Asadi et al. 2015)  details preprocessing declustering. info data frame containing following information gauging stations corresponding catchment area: RivNames Name river gauging station Lat, Long Coordinates gauging station Lat_Center, Long_Center Coordinates center catchment corresponding gauging station Alt Mean altitude catchment Area Area catchment corresponding gauging station Slope Mean slope catchment PlotCoordX, PlotCoordY X-Y-coordinates can used arrange gauging stations plotting flow graph.","code":""},{"path":"/reference/danube.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Upper Danube basin dataset — danube","text":"Asadi P, Davison AC, Engelke S (2015). “Extremes river networks.” Ann. Appl. Stat., 9(4), 2023 -- 2050. doi:10.1214/15-AOAS863 .","code":""},{"path":[]},{"path":"/reference/danube.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upper Danube basin dataset — danube","text":"","code":"dim(danube$data_clustered) #> [1] 428  31 colnames(danube$info) #>  [1] \"RivNames\"    \"Lat\"         \"Long\"        \"AveVol\"      \"Lat_Center\"  #>  [6] \"Long_Center\" \"Alt\"         \"Area\"        \"Chos\"        \"Density\"     #> [11] \"Slope\"       \"PlotCoordX\"  \"PlotCoordY\""},{"path":"/reference/data2mpareto.html","id":null,"dir":"Reference","previous_headings":"","what":"Data standardization to multivariate Pareto scale — data2mpareto","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"Transforms data matrix empirically multivariate Pareto scale.","code":""},{"path":"/reference/data2mpareto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"","code":"data2mpareto(data, p, na.rm = FALSE)"},{"path":"/reference/data2mpareto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric 0 1. Probability used quantile threshold data. na.rm Logical. rows containing NAs removed.","code":""},{"path":"/reference/data2mpareto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"Numeric \\(m \\times d\\) matrix, m number rows original data matrix threshold.","code":""},{"path":"/reference/data2mpareto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"columns data matrix first transformed empirically standard Pareto distributions. , observations least one component exceeds p-quantile standard Pareto distribution kept. observations finally divided p-quantile standard Pareto distribution standardize multivariate Pareto scale. na.rm FALSE, missing entries left transformation univariate marginals. thresholding step, missing values considered -Inf.","code":""},{"path":[]},{"path":"/reference/data2mpareto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"","code":"n <- 20 d <- 4 p <- .8 G <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  set.seed(123) my_data <- rmstable(n, \"HR\", d = d, par = G) data2mpareto(my_data, p) #>            [,1]      [,2]      [,3]      [,4] #>  [1,] 0.2470588 0.4200000 1.4000000 0.7000000 #>  [2,] 1.0500000 0.6000000 0.3500000 0.2333333 #>  [3,] 0.6000000 0.3230769 1.0500000 0.3000000 #>  [4,] 0.7000000 0.5250000 0.8400000 1.4000000 #>  [5,] 2.1000000 1.4000000 0.6000000 0.6000000 #>  [6,] 0.4666667 0.3000000 0.2210526 2.1000000 #>  [7,] 0.3818182 2.1000000 0.3818182 1.0500000 #>  [8,] 1.4000000 0.8400000 4.2000000 0.4666667 #>  [9,] 4.2000000 1.0500000 2.1000000 4.2000000 #> [10,] 0.3230769 4.2000000 0.2100000 0.2470588"},{"path":"/reference/eglatent.html","id":null,"dir":"Reference","previous_headings":"","what":"Learning extremal graph structure with latent variables — eglatent","title":"Learning extremal graph structure with latent variables — eglatent","text":"Following methodology Engelke Taeb (2024) , fits extremal graph structure latent variables.","code":""},{"path":"/reference/eglatent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learning extremal graph structure with latent variables — eglatent","text":"","code":"eglatent(   Gamma,   lam1_list = c(0.1, 0.15, 0.19, 0.205),   lam2_list = c(2),   refit = TRUE,   verbose = FALSE )"},{"path":"/reference/eglatent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learning extremal graph structure with latent variables — eglatent","text":"Gamma conditionally negative semidefinite matrix. typically empirical variogram matrix. lam1_list Numeric vector non-negative regularization parameters eglatent. Default lam1_list = c(0.1, 0.15, 0.19, 0.205). lam2_list Numeric vector non-negative regularization parameters eglatent. Default lam2_list = c(2). refit Logical scalar, TRUE model refit estimated graph obtain estimate Gamma matrix graph. Default refit = TRUE. verbose Logical scalar, indicating whether print progress updates.","code":""},{"path":"/reference/eglatent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Learning extremal graph structure with latent variables — eglatent","text":"function fits one model combination values lam1_list lam2_list. returned objects one entry per model. List consisting : #' graph list igraph::graph objects representing fitted graphs. rk Numeric vector containing estimated ranks latent variables. G_est list numeric estimated \\(d \\times d\\) variogram matrices \\(\\Gamma\\) corresponding fitted graphs. G_refit list numeric estimated \\(d \\times d\\) variogram matrices \\(\\Gamma\\) refitted fixed graphs corresponding fitted graphs. lambdas list containing values lam1_list lam2_list used model fit.","code":""},{"path":"/reference/eglatent.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Learning extremal graph structure with latent variables — eglatent","text":"Engelke S, Taeb (2024). “Extremal graphical modeling latent variables.” 2403.09604.","code":""},{"path":[]},{"path":"/reference/eglearn.html","id":null,"dir":"Reference","previous_headings":"","what":"Learning extremal graph structure — eglearn","title":"Learning extremal graph structure — eglearn","text":"Following methodology Engelke et al. (2022) , fits extremal graph structure using neighborhood selection approach (see Meinshausen Bühlmann (2006) ) graphical lasso (see Friedman et al. (2008) ).","code":""},{"path":"/reference/eglearn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learning extremal graph structure — eglearn","text":"","code":"eglearn(   data,   p = NULL,   rholist = c(0.1, 0.15, 0.19, 0.205),   reg_method = c(\"ns\", \"glasso\"),   complete_Gamma = FALSE )"},{"path":"/reference/eglearn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learning extremal graph structure — eglearn","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. rholist Numeric vector non-negative regularization parameters lasso. Default rholist = c(0.1, 0.15, 0.19, 0.205). details see glasso::glassopath(). reg_method One \"ns\", \"glasso\", neighborhood selection graphical lasso, respectively. Default reg_method = \"ns\". details see Meinshausen Bühlmann (2006) , Friedman et al. (2008) . complete_Gamma Whether want try fto complete Gamma matrix. Default complete_Gamma = FALSE.","code":""},{"path":"/reference/eglearn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Learning extremal graph structure — eglearn","text":"List made : graph list igraph::graph objects representing fitted graphs rho rholist. Gamma list numeric estimated \\(d \\times d\\) variogram matrices \\(\\Gamma\\) corresponding fitted graphs, rho rholist. complete_Gamma = FALSE underlying graph connected, returns NULL. rholist list penalty coefficients. graph_ic list igraph::graph objects representing optimal graph according aic, bic, mbic information criteria. reg_method = \"glasso\", returns list NULL. Gamma_ic list numeric \\(d \\times d\\) estimated variogram matrices \\(\\Gamma\\) corresponding aic, bic, mbic information criteria. reg_method = \"glasso\", complete_Gamma = FALSE, underlying graph connected, returns list NULL.","code":""},{"path":"/reference/eglearn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Learning extremal graph structure — eglearn","text":"Engelke S, Lalancette M, Volgushev S (2022). “Learning extremal graphical structures high dimensions.” doi:10.48550/ARXIV.2111.00840 , Available https://arxiv.org/abs/2111.00840., 2111.00840, https://arxiv.org/abs/2111.00840. Friedman J, Hastie T, Tibshirani R (2008). “Sparse inverse covariance estimation graphical lasso.” Biostatistics, 9(3), 432--441. Meinshausen N, Bühlmann P (2006). “High-dimensional graphs variable selection Lasso.” Ann. Statist., 34(3), 1436 -- 1462. doi:10.1214/009053606000000281 .","code":""},{"path":[]},{"path":"/reference/eglearn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Learning extremal graph structure — eglearn","text":"","code":"set.seed(2) m <- generate_random_model(d=6) y <- rmpareto(n=500, par=m$Gamma) ret <- eglearn(y)"},{"path":"/reference/emp_chi.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"Estimates empirically matrix bivariate extremal correlation coefficients \\(\\chi\\).","code":""},{"path":"/reference/emp_chi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"","code":"emp_chi(data, p = NULL)  emp_chi_pairwise(data, p = NULL, verbose = FALSE)"},{"path":"/reference/emp_chi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric scalar 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability data2mpareto() standardize data. verbose Print verbose progress information","code":""},{"path":"/reference/emp_chi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"Numeric matrix \\(d \\times d\\). matrix contains bivariate extremal coefficients \\(\\chi_{ij}\\), \\(, j = 1, ..., d\\).","code":""},{"path":"/reference/emp_chi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"emp_chi_pairwise calls emp_chi pair observations. robust data contains many NAs, can take rather long.","code":""},{"path":[]},{"path":"/reference/emp_chi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"","code":"n <- 100 d <- 4 p <- .8 Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  set.seed(123) my_data <- rmstable(n, \"HR\", d = d, par = Gamma) emp_chi(my_data, p) #>      [,1] [,2] [,3] [,4] #> [1,] 1.00 0.65 0.55 0.45 #> [2,] 0.65 1.00 0.60 0.55 #> [3,] 0.55 0.60 1.00 0.60 #> [4,] 0.45 0.55 0.60 1.00"},{"path":"/reference/emp_chi_multdim.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"Estimates d-dimensional extremal correlation coefficient \\(\\chi\\) empirically.","code":""},{"path":"/reference/emp_chi_multdim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"","code":"emp_chi_multdim(data, p = NULL)"},{"path":"/reference/emp_chi_multdim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric scalar 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability data2mpareto() standardize data.","code":""},{"path":"/reference/emp_chi_multdim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"Numeric scalar. empirical d-dimensional extremal correlation coefficient \\(\\chi\\) data.","code":""},{"path":[]},{"path":"/reference/emp_chi_multdim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"","code":"n <- 100 d <- 2 p <- .8 G <- cbind(   c(0, 1.5),   c(1.5, 0) )  set.seed(123) my_data <- rmstable(n, \"HR\", d = d, par = G) emp_chi_multdim(my_data, p) #> [1] 0.55"},{"path":"/reference/emp_vario.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler-Reiss distribution — emp_vario","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler-Reiss distribution — emp_vario","text":"Estimates variogram Huesler-Reiss distribution empirically.","code":""},{"path":"/reference/emp_vario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler-Reiss distribution — emp_vario","text":"","code":"emp_vario(data, k = NULL, p = NULL)  emp_vario_pairwise(data, k = NULL, p = NULL, verbose = FALSE)"},{"path":"/reference/emp_vario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler-Reiss distribution — emp_vario","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. k Integer 1 d. Component multivariate observations conditioned larger threshold p. NULL (default), average k returned. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. verbose Print verbose progress information","code":""},{"path":"/reference/emp_vario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler-Reiss distribution — emp_vario","text":"Numeric \\(d \\times d\\) matrix. estimated variogram Huesler-Reiss distribution.","code":""},{"path":"/reference/emp_vario.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler-Reiss distribution — emp_vario","text":"emp_vario_pairwise calls emp_vario pair observations. robust data contains many NAs, can take rather long.","code":""},{"path":[]},{"path":"/reference/emp_vario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler-Reiss distribution — emp_vario","text":"","code":"G <- generate_random_Gamma(d=5) y <- rmpareto(n=100, par=G) Ghat <- emp_vario(y)"},{"path":"/reference/emst.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting extremal minimum spanning tree — emst","title":"Fitting extremal minimum spanning tree — emst","text":"Fits extremal minimum spanning tree, edge weights : negative maximized log-likelihoods bivariate Huesler-Reiss distributions, method = \"ML\". See Engelke Hitz (2020)  details. empirical extremal variogram, method = \"vario\". See Engelke Volgushev (2022)  details. empirical extremal correlation, method = \"chi\". See Engelke Volgushev (2022)  details.","code":""},{"path":"/reference/emst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting extremal minimum spanning tree — emst","text":"","code":"emst(data, p = NULL, method = c(\"vario\", \"ML\", \"chi\"), cens = FALSE)"},{"path":"/reference/emst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting extremal minimum spanning tree — emst","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. method One \"vario\", \"ML\", \"chi\". Default method = \"vario\". cens Logical. argument considered method = \"ML\". TRUE, censored likelihood contributions used components threshold. default, cens = FALSE.","code":""},{"path":"/reference/emst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting extremal minimum spanning tree — emst","text":"List consisting : graph igraph::graph object. fitted minimum spanning tree. Gamma Numeric \\(d \\times d\\) estimated variogram matrix \\(\\Gamma\\) corresponding fitted minimum spanning tree.","code":""},{"path":"/reference/emst.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting extremal minimum spanning tree — emst","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932. Engelke S, Volgushev S (2022). “Structure learning extremal tree models.” J. R. Stat. Soc. Ser. B Stat. Methodol.. doi:10.1111/rssb.12556 , Forthcoming, https://rss.onlinelibrary.wiley.com/doi/pdf/10.1111/rssb.12556.","code":""},{"path":[]},{"path":"/reference/emst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting extremal minimum spanning tree — emst","text":"","code":"## Fitting a 4-dimensional HR minimum spanning tree my_graph <- igraph::graph_from_adjacency_matrix(   rbind(     c(0, 1, 0, 0),     c(1, 0, 1, 1),     c(0, 1, 0, 0),     c(0, 1, 0, 0)   ),   mode = \"undirected\" ) n <- 100 Gamma_vec <- c(.5, 1.4, .8) complete_Gamma(Gamma = Gamma_vec, graph = my_graph) ## full Gamma matrix #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.9  1.3 #> [2,]  0.5  0.0  1.4  0.8 #> [3,]  1.9  1.4  0.0  2.2 #> [4,]  1.3  0.8  2.2  0.0  set.seed(123) my_data <- rmpareto_tree(n, \"HR\", tree = my_graph, par = Gamma_vec) my_fit <- emst(my_data, p = NULL, method = \"ML\", cens = FALSE)"},{"path":"/reference/emtp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"function implements block descent algorithm find maximum Gaussian log-likelihood constraint concentration matrix Laplacian matrix. See Röttger et al. (2021)  details.","code":""},{"path":"/reference/emtp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"","code":"emtp2(Gamma, tol = 1e-06, verbose = TRUE, initial_point = TRUE)"},{"path":"/reference/emtp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"Gamma conditionally negative semidefinite matrix. typically empirical variogram matrix. tol convergence tolerance. algorithm terminates sum absolute differences two iterations tol. verbose TRUE (default) output printed. initial_point TRUE (default), algorithm construct initial point iteration steps.","code":""},{"path":"/reference/emtp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"list consisting : G_emtp2 optimal value variogram matrix number iterations","code":""},{"path":"/reference/emtp2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"Röttger F, Engelke S, Zwiernik P (2021). “Total positivity multivariate extremes.” doi:10.48550/ARXIV.2112.14727 , https://arxiv.org/abs/2112.14727.","code":""},{"path":[]},{"path":"/reference/ensure_matrix_symmetry_and_truncate_zeros.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure numerical matrix symmetry/zero values — ensure_matrix_symmetry","title":"Ensure numerical matrix symmetry/zero values — ensure_matrix_symmetry","text":"Ensures symmetry square matrix averaging transpose. Optionally verifies matrix close symmetric . Makes sure zeros \"numerically zero\", truncating small values.","code":""},{"path":"/reference/ensure_matrix_symmetry_and_truncate_zeros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure numerical matrix symmetry/zero values — ensure_matrix_symmetry","text":"","code":"ensure_matrix_symmetry(M, checkTol = Inf, alert = NULL)  truncate_zeros(M, tol = get_small_tol())  ensure_matrix_symmetry_and_truncate_zeros(   M,   tol = get_small_tol(),   checkTol = Inf )"},{"path":"/reference/ensure_matrix_symmetry_and_truncate_zeros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure numerical matrix symmetry/zero values — ensure_matrix_symmetry","text":"M Numeric square matrix. checkTol Positive scalar. maximum absolute difference M t(M) larger, show warning. alert Passed get_alert_function: NULL TRUE read option value, FALSE return dummy function, function takes arbitrary number strings arguments (e.g. stop()). tol entries absolute value value truncated zero.","code":""},{"path":"/reference/ensure_matrix_symmetry_and_truncate_zeros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure numerical matrix symmetry/zero values — ensure_matrix_symmetry","text":"adjusted value M.","code":""},{"path":[]},{"path":"/reference/fast_diag.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast computation of diag(y %% M %% t(y)) — fast_diag","title":"Fast computation of diag(y %% M %% t(y)) — fast_diag","text":"Fast computation diag(y %% M %% t(y))","code":""},{"path":"/reference/fast_diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast computation of diag(y %% M %% t(y)) — fast_diag","text":"","code":"fast_diag(y, M)"},{"path":"/reference/fast_diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast computation of diag(y %% M %% t(y)) — fast_diag","text":"y Numeric matrix M Numeric matrix","code":""},{"path":"/reference/fast_diag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast computation of diag(y %% M %% t(y)) — fast_diag","text":"Numeric vector","code":""},{"path":"/reference/fillFixedParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to combine par with fixed params (in init) — fillFixedParams","title":"Helper function to combine par with fixed params (in init) — fillFixedParams","text":"Helper function combine par fixed params (init)","code":""},{"path":"/reference/fillFixedParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to combine par with fixed params (in init) — fillFixedParams","text":"","code":"fillFixedParams(par, init, fixParams)"},{"path":"/reference/fillFixedParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to combine par with fixed params (in init) — fillFixedParams","text":"par Numeric vector. parameters optimized init Numeric vector. initial parameters (including ones optimized ) fixParams Numeric logical vector. Positions fixed parameters full parameter vector.","code":""},{"path":"/reference/findVsep.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a separator set for two vertices — findVsep","title":"Find a separator set for two vertices — findVsep","text":"Finds reasonably small set vertices separate v0 v1 graph.","code":""},{"path":"/reference/findVsep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a separator set for two vertices — findVsep","text":"","code":"findVsep(graph, v0, v1)"},{"path":"/reference/fitInInterval.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit value(s) in interval — fitInInterval","title":"Fit value(s) in interval — fitInInterval","text":"Fit value(s) interval, arguments recycled necessary.","code":""},{"path":"/reference/fitInInterval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit value(s) in interval — fitInInterval","text":"","code":"fitInInterval(x, xMin = -Inf, xMax = Inf)"},{"path":"/reference/fitInInterval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit value(s) in interval — fitInInterval","text":"x Numeric vector xMin Numeric vector xMax Numeric vector","code":""},{"path":"/reference/fitInInterval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit value(s) in interval — fitInInterval","text":"Numeric vector","code":""},{"path":"/reference/fit_graph_to_Theta.html","id":null,"dir":"Reference","previous_headings":"","what":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","text":"Fits graph empirical Gamma matrix computing corresponding Theta matrix using Gamma2Theta() greedily chooses m edges correspond high absolute values Theta.","code":""},{"path":"/reference/fit_graph_to_Theta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","text":"","code":"fit_graph_to_Theta(data, m = NULL, Gamma_emp = NULL)"},{"path":"/reference/fit_graph_to_Theta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","text":"data (standardized) data compute Gamma m number edges add, defaults number edges tree Gamma_emp empirical Gamma matrix (can NULL data given)","code":""},{"path":"/reference/fit_graph_to_Theta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","text":"list containing [igraph::graph] object fitted Gamma matrix","code":""},{"path":[]},{"path":"/reference/flightCountMatrixToConnectionList.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert flight counts to connection list — flightCountMatrixToConnectionList","title":"Convert flight counts to connection list — flightCountMatrixToConnectionList","text":"Convert numeric matrix containing flight counts airports data frame containing list connections.","code":""},{"path":"/reference/flightCountMatrixToConnectionList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert flight counts to connection list — flightCountMatrixToConnectionList","text":"","code":"flightCountMatrixToConnectionList(nFlightsPerConnection, directed = TRUE)"},{"path":"/reference/flightCountMatrixToConnectionList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert flight counts to connection list — flightCountMatrixToConnectionList","text":"nFlightsPerConnection square, numeric matrix identical column- row-names. entry represents number flights airport indexing row airport indexing column arbitrary time period. directed Logical scalar. Whether flights ->B B->considered separately.","code":""},{"path":"/reference/flightCountMatrixToConnectionList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert flight counts to connection list — flightCountMatrixToConnectionList","text":"data frame columns departureAirport, arrivalAirport, nFlights. row represents one connection >=1 flights input matrix.","code":""},{"path":[]},{"path":"/reference/flightCountMatrixToConnectionList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert flight counts to connection list — flightCountMatrixToConnectionList","text":"","code":"flightCountMatrixToConnectionList(flights$flightCounts[1:100, 1:100, 1]) #>     departureAirport arrivalAirport nFlights #> 1                ATL            ABE      761 #> 2                CLE            ABE      318 #> 3                CLT            ABE      182 #> 4                CVG            ABE      529 #> 5                AMA            ABQ      214 #> 6                ATL            ABQ      889 #> 7                BWI            ABQ      215 #> 8                CLE            ABQ        1 #> 9                CVG            ABQ      370 #> 10               DAL            ABQ     1078 #> 11               ATL            ABY      627 #> 12               CEC            ACV      179 #> 13               CVG            ACY      464 #> 14               AKN            ADK       54 #> 15               ANC            ADQ      251 #> 16               BET            ADQ       66 #> 17               ATL            AEX      508 #> 18               ATL            AGS     1541 #> 19               ADK            AKN       62 #> 20               ANC            AKN      157 #> 21               ATL            ALB     1014 #> 22               BWI            ALB     1086 #> 23               CLE            ALB      545 #> 24               CLT            ALB      406 #> 25               CVG            ALB      552 #> 26               ABQ            AMA      241 #> 27               DAL            AMA      999 #> 28               ADQ            ANC      394 #> 29               AKN            ANC      128 #> 30               ATL            ANC       91 #> 31               BET            ANC      707 #> 32               CDV            ANC      177 #> 33               ATL            APF      467 #> 34               ABE            ATL      617 #> 35               ABQ            ATL      643 #> 36               ABY            ATL      582 #> 37               AEX            ATL      492 #> 38               AGS            ATL     1381 #> 39               ALB            ATL      787 #> 40               ANC            ATL       53 #> 41               APF            ATL      419 #> 42               ATW            ATL      425 #> 43               AUS            ATL     1281 #> 44               AVL            ATL     1306 #> 45               AVP            ATL      576 #> 46               AZO            ATL       47 #> 47               BDL            ATL     1700 #> 48               BHM            ATL     1564 #> 49               BMI            ATL      548 #> 50               BNA            ATL     1269 #> 51               BOI            ATL      137 #> 52               BOS            ATL     3453 #> 53               BPT            ATL       80 #> 54               BQK            ATL      569 #> 55               BTR            ATL     1287 #> 56               BTV            ATL       41 #> 57               BUF            ATL     1792 #> 58               BUR            ATL      203 #> 59               BWI            ATL     3351 #> 60               CAE            ATL     1835 #> 61               CAK            ATL     1716 #> 62               CHA            ATL     1121 #> 63               CHO            ATL      430 #> 64               CHS            ATL     1486 #> 65               CLE            ATL     1953 #> 66               CLT            ATL     2568 #> 67               CMH            ATL      675 #> 68               COS            ATL      290 #> 69               CRP            ATL      516 #> 70               CRW            ATL      807 #> 71               CSG            ATL      891 #> 72               CVG            ATL     2122 #> 73               DAB            ATL     1029 #> 74               DAY            ATL     1642 #> 75               ATL            ATW      636 #> 76               CVG            ATW      475 #> 77               ATL            AUS     1428 #> 78               BNA            AUS      286 #> 79               BWI            AUS      393 #> 80               CLE            AUS      153 #> 81               COS            AUS        1 #> 82               CVG            AUS      635 #> 83               DAL            AUS     1447 #> 84               ATL            AVL     1293 #> 85               CVG            AVL      478 #> 86               ATL            AVP      767 #> 87               CVG            AVP      402 #> 88               ATL            AZO       42 #> 89               CVG            AZO      869 #> 90               DAY            AZO        1 #> 91               ALB            BDL        1 #> 92               ATL            BDL     1696 #> 93               BNA            BDL      121 #> 94               BWI            BDL     1496 #> 95               CLE            BDL      536 #> 96               CLT            BDL     1240 #> 97               CVG            BDL      683 #> 98               ANC            BET      583 #> 99               AVP            BGM        1 #> 100              CVG            BGM      443 #> 101              BOS            BGR     1397 #> 102              CVG            BGR      750 #> 103              ATL            BHM     1608 #> 104              BNA            BHM      508 #> 105              BWI            BHM      545 #> 106              CLE            BHM       54 #> 107              CLT            BHM      231 #> 108              CVG            BHM      950 #> 109              BZN            BIL        1 #> 110              ATL            BMI      743 #> 111              ATL            BNA     1657 #> 112              AUS            BNA      308 #> 113              BDL            BNA      157 #> 114              BHM            BNA      283 #> 115              BWI            BNA     1274 #> 116              CLE            BNA      915 #> 117              CLT            BNA      831 #> 118              CMH            BNA      299 #> 119              CVG            BNA     1218 #> 120              ATL            BOI      166 #> 121              ALB            BOS        1 #> 122              ATL            BOS     4083 #> 123              BGR            BOS     1112 #> 124              BTV            BOS      494 #> 125              BWI            BOS     2252 #> 126              CAK            BOS      340 #> 127              CLE            BOS      712 #> 128              CLT            BOS     2158 #> 129              CMH            BOS      519 #> 130              CVG            BOS     1431 #> 131              ATL            BPT      116 #> 132              ATL            BQK      721 #> 133              BZN            BTM        1 #> 134              ATL            BTR     1290 #> 135              CVG            BTR      316 #> 136              ATL            BTV       33 #> 137              BOS            BTV      415 #> 138              CLE            BTV      264 #> 139              CVG            BTV      462 #> 140              ATL            BUF     2199 #> 141              BWI            BUF     1185 #> 142              CLE            BUF      620 #> 143              CLT            BUF      724 #> 144              CVG            BUF      569 #> 145              ATL            BUR      279 #> 146              COS            BUR        1 #> 147              ABQ            BWI       95 #> 148              ALB            BWI     1034 #> 149              ATL            BWI     3972 #> 150              AUS            BWI      276 #> 151              BDL            BWI     1342 #> 152              BHM            BWI      444 #> 153              BNA            BWI     1128 #> 154              BOS            BWI     2182 #> 155              BUF            BWI     1204 #> 156              CLE            BWI     1168 #> 157              CLT            BWI     1813 #> 158              CMH            BWI      754 #> 159              CVG            BWI      866 #> 160              DAY            BWI      275 #> 161              ATL            BZN        1 #> 162              BIL            BZN        1 #> 163              ATL            CAE     1703 #> 164              CVG            CAE     1048 #> 165              ATL            CAK     1883 #> 166              BOS            CAK      268 #> 167              CVG            CAK     1242 #> 168              BFL            CDC        1 #> 169              ANC            CDV      231 #> 170              ACV            CEC      157 #> 171              ATL            CHA     1180 #> 172              CVG            CHA      583 #> 173              ATL            CHO      560 #> 174              CVG            CHO      401 #> 175              ATL            CHS     1782 #> 176              CLT            CHS      911 #> 177              CVG            CHS      716 #> 178              CVG            CID      488 #> 179              ABE            CLE      238 #> 180              ABQ            CLE        2 #> 181              ALB            CLE      649 #> 182              ATL            CLE     1998 #> 183              AUS            CLE      142 #> 184              BDL            CLE      581 #> 185              BHM            CLE       22 #> 186              BNA            CLE     1130 #> 187              BOS            CLE      701 #> 188              BTV            CLE      215 #> 189              BUF            CLE      663 #> 190              BWI            CLE     1365 #> 191              CLT            CLE      589 #> 192              CMH            CLE      386 #> 193              CVG            CLE     1157 #> 194              DAB            CLE       15 #> 195              DAY            CLE      532 #> 196              ABI            CLL        1 #> 197              ABE            CLT       84 #> 198              ALB            CLT      566 #> 199              ATL            CLT     2909 #> 200              BDL            CLT     1073 #> 201              BHM            CLT      132 #> 202              BNA            CLT      778 #> 203              BOS            CLT     2003 #> 204              BUF            CLT      782 #> 205              BWI            CLT     1626 #> 206              CHS            CLT      663 #> 207              CLE            CLT      588 #> 208              CMH            CLT      597 #> 209              CVG            CLT     1388 #> 210              ATL            CMH     1302 #> 211              BNA            CMH      376 #> 212              BOS            CMH      616 #> 213              BWI            CMH      842 #> 214              CLE            CMH      501 #> 215              CLT            CMH      757 #> 216              CVG            CMH      850 #> 217              CVG            CMI      366 #> 218              ATL            COS      421 #> 219              BHM            COS        1 #> 220              BIL            COS        1 #> 221              BNA            COS        1 #> 222              BOI            COS        1 #> 223              BTV            COS        1 #> 224              CVG            COS      354 #> 225              CLE            CPR        1 #> 226              ATL            CRP      516 #> 227              ATL            CRW      796 #> 228              CVG            CRW      611 #> 229              ATL            CSG      953 #> 230              ABE            CVG      340 #> 231              ABQ            CVG      328 #> 232              ACY            CVG      359 #> 233              ALB            CVG      318 #> 234              ATL            CVG     1992 #> 235              ATW            CVG      477 #> 236              AUS            CVG      481 #> 237              AVL            CVG      514 #> 238              AVP            CVG      398 #> 239              AZO            CVG      644 #> 240              BDL            CVG      503 #> 241              BGM            CVG      368 #> 242              BGR            CVG      491 #> 243              BHM            CVG      758 #> 244              BNA            CVG     1084 #> 245              BOS            CVG     1306 #> 246              BTR            CVG      345 #> 247              BTV            CVG      298 #> 248              BUF            CVG      433 #> 249              BWI            CVG      725 #> 250              CAE            CVG      920 #> 251              CAK            CVG      801 #> 252              CHA            CVG      496 #> 253              CHO            CVG      367 #> 254              CHS            CVG      588 #> 255              CID            CVG      474 #> 256              CLE            CVG      722 #> 257              CLT            CVG     1127 #> 258              CMH            CVG      683 #> 259              CMI            CVG      358 #> 260              COS            CVG      255 #> 261              CRW            CVG      555 #> 262              DAB            CVG      191 #> 263              DAY            CVG      727 #> 264              ATL            DAB     1435 #> 265              CLE            DAB        9 #> 266              CVG            DAB      195 #> 267              ABQ            DAL      920 #> 268              AMA            DAL      762 #> 269              AUS            DAL     1489 #> 270              ATL            DAY     2180 #> 271              BWI            DAY      401 #> 272              CLE            DAY      450 #> 273              CVG            DAY      970"},{"path":"/reference/flights.html","id":null,"dir":"Reference","previous_headings":"","what":"Flights delay data — flights","title":"Flights delay data — flights","text":"dataset containing daily total delays major U.S. airlines. raw data obtained U.S. Bureau Transportation Statistics, pre-processed described Hentschel et al. (2022) . Note: CRAN version package contains data 2010-2013. full dataset available GitHub version package.","code":""},{"path":"/reference/flights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flights delay data — flights","text":"","code":"flights"},{"path":"/reference/flights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Flights delay data — flights","text":"named list three entries: airports data.frame, containing information US airports delays numeric matrix, containing daily aggregated delays airports dataset flightCounts numeric array, containing yearly flight numbers airports dataset","code":""},{"path":"/reference/flights.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flights delay data — flights","text":"Raw delays data: https://www.bts.dot.gov/browse-statistical-products--data/bts-publications/airline-service-quality-performance-234-time Fields/Forms used raw data: https://esubmit.rita.dot.gov/ViewReports.aspx https://esubmit.rita.dot.gov/-Time-Form1.aspx https://esubmit.rita.dot.gov/-Time-Form3A.aspx Airports (includes license information): https://openflights.org/data","code":""},{"path":"/reference/flights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flights delay data — flights","text":"flightCounts three-dimensional array, containing number flights dataset pair airports, aggregated yearly basis. entry total number flights departure airport (row) destination airport (column) given year (dimension 3). array contain NAs, even airport operate given year, simply indicated zeros. delays three-dimensional array containing daily total positive delays, minutes, incoming outgoing flights respectively. column corresponds airport dataset row corresponds day. third dimension length two, 'arrivals' containing delays incoming flights 'departures' containing delays outgoing flights. Zeros indicate flights arriving/departing airport given day, none delays. NAs indicate flights arriving/departing airport day . airports data frame containing following information number US airports. entries missing, indicated NAs. IATA 3-letter IATA code Name name airport City main city served airport Country country territory airport located (mostly \"United States\") ICAO 4-letter ICAO code Latitude latitude airport, decimal degrees Longitude longitude airport, decimal degrees Altitude altitude airport, feet Timezone timezone airport, hours offset UTC DST Daylight savings time used airport. ''=US/Canada, 'N'=None. Timezone2 name timezone airport","code":""},{"path":"/reference/flights.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flights delay data — flights","text":"Hentschel M, Engelke S, Segers J (2022). “Statistical Inference Hüsler-Reiss Graphical Models Matrix Completions.” doi:10.48550/ARXIV.2210.14292 , https://arxiv.org/abs/2210.14292.","code":""},{"path":[]},{"path":"/reference/flights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flights delay data — flights","text":"","code":"# Get total number of flights in the dataset: totalFlightCounts <- apply(flights$flightCounts, c(1,2), sum)  # Get number of flights for specific years in the dataset: flightCounts_10_11 <- apply(flights$flightCounts[,,c('2010', '2011')], c(1,2), sum)  # Get list of connections from 2008: connections_10 <- flightCountMatrixToConnectionList(flights$flightCounts[,,'2010'])"},{"path":"/reference/fmpareto_HR_MLE.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter fitting for multivariate Huesler-Reiss Pareto distribution — fmpareto_HR_MLE","title":"Parameter fitting for multivariate Huesler-Reiss Pareto distribution — fmpareto_HR_MLE","text":"Fits parameters multivariate Huesler-Reiss Pareto distribution using (censored) maximum likelihood estimation.","code":""},{"path":"/reference/fmpareto_HR_MLE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter fitting for multivariate Huesler-Reiss Pareto distribution — fmpareto_HR_MLE","text":"","code":"fmpareto_HR_MLE(   data,   p = NULL,   cens = FALSE,   init = NULL,   fixParams = integer(0),   useTheta = TRUE,   maxit = 100,   graph = NULL,   optMethod = \"BFGS\",   nAttemptsFixInit = 3 )"},{"path":"/reference/fmpareto_HR_MLE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter fitting for multivariate Huesler-Reiss Pareto distribution — fmpareto_HR_MLE","text":"data Numeric \\(n \\times d\\) matrix, n number observations d number dimensions. p Numeric scalar 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability data2mpareto() standardize data. cens Logical scalar. true, censored likelihood contributions used components threshold. computationally expensive default cens = FALSE. init Numeric vector numeric matrix. Initial parameter values optimization. NULL, empirical variogram used instead. Otherwise numeric vector one entry per edge graph, complete variogram/precision matrix. fixParams Numeric logical vector. Indices parameter vectors kept fixed (identical init) optimization. Default integer(0). useTheta Logical. Whether perform MLE optimization terms Theta Gamma. maxit Positive integer. maximum number iterations optimization. graph Graph object igraph package NULL (implying complete graph). optMethod String. valid optimization method used function stats::optim. default, method = \"BFGS\". nAttemptsFixInit Numeric. useTheta=TRUE initial parameter init valid, attempt fix first making sure -diagonal entries negative adding random noise many times.","code":""},{"path":"/reference/fmpareto_HR_MLE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter fitting for multivariate Huesler-Reiss Pareto distribution — fmpareto_HR_MLE","text":"List consisting : convergence Logical. Indicates whether optimization converged . Gamma Numeric d x d matrix. Fitted variogram matrix. Theta Numeric d x d matrix. Fitted precision matrix. par Numeric vector. Optimal parameters, including fixed parameters. par_opt Numeric. Optimal parameters, excluding fixed parameters. nllik Numeric. Optimal value negative log-likelihood function. hessian Numeric matrix. Estimated Hessian matrix estimated parameters.","code":""},{"path":"/reference/fmpareto_HR_MLE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter fitting for multivariate Huesler-Reiss Pareto distribution — fmpareto_HR_MLE","text":"parameters corresponding edges graph optimized, remaining entries implied graphical structure. graph NULL, complete graph used. optimization done either terms variogram (Gamma) precision matrix (Theta), depending value useTheta. graph non-decomposable, useTheta=TRUE significantly faster, otherwise similar performance.","code":""},{"path":[]},{"path":"/reference/fmpareto_HR_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"HR Parameter fitting - Helper functions — fmpareto_graph_HR_clique_average","title":"HR Parameter fitting - Helper functions — fmpareto_graph_HR_clique_average","text":"Helper functions called fmpareto_HR_MLE.","code":""},{"path":"/reference/fmpareto_HR_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HR Parameter fitting - Helper functions — fmpareto_graph_HR_clique_average","text":"","code":"fmpareto_graph_HR_clique_average(data, graph, method = c(\"ML\", \"vario\"), ...)  fmpareto_graph_HR_clique_sequential(data, graph, ...)  combine_clique_estimates_by_averaging(cliques, subGammas)"},{"path":"/reference/fmpareto_graph_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter fitting for Huesler-Reiss graphical models — fmpareto_graph_HR","title":"Parameter fitting for Huesler-Reiss graphical models — fmpareto_graph_HR","text":"Fits parameter matrix (variogram) multivariate Huesler-Reiss Pareto distribution given graphical structure, using maximum-likelihood estimation empirical variogram.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter fitting for Huesler-Reiss graphical models — fmpareto_graph_HR","text":"","code":"fmpareto_graph_HR(   data,   graph,   p = NULL,   method = c(\"vario\", \"ML\"),   handleCliques = c(\"average\", \"full\", \"sequential\"),   ... )"},{"path":"/reference/fmpareto_graph_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter fitting for Huesler-Reiss graphical models — fmpareto_graph_HR","text":"data Numeric \\(n \\times d\\) matrix, n number observations d number dimensions. graph Undirected, connected [igraph::graph] object d vertices, representing graphical structure fitted Huesler-Reiss model. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. method One c('vario', 'ML'), 'vario' default, indicating method used parameter estimation. See details. handleCliques handle cliques separators graph. See details. ... Arguments passed fmpareto_HR_MLE(). Currently cens, maxit, optMethod, useTheta supported.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter fitting for Huesler-Reiss graphical models — fmpareto_graph_HR","text":"estimated parameter matrix.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter fitting for Huesler-Reiss graphical models — fmpareto_graph_HR","text":"handleCliques='average', marginal parameter matrix estimated maximal clique graph combined partial parameter matrix taking average entries overlapping cliques. Lastly, full parameter matrix computed using complete_Gamma(). handleCliques='full', first full parameter matrix estimated using specified method non-edge entries adjusted final parameter matrix graphical structure indicated graph. handleCliques='sequential', graph must decomposable, method='ML' must specified. parameter matrix first estimated (recursive) separators rest cliques, keeping previously estimated entries fixed. method='ML', computational cost mostly influenced total size graph (handleCliques='full') size cliques, can already take significant amount time modest dimensions (e.g. d=3).","code":""},{"path":[]},{"path":"/reference/generateRandomGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random graphs — generate_random_chordal_graph","title":"Generate random graphs — generate_random_chordal_graph","text":"Generate random graphs different structures. follow well-defined distributions mostly meant quickly generating test models.","code":""},{"path":"/reference/generateRandomGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random graphs — generate_random_chordal_graph","text":"","code":"generate_random_chordal_graph(   d,   cMin = 2,   cMax = 6,   sMin = 1,   sMax = 4,   block_graph = FALSE,   ... )  generate_random_connected_graph(   d,   m = NULL,   p = 2/(d + 1),   maxTries = 1000,   ... )  generate_random_tree(d)  generate_random_cactus(d, cMin = 2, cMax = 6)"},{"path":"/reference/generateRandomGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random graphs — generate_random_chordal_graph","text":"d Number vertices graph cMin Minimal size cliques/blocks (last one might smaller necessary) cMax Maximal size cliques/blocks sMin Minimal size separators sMax Maximal size separators block_graph Force sMin == sMax == 1 produce block graph ... Ignored, allowed compatibility m Number edges graph (specify p) p Probability edge graph (specify m) maxTries Maximum number tries produce connected Erdoes-Renyi graph","code":""},{"path":"/reference/generateRandomGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random graphs — generate_random_chordal_graph","text":"[igraph::graph] object","code":""},{"path":"/reference/generateRandomGraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate random graphs — generate_random_chordal_graph","text":"generate_random_chordal_graph generates random chordal graph starting (small) complete graph adding new cliques specified size reached. sizes cliques separators can specified. generate_random_connected_graph first tries generate Erdoes-Renyi graph, fails, falls back producing tree adding random edges tree. generate_random_cactus generates random cactus graph (mostly useful benchmarking).","code":""},{"path":[]},{"path":"/reference/generate_random_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random Gamma matrix — generate_random_Gamma","title":"Generate a random Gamma matrix — generate_random_Gamma","text":"Generates valid Gamma matrix given dimension","code":""},{"path":"/reference/generate_random_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random Gamma matrix — generate_random_Gamma","text":"","code":"generate_random_Gamma(d, ...)"},{"path":"/reference/generate_random_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random Gamma matrix — generate_random_Gamma","text":"d Size matrix ... arguments passed generate_random_spd_matrix()","code":""},{"path":[]},{"path":"/reference/generate_random_graphical_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","title":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","text":"Generates valid Gamma matrix conditional independence structure specified graph","code":""},{"path":"/reference/generate_random_graphical_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","text":"","code":"generate_random_graphical_Gamma(graph, ...)"},{"path":"/reference/generate_random_graphical_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","text":"graph igraph::graph object ... arguments passed generate_random_spd_matrix()","code":""},{"path":[]},{"path":"/reference/generate_random_integer_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"Generates random variogram Matrix producing \\((d-1) \\times (d-1)\\) matrix B random integer entries -b b, computing S = B %*% t(B), passing S Sigma2Gamma(). process repeated increasing b valid Gamma matrix produced.","code":""},{"path":"/reference/generate_random_integer_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"","code":"generate_random_integer_Gamma(d, b = 2, b_step = 1)"},{"path":"/reference/generate_random_integer_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"d Number rows/columns output matrix b Initial b used algorithm described b_step much b increased iteration","code":""},{"path":"/reference/generate_random_integer_Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"numeric \\(d \\times d\\) variogram matrix integer entries","code":""},{"path":[]},{"path":"/reference/generate_random_integer_Gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"","code":"generate_random_integer_Gamma(5, 2, 0.1) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    2    6    3    7 #> [2,]    2    0   14    7    9 #> [3,]    6   14    0    9   13 #> [4,]    3    7    9    0   14 #> [5,]    7    9   13   14    0"},{"path":"/reference/generate_random_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random Huesler-Reiss Models — generate_random_model","title":"Generate random Huesler-Reiss Models — generate_random_model","text":"Generates random connected graph Gamma matrix conditional independence structure corresponding graph.","code":""},{"path":"/reference/generate_random_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random Huesler-Reiss Models — generate_random_model","text":"","code":"generate_random_model(d, graph_type = \"general\", ...)"},{"path":"/reference/generate_random_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random Huesler-Reiss Models — generate_random_model","text":"d Number vertices graph graph_type \"tree\", \"block\", \"decomposable\", \"complete\", \"general\" ... arguments passed functions generating graph Gamma matrix","code":""},{"path":[]},{"path":"/reference/generate_random_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random Huesler-Reiss Models — generate_random_model","text":"","code":"set.seed(1) d <- 12  generate_random_model(d, 'tree') #> $graph #> IGRAPH 81f2d19 U--- 12 11 --  #> + edges from 81f2d19: #>  [1] 1-- 7 1--12 2-- 3 3-- 8 3-- 9 4-- 5 4-- 6 6--10 7--10 7--11 9--10 #>  #> $Gamma #>            [,1]      [,2]      [,3]       [,4]       [,5]      [,6]      [,7] #>  [1,] 0.0000000 2.6720780 2.0022634 1.75490900 1.84728711 1.5147334 0.4817166 #>  [2,] 2.6720780 0.0000000 0.6698146 1.80053975 1.89291786 1.5603642 2.1903614 #>  [3,] 2.0022634 0.6698146 0.0000000 1.13072516 1.22310327 0.8905496 1.5205468 #>  [4,] 1.7549090 1.8005397 1.1307252 0.00000000 0.09237811 0.2401756 1.2731924 #>  [5,] 1.8472871 1.8929179 1.2231033 0.09237811 0.00000000 0.3325537 1.3655705 #>  [6,] 1.5147334 1.5603642 0.8905496 0.24017559 0.33255370 0.0000000 1.0330168 #>  [7,] 0.4817166 2.1903614 1.5205468 1.27319238 1.36557049 1.0330168 0.0000000 #>  [8,] 2.3459810 1.0135322 0.3437176 1.47444277 1.56682088 1.2342672 1.8642644 #>  [9,] 1.8552114 0.8168666 0.1470520 0.98367317 1.07605128 0.7434976 1.3734948 #> [10,] 1.3132236 1.3588544 0.6890398 0.44168538 0.53406349 0.2015098 0.8315070 #> [11,] 1.2638652 2.9725099 2.3026953 2.05534092 2.14771903 1.8151653 0.7821485 #> [12,] 1.0796174 3.7516954 3.0818808 2.83452640 2.92690451 2.5943508 1.5613340 #>            [,8]      [,9]     [,10]     [,11]    [,12] #>  [1,] 2.3459810 1.8552114 1.3132236 1.2638652 1.079617 #>  [2,] 1.0135322 0.8168666 1.3588544 2.9725099 3.751695 #>  [3,] 0.3437176 0.1470520 0.6890398 2.3026953 3.081881 #>  [4,] 1.4744428 0.9836732 0.4416854 2.0553409 2.834526 #>  [5,] 1.5668209 1.0760513 0.5340635 2.1477190 2.926905 #>  [6,] 1.2342672 0.7434976 0.2015098 1.8151653 2.594351 #>  [7,] 1.8642644 1.3734948 0.8315070 0.7821485 1.561334 #>  [8,] 0.0000000 0.4907696 1.0327574 2.6464129 3.425598 #>  [9,] 0.4907696 0.0000000 0.5419878 2.1556433 2.934829 #> [10,] 1.0327574 0.5419878 0.0000000 1.6136555 2.392841 #> [11,] 2.6464129 2.1556433 1.6136555 0.0000000 2.343483 #> [12,] 3.4255984 2.9348288 2.3928410 2.3434826 0.000000 #>  generate_random_model(d, 'block') #> $graph #> IGRAPH e961e8a U--- 12 21 --  #> + edges from e961e8a: #>  [1]  1-- 2  2-- 3  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8  2-- 9  2--10  2--11 #> [11]  2--12  4-- 5  4-- 6  4-- 7  5-- 6  5-- 7  6-- 7  8-- 9  8--10  9--10 #> [21] 11--12 #>  #> $Gamma #>            [,1]      [,2]      [,3]       [,4]       [,5]      [,6]      [,7] #>  [1,] 0.0000000 0.6631232 1.0431529 1.05616480 1.05953800 0.9379824 0.8416377 #>  [2,] 0.6631232 0.0000000 0.3800297 0.39304160 0.39641480 0.2748592 0.1785145 #>  [3,] 1.0431529 0.3800297 0.0000000 0.77307130 0.77644449 0.6548889 0.5585442 #>  [4,] 1.0561648 0.3930416 0.7730713 0.00000000 0.06648054 0.4351744 0.2388959 #>  [5,] 1.0595380 0.3964148 0.7764445 0.06648054 0.00000000 0.5224760 0.2543835 #>  [6,] 0.9379824 0.2748592 0.6548889 0.43517445 0.52247603 0.0000000 0.1955791 #>  [7,] 0.8416377 0.1785145 0.5585442 0.23889590 0.25438349 0.1955791 0.0000000 #>  [8,] 0.9882473 0.3251241 0.7051538 0.71816571 0.72153891 0.5999833 0.5036386 #>  [9,] 1.2927417 0.6296185 1.0096482 1.02266005 1.02603325 0.9044777 0.8081330 #> [10,] 1.7371201 1.0739969 1.4540266 1.46703848 1.47041168 1.3488561 1.2525114 #> [11,] 0.8746154 0.2114922 0.5915219 0.60453376 0.60790696 0.4863514 0.3900067 #> [12,] 0.9263971 0.2632739 0.6433036 0.65631546 0.65968866 0.5381331 0.4417884 #>            [,8]      [,9]     [,10]     [,11]     [,12] #>  [1,] 0.9882473 1.2927417 1.7371201 0.8746154 0.9263971 #>  [2,] 0.3251241 0.6296185 1.0739969 0.2114922 0.2632739 #>  [3,] 0.7051538 1.0096482 1.4540266 0.5915219 0.6433036 #>  [4,] 0.7181657 1.0226601 1.4670385 0.6045338 0.6563155 #>  [5,] 0.7215389 1.0260333 1.4704117 0.6079070 0.6596887 #>  [6,] 0.5999833 0.9044777 1.3488561 0.4863514 0.5381331 #>  [7,] 0.5036386 0.8081330 1.2525114 0.3900067 0.4417884 #>  [8,] 0.0000000 0.2638163 0.9393278 0.5366163 0.5883980 #>  [9,] 0.2638163 0.0000000 0.6205046 0.8411106 0.8928923 #> [10,] 0.9393278 0.6205046 0.0000000 1.2854891 1.3372708 #> [11,] 0.5366163 0.8411106 1.2854891 0.0000000 0.5173694 #> [12,] 0.5883980 0.8928923 1.3372708 0.5173694 0.0000000 #>  generate_random_model(d, 'decomposable') #> $graph #> IGRAPH 014178c U--- 12 25 --  #> + edges from 014178c: #>  [1]  1-- 2  1-- 3  1-- 4  2-- 3  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8  3-- 4 #> [11]  5-- 6  5-- 7  5-- 8  5-- 9  5--10  5--11  5--12  6-- 7  6-- 8  9--10 #> [21]  9--11  9--12 10--11 10--12 11--12 #>  #> $Gamma #>            [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>  [1,] 0.0000000 0.7642524 0.4113240 1.3614233 1.0419512 0.9419788 1.1521648 #>  [2,] 0.7642524 0.0000000 0.3023596 0.3445731 0.2776988 0.1777264 0.3879125 #>  [3,] 0.4113240 0.3023596 0.0000000 0.3856178 0.5800584 0.4800860 0.6902720 #>  [4,] 1.3614233 0.3445731 0.3856178 0.0000000 0.6222719 0.5222995 0.7324856 #>  [5,] 1.0419512 0.2776988 0.5800584 0.6222719 0.0000000 0.4014644 0.3728168 #>  [6,] 0.9419788 0.1777264 0.4800860 0.5222995 0.4014644 0.0000000 0.2380561 #>  [7,] 1.1521648 0.3879125 0.6902720 0.7324856 0.3728168 0.2380561 0.0000000 #>  [8,] 1.3806228 0.6163705 0.9187301 0.9609436 0.7102602 0.5832712 0.7425574 #>  [9,] 1.2745559 0.5103035 0.8126631 0.8548766 0.2326047 0.6340691 0.6054215 #> [10,] 1.2193632 0.4551108 0.7574704 0.7996839 0.1774120 0.5788764 0.5502288 #> [11,] 1.1542695 0.3900171 0.6923767 0.7345902 0.1123183 0.5137827 0.4851351 #> [12,] 1.1869615 0.4227091 0.7250687 0.7672822 0.1450103 0.5464747 0.5178271 #>            [,8]      [,9]      [,10]      [,11]     [,12] #>  [1,] 1.3806228 1.2745559 1.21936316 1.15426947 1.1869615 #>  [2,] 0.6163705 0.5103035 0.45511081 0.39001712 0.4227091 #>  [3,] 0.9187301 0.8126631 0.75747038 0.69237669 0.7250687 #>  [4,] 0.9609436 0.8548766 0.79968388 0.73459019 0.7672822 #>  [5,] 0.7102602 0.2326047 0.17741199 0.11231830 0.1450103 #>  [6,] 0.5832712 0.6340691 0.57887638 0.51378270 0.5464747 #>  [7,] 0.7425574 0.6054215 0.55022880 0.48513511 0.5178271 #>  [8,] 0.0000000 0.9428649 0.88767219 0.82257850 0.8552705 #>  [9,] 0.9428649 0.0000000 0.28971757 0.17883725 0.3184166 #> [10,] 0.8876722 0.2897176 0.00000000 0.09618224 0.2926910 #> [11,] 0.8225785 0.1788372 0.09618224 0.00000000 0.1896247 #> [12,] 0.8552705 0.3184166 0.29269096 0.18962473 0.0000000 #>  generate_random_model(d, 'general') #> $graph #> IGRAPH b95ed8b U--- 12 14 --  #> + edges from b95ed8b: #>  [1] 1-- 2 3-- 6 4-- 6 1-- 7 4-- 7 1-- 9 5-- 9 2--10 3--10 7--10 2--11 7--11 #> [13] 6--12 8--12 #>  #> $Gamma #>            [,1]      [,2]      [,3]      [,4]       [,5]      [,6]      [,7] #>  [1,] 0.0000000 0.3098242 0.5151284 0.6425519 1.58185823 0.7206350 0.1871033 #>  [2,] 0.3098242 0.0000000 0.4689128 0.6522880 1.89168244 0.7160302 0.2291397 #>  [3,] 0.5151284 0.4689128 0.0000000 0.5602815 2.09698659 0.5274192 0.3547164 #>  [4,] 0.6425519 0.6522880 0.5602815 0.0000000 2.22441010 0.2543482 0.4652176 #>  [5,] 1.5818582 1.8916824 2.0969866 2.2244101 0.00000000 2.3024933 1.7689616 #>  [6,] 0.7206350 0.7160302 0.5274192 0.2543482 2.30249326 0.0000000 0.5476381 #>  [7,] 0.1871033 0.2291397 0.3547164 0.4652176 1.76896157 0.5476381 0.0000000 #>  [8,] 2.4528655 2.4482606 2.2596496 1.9865786 4.03472368 1.7322304 2.2798685 #>  [9,] 1.4825351 1.7923593 1.9976635 2.1250870 0.09932311 2.2031701 1.6696385 #> [10,] 0.3353065 0.2770228 0.2191284 0.5287895 1.91716473 0.5601635 0.1785445 #> [11,] 0.2797845 0.2122884 0.4447439 0.5779304 1.86164269 0.6545364 0.1258087 #> [12,] 2.2949051 2.2903002 2.1016892 1.8286182 3.87676328 1.5742700 2.1219081 #>            [,8]       [,9]     [,10]     [,11]     [,12] #>  [1,] 2.4528655 1.48253511 0.3353065 0.2797845 2.2949051 #>  [2,] 2.4482606 1.79235933 0.2770228 0.2122884 2.2903002 #>  [3,] 2.2596496 1.99766347 0.2191284 0.4447439 2.1016892 #>  [4,] 1.9865786 2.12508699 0.5287895 0.5779304 1.8286182 #>  [5,] 4.0347237 0.09932311 1.9171647 1.8616427 3.8767633 #>  [6,] 1.7322304 2.20317014 0.5601635 0.6545364 1.5742700 #>  [7,] 2.2798685 1.66963846 0.1785445 0.1258087 2.1219081 #>  [8,] 0.0000000 3.93540056 2.2923939 2.3867669 0.1579604 #>  [9,] 3.9354006 0.00000000 1.8178416 1.7623196 3.7774402 #> [10,] 2.2923939 1.81784162 0.0000000 0.2636791 2.1344335 #> [11,] 2.3867669 1.76231958 0.2636791 0.0000000 2.2288065 #> [12,] 0.1579604 3.77744017 2.1344335 2.2288065 0.0000000 #>  generate_random_model(d, 'complete') #> $graph #> IGRAPH 525e8c3 U--- 12 66 -- Full graph #> + attr: name (g/c), loops (g/l) #> + edges from 525e8c3: #>  [1]  1-- 2  1-- 3  1-- 4  1-- 5  1-- 6  1-- 7  1-- 8  1-- 9  1--10  1--11 #> [11]  1--12  2-- 3  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8  2-- 9  2--10  2--11 #> [21]  2--12  3-- 4  3-- 5  3-- 6  3-- 7  3-- 8  3-- 9  3--10  3--11  3--12 #> [31]  4-- 5  4-- 6  4-- 7  4-- 8  4-- 9  4--10  4--11  4--12  5-- 6  5-- 7 #> [41]  5-- 8  5-- 9  5--10  5--11  5--12  6-- 7  6-- 8  6-- 9  6--10  6--11 #> [51]  6--12  7-- 8  7-- 9  7--10  7--11  7--12  8-- 9  8--10  8--11  8--12 #> [61]  9--10  9--11  9--12 10--11 10--12 11--12 #>  #> $Gamma #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>  [1,] 0.000000  1.826744 2.5198342 4.2667952  2.584708  5.583948  6.285138 #>  [2,] 1.826744  0.000000 6.4535179 9.1284751  2.252150 10.575238  9.529873 #>  [3,] 2.519834  6.453518 0.0000000 0.8056098  6.511059  2.296935  2.045383 #>  [4,] 4.266795  9.128475 0.8056098 0.0000000  8.103820  2.380367  1.898064 #>  [5,] 2.584708  2.252150 6.5110592 8.1038200  0.000000 13.214458  9.978888 #>  [6,] 5.583948 10.575238 2.2969349 2.3803671 13.214458  0.000000  4.101424 #>  [7,] 6.285138  9.529873 2.0453833 1.8980638  9.978888  4.101424  0.000000 #>  [8,] 3.799885  2.743182 6.5516513 8.0627895  1.132995 13.207905  8.282186 #>  [9,] 5.040655  3.130909 6.7864433 8.5146144  3.499823 12.735089  6.436607 #> [10,] 3.471922  2.554109 6.3456017 8.2200324  1.206106 13.336919  8.446862 #> [11,] 3.374544  7.616578 5.5408265 6.4150116  6.424110  7.346951 12.582113 #> [12,] 4.778869 10.076722 0.9297935 0.5136598  9.822322  1.585486  2.467000 #>             [,8]      [,9]      [,10]     [,11]      [,12] #>  [1,]  3.7998848  5.040655  3.4719215  3.374544  4.7788690 #>  [2,]  2.7431822  3.130909  2.5541085  7.616578 10.0767220 #>  [3,]  6.5516513  6.786443  6.3456017  5.540827  0.9297935 #>  [4,]  8.0627895  8.514614  8.2200324  6.415012  0.5136598 #>  [5,]  1.1329952  3.499823  1.2061061  6.424110  9.8223223 #>  [6,] 13.2079046 12.735089 13.3369185  7.346951  1.5854857 #>  [7,]  8.2821860  6.436607  8.4468624 12.582113  2.4669998 #>  [8,]  0.0000000  1.394137  0.6724853  9.366593  9.4847246 #>  [9,]  1.3941372  0.000000  1.5509688 13.775335  9.8140262 #> [10,]  0.6724853  1.550969  0.0000000  9.343888  9.5150467 #> [11,]  9.3665933 13.775335  9.3438880  0.000000  6.4286236 #> [12,]  9.4847246  9.814026  9.5150467  6.428624  0.0000000 #>"},{"path":"/reference/generate_random_spd_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","title":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","text":"Generates random \\(d \\times d\\) symmetric positive definite matrix. done generating random \\(d \\times d\\) matrix B, computing B %*% t(B), normalizing matrix approximately single digit entries.","code":""},{"path":"/reference/generate_random_spd_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","text":"","code":"generate_random_spd_matrix(d, bMin = -10, bMax = 10, ...)"},{"path":"/reference/generate_random_spd_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","text":"d Number rows/columns bMin Minimum value entries B bMax Maximum value entries B ... Ignored, allowed compatibility","code":""},{"path":[]},{"path":"/reference/getDanubeFlowGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Danube flow graph — getDanubeFlowGraph","title":"Get Danube flow graph — getDanubeFlowGraph","text":"Returns igraph::graph object representing flow graph danube dataset.","code":""},{"path":"/reference/getDanubeFlowGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Danube flow graph — getDanubeFlowGraph","text":"","code":"getDanubeFlowGraph(stationIndices = NULL, directed = FALSE)"},{"path":"/reference/getDanubeFlowGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Danube flow graph — getDanubeFlowGraph","text":"stationIndices Logical numerical vector. Indicating stations include. directed Logical. Whether graph directed (direction flow).","code":""},{"path":"/reference/getDanubeFlowGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Danube flow graph — getDanubeFlowGraph","text":"igraph::graph object.","code":""},{"path":[]},{"path":"/reference/getFlightDelayData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get filtered flight delays — getFlightDelayData","title":"Get filtered flight delays — getFlightDelayData","text":"Get filtered flight delay data, containing selection dates airports. Currently, possible selections correspond case study Hentschel et al. (2022) .","code":""},{"path":"/reference/getFlightDelayData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get filtered flight delays — getFlightDelayData","text":"","code":"getFlightDelayData(   what = c(\"delays\", \"IATAs\", \"dates\"),   airportFilter = c(\"all\", \"tcCluster\", \"tcAll\"),   dateFilter = c(\"all\", \"tcTrain\", \"tcTest\", \"tcAll\"),   delayFilter = c(\"totals\", \"arrivals\", \"departures\")[1] )"},{"path":"/reference/getFlightDelayData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get filtered flight delays — getFlightDelayData","text":"Whether get array delays (numerical), just vector airport codes (\"IATAs\", strings) dates (strings). Specify exactly one. airportFilter airports include. Specify exactly one. See details . dateFilter dates include. Specify exactly one. See details . delayFilter kinds delays include. Specify one . Possible values \"arrivals\", \"departures\", \"totals\" (computed sum arrival departure delays).","code":""},{"path":"/reference/getFlightDelayData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get filtered flight delays — getFlightDelayData","text":"=\"IATAs\" =\"dates\", character vector. required, can converted Date objects using .Date(). =\"delays\", three-dimensional array two-dimensional matrix, dimensions corresponding dates, airports, delay types.","code":""},{"path":"/reference/getFlightDelayData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get filtered flight delays — getFlightDelayData","text":"provided lists airports dates correspond ones used case study Hentschel et al. (2022) . argument airportFilter=\"tcCluster\" corresponds airports analyzed \"Texas Cluster\", airportFilter=\"tcAll\" corresponds airports used previous clustering step, airportFilter=\"\" corresponds airports dataset. Similarly, dateFilter=\"tcTrain\" selects dates training set, dateFilter=\"tcTest\" ones test/validation set. get union sets, specify dateFilter=\"tcAll\". get dates dataset (possibly \"tcAll\"), specify dateFilter=\"\".","code":""},{"path":"/reference/getFlightDelayData.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get filtered flight delays — getFlightDelayData","text":"Hentschel M, Engelke S, Segers J (2022). “Statistical Inference Hüsler-Reiss Graphical Models Matrix Completions.” doi:10.48550/ARXIV.2210.14292 , https://arxiv.org/abs/2210.14292.","code":""},{"path":[]},{"path":"/reference/getFlightGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Get flight graph — getFlightGraph","title":"Get flight graph — getFlightGraph","text":"Convert info flights$flightCounts igraph::graph object.","code":""},{"path":"/reference/getFlightGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get flight graph — getFlightGraph","text":"","code":"getFlightGraph(IATAs = NULL, years = NULL, minNFlights = 1, directed = FALSE)"},{"path":"/reference/getFlightGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get flight graph — getFlightGraph","text":"IATAs Character vector. IATA codes airports include years Character vector. Years include (strings). minNFlights Numerical scalar. Minimum number flights connection included edge. directed Logical scalar. Whether flights ->B B->considered separately.","code":""},{"path":"/reference/getFlightGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get flight graph — getFlightGraph","text":"igraph::graph object containing vertex airport edge whenever least minNFlights two airports.","code":""},{"path":[]},{"path":"/reference/getFlightGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get flight graph — getFlightGraph","text":"","code":"g <- getFlightGraph()"},{"path":"/reference/getPackageData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get package data — getPackageData","title":"Get package data — getPackageData","text":"Get private data sets inst/extdata.","code":""},{"path":"/reference/getPackageData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get package data — getPackageData","text":"","code":"getPackageData(filename, isRDS = TRUE)"},{"path":"/reference/getPackageData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get package data — getPackageData","text":"filename Base name file. E.g. \"FILENAME\" file inst/extdata/FILENAME. isRDS Whether file .RDS file.","code":""},{"path":"/reference/getPackageData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get package data — getPackageData","text":"isRDS=TRUE R object. isRDS=FALSE environment, containing R objects file.","code":""},{"path":"/reference/getSubMatrixForSubgraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the submatrix corresponding to a subgraph — getSubMatrixForSubgraph","title":"Get the submatrix corresponding to a subgraph — getSubMatrixForSubgraph","text":"graph subgraph need persistent IDs graph==NULL assumed pIDs 1, 2, ...","code":""},{"path":"/reference/getSubMatrixForSubgraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the submatrix corresponding to a subgraph — getSubMatrixForSubgraph","text":"","code":"getSubMatrixForSubgraph(fullMatrix, subgraph, graph = NULL)"},{"path":"/reference/get_alert_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Get alert function — get_alert_function","title":"Get alert function — get_alert_function","text":"Get function can used alert user invalid inputs. Returns value implied overwrite argument, option \"graphicalExtremes.default.alert\", falling back warning() neither specified.","code":""},{"path":"/reference/get_alert_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get alert function — get_alert_function","text":"","code":"get_alert_function(overwrite = NULL)"},{"path":"/reference/get_alert_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get alert function — get_alert_function","text":"overwrite NULL TRUE read option value, FALSE return dummy function, function takes arbitrary number strings arguments (e.g. stop()).","code":""},{"path":"/reference/get_alert_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get alert function — get_alert_function","text":"function takes arbitrary number strings arguments.","code":""},{"path":[]},{"path":"/reference/get_cliques_and_separators.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cliques and Separators of a graph — get_cliques_and_separators","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"Finds cliques, separators, (recursively) separators separators graph.","code":""},{"path":"/reference/get_cliques_and_separators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"","code":"get_cliques_and_separators(   graph,   sortIntoLayers = FALSE,   includeSingletons = FALSE )"},{"path":"/reference/get_cliques_and_separators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"graph [igraph::graph] object","code":""},{"path":"/reference/get_cliques_and_separators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"list vertex sets represent cliques (recursive) separators graph, ordered separators come cliques separate.","code":""},{"path":"/reference/get_cliques_and_separators_OLD.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","title":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","text":"Finds cliques, separators, (recursively) separators separators graph.","code":""},{"path":"/reference/get_cliques_and_separators_OLD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","text":"","code":"get_cliques_and_separators_OLD(graph)"},{"path":"/reference/get_cliques_and_separators_OLD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","text":"graph [igraph::graph] object","code":""},{"path":"/reference/get_cliques_and_separators_OLD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","text":"list vertex sets represent cliques (recursive) separators graph","code":""},{"path":"/reference/get_mc_cores.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of cores to be used in parallel computations — get_mc_cores","title":"Number of cores to be used in parallel computations — get_mc_cores","text":"Helper function returns number cores used parallel computations. always 1 Windows. systems, value can set using setOption('graphicalExtremes.mc.cores', ...).","code":""},{"path":"/reference/get_mc_cores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of cores to be used in parallel computations — get_mc_cores","text":"","code":"get_mc_cores(overwrite = NULL)"},{"path":"/reference/get_mc_cores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of cores to be used in parallel computations — get_mc_cores","text":"overwrite Use value (valid Windows)","code":""},{"path":"/reference/get_mc_cores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of cores to be used in parallel computations — get_mc_cores","text":"integer used number cores","code":""},{"path":[]},{"path":"/reference/get_tol.html","id":null,"dir":"Reference","previous_headings":"","what":"Tolerances to be used in computations — get_small_tol","title":"Tolerances to be used in computations — get_small_tol","text":"Helper function returns tolerance used internal computations.","code":""},{"path":"/reference/get_tol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tolerances to be used in computations — get_small_tol","text":"","code":"get_small_tol(overwrite = NULL)  get_large_tol(overwrite = NULL)"},{"path":"/reference/get_tol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tolerances to be used in computations — get_small_tol","text":"overwrite NULL numeric scalar. specified, use value instead option value.","code":""},{"path":"/reference/get_tol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tolerances to be used in computations — get_small_tol","text":"non-negative numerical scalar","code":""},{"path":"/reference/get_tol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tolerances to be used in computations — get_small_tol","text":"two different tolerances used package, details see graphicalExtremes-package. default values tolerances can set using options \"graphicalExtremes.tol.small\" \"graphicalExtremes.tol.large\".","code":""},{"path":[]},{"path":"/reference/graphicalExtremes.html","id":null,"dir":"Reference","previous_headings":"","what":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"implementation statistical methodology paper Engelke Hitz (2020)  sparse multivariate extreme value models. Includes exact simulation algorithms statistical inference methods multivariate Pareto distributions graphical structures. Also contains implementations statistical methods Engelke Volgushev (2022) , Röttger et al. (2021) , Hentschel et al. (2022) .","code":""},{"path":"/reference/graphicalExtremes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"following global options used functions package. values can changed using base::options(). \"graphicalExtremes.mc.cores\" (maximal) number cores use parallel tasks. always overwritten 1 Windows. \"graphicalExtremes.tol.small\" \"small\" tolerance used internal computations values mathematically exactly equal zero, deviate due inherent limitations numerical computations. value used e.g. checking matrices symmetry definiteness. general, value used \"permissive\" tolerance, sense value positive, compared actual zero, zero, absolute value compared tolerance. \"graphicalExtremes.tol.large\" \"large\" tolerance used values converge zero, mathematically supposed equal zero. value used e.g. converting precision matrix \\(\\Theta\\) adjacency matrix graph. \"graphicalExtremes.default.alert default alert function used validity checks Huesler-Reiss parameter matrix transformations. Can function takes arbitrary number strings arguments (e.g. cat(), stop()), FALSE ignore alerts, TRUE/NULL use default function warning().","code":""},{"path":"/reference/graphicalExtremes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932. Engelke S, Volgushev S (2022). “Structure learning extremal tree models.” J. R. Stat. Soc. Ser. B Stat. Methodol.. doi:10.1111/rssb.12556 , Forthcoming, https://rss.onlinelibrary.wiley.com/doi/pdf/10.1111/rssb.12556. Hentschel M, Engelke S, Segers J (2022). “Statistical Inference Hüsler-Reiss Graphical Models Matrix Completions.” doi:10.48550/ARXIV.2210.14292 , https://arxiv.org/abs/2210.14292. Röttger F, Engelke S, Zwiernik P (2021). “Total positivity multivariate extremes.” doi:10.48550/ARXIV.2112.14727 , https://arxiv.org/abs/2112.14727.","code":""},{"path":[]},{"path":"/reference/graphicalExtremes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"Maintainer: Sebastian Engelke sebastian.engelke@unige.ch Authors: Adrien S. Hitz Nicola Gnecco Manuel Hentschel","code":""},{"path":"/reference/graphs_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph equality — graphs_equal","title":"Graph equality — graphs_equal","text":"Produce true two graphs vertices edges (ordered)","code":""},{"path":"/reference/graphs_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph equality — graphs_equal","text":"","code":"graphs_equal(g1, g2)"},{"path":"/reference/graphs_equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph equality — graphs_equal","text":"g1 igraph::graph g2 igraph::graph","code":""},{"path":"/reference/graphs_equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph equality — graphs_equal","text":"logical indicating graphs equal","code":""},{"path":"/reference/logLH_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Full censored log-likelihood of HR model — logLH_HR","title":"Full censored log-likelihood of HR model — logLH_HR","text":"Computes full (censored) log-likelihood HR model.","code":""},{"path":"/reference/logLH_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full censored log-likelihood of HR model — logLH_HR","text":"","code":"logLH_HR(data, Gamma, cens = FALSE)"},{"path":"/reference/logLH_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full censored log-likelihood of HR model — logLH_HR","text":"data Numeric \\(n \\times d\\) matrix, containing observations following multivariate HR Pareto distribution. Gamma Numeric \\(d \\times d\\) matrix, representing variogram matrix \\(\\Gamma\\). cens Boolean. true, censored log-likelihood computed. default, cens = FALSE.","code":""},{"path":"/reference/logLH_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full censored log-likelihood of HR model — logLH_HR","text":"Numeric. full censored log-likelihood HR model.","code":""},{"path":"/reference/logdVK_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute censored exponent measure — logdVK_HR","title":"Compute censored exponent measure — logdVK_HR","text":"Computes (censored) exponent measure density HR distribution.","code":""},{"path":"/reference/logdVK_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute censored exponent measure — logdVK_HR","text":"","code":"logdVK_HR(x, K, Gamma)"},{"path":"/reference/logdVK_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute censored exponent measure — logdVK_HR","text":"x Numeric vector d positive elements censored exponent measure evaluated. K Integer vector, subset 1, ..., d, index set censored. logical vector length d, indicating entries censored. Gamma d x d variogram matrix numeric vector d(d-1)/2 elements, containing upper triangular part variogram matrix.","code":""},{"path":"/reference/logdVK_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute censored exponent measure — logdVK_HR","text":"Numeric. censored exponent measure HR distribution. entries censored, result logdV_HR(x, par returned.","code":""},{"path":"/reference/logdV_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the exponent measure density of HR distribution — logdV_HR","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"Computes exponent measure density HR distribution.","code":""},{"path":"/reference/logdV_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"","code":"logdV_HR(x, Gamma = NULL, Theta = NULL)"},{"path":"/reference/logdV_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"x Numeric \\(n \\times d\\) matrix vector d elements. Gamma d x d variogram matrix numeric vector d(d-1)/2 elements, containing upper triangular part variogram matrix. Theta d x d precision matrix numeric vector d(d-1)/2 elements, containing upper triangular part precision matrix.","code":""},{"path":"/reference/logdV_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"Numeric. censored exponent measure HR distribution.","code":""},{"path":"/reference/logdV_HR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"Gamma Theta needed internally, one missing computed one.","code":""},{"path":"/reference/loglik_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Huesler-Reiss log-likelihood, AIC, and BIC — loglik_HR","title":"Compute Huesler-Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"Computes (censored) Huesler-Reiss log-likelihood, AIC, BIC values.","code":""},{"path":"/reference/loglik_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Huesler-Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"","code":"loglik_HR(data, p = NULL, graph = NULL, Gamma, cens = FALSE)"},{"path":"/reference/loglik_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Huesler-Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"data Numeric \\(n \\times d\\) matrix. contains observations following multivariate HR Pareto distribution. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. graph [igraph::graph] object NULL. graph must undirected connected. graph specified, complete graph used. Gamma Numeric \\(n \\times d\\) matrix. represents variogram matrix \\(\\Gamma\\). cens Boolean. true, censored log-likelihood computed. default, cens = FALSE.","code":""},{"path":"/reference/loglik_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Huesler-Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"Numeric vector c(\"loglik\"=..., \"aic\"=..., \"bic\"=...) evaluated log-likelihood, AIC, BIC values.","code":""},{"path":[]},{"path":"/reference/make_numeric_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert indices to numerical indices — make_numeric_indices","title":"Convert indices to numerical indices — make_numeric_indices","text":"Converts (possibly) logical indices numerical ones. Also ensures unique indices sorts specified.","code":""},{"path":"/reference/make_numeric_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert indices to numerical indices — make_numeric_indices","text":"","code":"make_numeric_indices(ind, n = NULL, unique = TRUE, sort = TRUE)"},{"path":"/reference/make_numeric_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert indices to numerical indices — make_numeric_indices","text":"ind numerical logical index vector n Max numerical index (used ind logical might recycled) unique Whether keep every (numerical) index sort Whether sort numerical indices","code":""},{"path":"/reference/make_numeric_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert indices to numerical indices — make_numeric_indices","text":"numerical index vector","code":""},{"path":"/reference/make_sep_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of separators — make_sep_list","title":"Create a list of separators — make_sep_list","text":"Creates list separator set, every pair non-adjacent vertices graph completely disconnected removal (least) one separator sets graph.","code":""},{"path":"/reference/make_sep_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of separators — make_sep_list","text":"","code":"make_sep_list(graph, details = TRUE)"},{"path":"/reference/make_sep_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of separators — make_sep_list","text":"graph graph details Return detailed infos (default TRUE)","code":""},{"path":"/reference/make_sep_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of separators — make_sep_list","text":"list numeric vectors","code":""},{"path":"/reference/matrix2graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert matrix to graph — Gamma2graph","title":"Convert matrix to graph — Gamma2graph","text":"Creates graph object representing graph structure implied parameter matrix.","code":""},{"path":"/reference/matrix2graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert matrix to graph — Gamma2graph","text":"","code":"Gamma2graph(Gamma, tol = get_large_tol(), check = TRUE)  Sigma2graph(Sigma, tol = get_large_tol(), k = NULL, full = FALSE, check = TRUE)  Theta2graph(Theta, tol = get_large_tol(), k = NULL, full = FALSE, check = TRUE)  partialMatrixToGraph(M)"},{"path":"/reference/matrix2graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert matrix to graph — Gamma2graph","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. tol Numeric scalar. Entries precision matrix absolute value smaller considered zero. check Whether check inputs call ensure_matrix_symmetry_and_truncate_zeros outputs. Sigma Numeric \\(d \\times d\\) \\((d-1) \\times (d-1)\\) covariance matrix. k NULL input/output matrix \\(\\Sigma\\)/\\(\\Theta\\). Else, integer 1 d indicating value k \\(\\Sigma^k\\), \\(\\Theta^k\\). full Logical. TRUE !.null(k), input/output matrix \\(d \\times d\\) matrix kth row filled zeros. Theta Numeric \\(d \\times d\\) \\((d-1) \\times (d-1)\\) precision matrix. M Partial matrix NA entries indicating missing edges.","code":""},{"path":"/reference/matrix2graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert matrix to graph — Gamma2graph","text":"igraph::graph object.","code":""},{"path":[]},{"path":"/reference/mparetomargins.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginalize multivariate Pareto dataset — mparetomargins","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"Marginalize multivariate Pareto dataset data respect variables set_indices.","code":""},{"path":"/reference/mparetomargins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"","code":"mparetomargins(data, set_indices)"},{"path":"/reference/mparetomargins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"data Numeric \\(n \\times d\\) matrix. dataset containing observations following multivariate Pareto distribution. set_indices Numeric vector d different elements 1, ..., d. variables respect marginalize multivariate distribution.","code":""},{"path":"/reference/mparetomargins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"Numeric \\(n \\times m\\) matrix, m length set_indices. Marginalized multivariate Pareto data.","code":""},{"path":"/reference/order_cliques.html","id":null,"dir":"Reference","previous_headings":"","what":"Order Cliques — order_cliques","title":"Order Cliques — order_cliques","text":"Orders cliques connected decomposable graph fulfill running intersection property.","code":""},{"path":"/reference/order_cliques.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order Cliques — order_cliques","text":"","code":"order_cliques(cliques)"},{"path":"/reference/par2Matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Gamma or Theta from vector — par2Matrix","title":"Create Gamma or Theta from vector — par2Matrix","text":"Convert parameter vector par (upper triangular part Gamma/Theta matrix) full Gamma/Theta, vice versa.","code":""},{"path":"/reference/par2Matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Gamma or Theta from vector — par2Matrix","text":"","code":"par2Matrix(par, allowMatrix = FALSE, allowNull = FALSE, zeroRowSums = FALSE)  par2Gamma(par, allowMatrix = FALSE, allowNull = FALSE)  par2Theta(par, allowMatrix = FALSE, allowNull = FALSE)  matrix2par(M, allowVector = FALSE, allowNull = FALSE)"},{"path":"/reference/par2Matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Gamma or Theta from vector — par2Matrix","text":"par Numeric vector d elements. Upper triangular part Gamma/Theta matrix. allowMatrix TRUE par already matrix, return . allowNull TRUE par NULL, return NULL. zeroRowSums TRUE diagonal set (-1) times rowSums. M Matrix allowVector TRUE M already vector, return .","code":""},{"path":"/reference/par2Matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Gamma or Theta from vector — par2Matrix","text":"Numeric matrix \\(d \\times d\\). Full Gamma/Theta matrix corresponding par. Upper triangular part M (M /NULL allowed)","code":""},{"path":[]},{"path":"/reference/parToMatricesFactory.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory: parToMatrices — parToMatricesFactory","title":"Factory: parToMatrices — parToMatricesFactory","text":"Creates helper function convert parameter vector par Gamma /Theta matrix.","code":""},{"path":"/reference/parToMatricesFactory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory: parToMatrices — parToMatricesFactory","text":"","code":"parToMatricesFactory(   graph,   init = NULL,   fixParams = integer(0),   parIsTheta = FALSE,   checkValidity = TRUE )"},{"path":"/reference/parToMatricesFactory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory: parToMatrices — parToMatricesFactory","text":"graph par represents entries corresponding edges graph. init values used fixed parameters fixParams indices (logical numeric) fixed parameters full parameter vector. parIsTheta TRUE par represents entries Theta (otherwise Gamma) checkValidity Whether check implied Gamma/Theta valid parameter matrix.","code":""},{"path":"/reference/parToMatricesFactory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory: parToMatrices — parToMatricesFactory","text":"function parToMatrices(par, forceGamma=FALSE, forceTheta=FALSE), takes parameter vector returns either NULL list entries Gamma, Theta. function returns NULL checkValidity==TRUE par implies invalid matrix. Otherwise, depending parIsTheta, forceTheta, forceGamma, one Gamma Theta matrices implied par.","code":""},{"path":"/reference/parameterMatrixConversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between Huesler-Reiss parameter matrices — Gamma2Sigma","title":"Conversion between Huesler-Reiss parameter matrices — Gamma2Sigma","text":"Converts different matrices parametrize Huesler-Reiss distribution: \\(\\Gamma\\), \\(\\Sigma\\), \\(\\Theta\\), \\(\\Sigma^k\\), \\(\\Theta^k\\). \\((d-1) \\times (d-1)\\) matrices \\(\\Sigma^k\\) \\(\\Theta^k\\) can also given/returned \\(d \\times d\\) matrices kth row column filled zeros.","code":""},{"path":"/reference/parameterMatrixConversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between Huesler-Reiss parameter matrices — Gamma2Sigma","text":"","code":"Gamma2Sigma(Gamma, k = NULL, full = FALSE, check = TRUE)  Gamma2Theta(Gamma, k = NULL, full = FALSE, check = TRUE)  Sigma2Gamma(Sigma, k = NULL, full = FALSE, check = TRUE)  Theta2Gamma(Theta, k = NULL, full = FALSE, check = TRUE)  Sigma2Theta(   Sigma,   k1 = NULL,   k2 = NULL,   full1 = FALSE,   full2 = FALSE,   check = TRUE )  Theta2Sigma(   Theta,   k1 = NULL,   k2 = NULL,   full1 = FALSE,   full2 = FALSE,   check = TRUE )  Theta2Theta(   Theta,   k1 = NULL,   k2 = NULL,   full1 = FALSE,   full2 = FALSE,   check = TRUE )  Sigma2Sigma(   Sigma,   k1 = NULL,   k2 = NULL,   full1 = FALSE,   full2 = FALSE,   check = TRUE )  Gamma2Gamma(Gamma, check = TRUE)  matrix2matrix(   M,   name1 = c(\"Gamma\", \"Sigma\", \"Theta\")[1],   name2 = c(\"Gamma\", \"Sigma\", \"Theta\")[1],   k1 = NULL,   k2 = NULL,   full1 = FALSE,   full2 = FALSE,   check = TRUE )"},{"path":"/reference/parameterMatrixConversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between Huesler-Reiss parameter matrices — Gamma2Sigma","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. k NULL input/output matrix \\(\\Sigma\\)/\\(\\Theta\\). Else, integer 1 d indicating value k \\(\\Sigma^k\\), \\(\\Theta^k\\). full Logical. TRUE !.null(k), input/output matrix \\(d \\times d\\) matrix kth row filled zeros. check Whether check inputs call ensure_matrix_symmetry_and_truncate_zeros outputs. Sigma Numeric \\(d \\times d\\) \\((d-1) \\times (d-1)\\) covariance matrix. Theta Numeric \\(d \\times d\\) \\((d-1) \\times (d-1)\\) precision matrix. k1 NULL input matrix \\(\\Sigma\\)/\\(\\Theta\\). Else, integer 1 d indicating value k \\(\\Sigma^k\\), \\(\\Theta^k\\). k2 NULL output matrix \\(\\Sigma\\)/\\(\\Theta\\). Else, integer 1 d indicating value k \\(\\Sigma^k\\), \\(\\Theta^k\\). full1 Logical. TRUE !.null(k1), input \\(d \\times d\\) matrix kth row filled zeros. full2 Logical. TRUE !.null(k2), output \\(d \\times d\\) matrix kth row filled zeros. M Numeric matrix, \\(\\Gamma\\), \\(\\Sigma\\), \\(\\Theta\\). name1 Name input representation. name2 Name output representation.","code":""},{"path":"/reference/parameterMatrixConversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between Huesler-Reiss parameter matrices — Gamma2Sigma","text":"desired parameter matrix corresponding specified inputs.","code":""},{"path":"/reference/parameterMatrixConversion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion between Huesler-Reiss parameter matrices — Gamma2Sigma","text":"k, k1, k2 NULL, corresponding full* argument ignored. Gamma2Gamma checks returns input. matrix2matrix wrapper function calls corresponding conversion function implied name1, name2.","code":""},{"path":[]},{"path":"/reference/plotDanube.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Danube River Flow Data — plotDanube","title":"Plot Danube River Flow Data — plotDanube","text":"Plotting function visualize river flow data danube dataset. Requires ggplot2 installed.","code":""},{"path":"/reference/plotDanube.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Danube River Flow Data — plotDanube","text":"","code":"plotDanube(   stationIndices = NULL,   graph = NULL,   directed = NULL,   plotStations = TRUE,   plotConnections = TRUE,   labelStations = FALSE,   returnGGPlot = FALSE,   useStationVolume = FALSE,   useConnectionVolume = FALSE,   mapCountries = c(\"Germany\"),   vertexColors = NULL,   vertexShapes = NULL,   edgeColors = NULL,   xyRatio = NULL,   clipMap = 1.2,   useLatex = FALSE,   edgeAlpha = 0.2 )  plotDanubeIGraph(   stationIndices = NULL,   graph = NULL,   directed = NULL,   labelStations = TRUE,   vertexColors = NULL,   vertexShapes = NULL,   edgeColors = NULL,   ... )"},{"path":"/reference/plotDanube.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Danube River Flow Data — plotDanube","text":"stationIndices Logical numerical vector, indicating stations plotted. graph igraph::graph object NULL use flow graph. directed Logical. Whether consider flow graph directed. plotStations Logical. Whether plot stations. plotConnections Logical. Whether plot connections. labelStations Logical. Whether label stations. returnGGPlot TRUE, ggplot2::ggplot object returned plotted immediately. useStationVolume Logical. Whether indicate flow volume station circle size. useConnectionVolume Logical. Whether indicate flow volume connection line width. mapCountries country borders show using ggplot2::map_data('world', mapCountries). vertexColors Vector color information vertices. vertexShapes Vector shape information vertices. edgeColors Vector color information edges. xyRatio Approximate X-Y-ratio (w.r.t. distance ground) area shown plot. clipMap Logical numeric scalar. Whether ignore map image determining axis limits plot. positive scalar, plot limits extended factor. useLatex Whether format numbers etc. latex code (useful plotting tikz). edgeAlpha Numeric scalar 0 1. alpha value used plotting edges/connections. ... Passed igraph::plot.igraph.","code":""},{"path":"/reference/plotDanube.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Danube River Flow Data — plotDanube","text":"values vertexColors, vertexShapes, edgeColors interpreted differently ggplot2::geom_point/ggplot2::geom_segment igraph::plot.igraph(). plotDanube uses combination ggplot2 functions plot graph. plotDanubeIGraph uses igraph::plot.igraph plot graph.","code":""},{"path":[]},{"path":"/reference/plotDanube.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Danube River Flow Data — plotDanube","text":"","code":"# Basic plot graphicalExtremes::plotDanube() #> Loading required namespace: ggplot2   # Plot flow volumes graphicalExtremes::plotDanube(     clipMap = 1.2,     useConnectionVolume = TRUE,     useStationVolume = TRUE )   # Plot other graph structures nStations <- nrow(graphicalExtremes::danube$info) g <- igraph::erdos.renyi.game(nStations, nStations, 'gnm') graphicalExtremes::plotDanube(     clipMap = 1.2,     graph = g )"},{"path":"/reference/plotFlights.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot flight data — plotFlights","title":"Plot flight data — plotFlights","text":"Plotting function visualize flight connections flights dataset. function requires package ggplot2 installed.","code":""},{"path":"/reference/plotFlights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot flight data — plotFlights","text":"","code":"plotFlights(   airportIndices = NULL,   airports_sel = NULL,   connections_sel = NULL,   graph = NULL,   plotAirports = TRUE,   plotConnections = TRUE,   labelAirports = FALSE,   returnGGPlot = FALSE,   useAirportNFlights = FALSE,   useConnectionNFlights = FALSE,   minNFlights = 0,   map = \"state\",   vertexColors = NULL,   vertexShapes = NULL,   edgeColors = NULL,   xyRatio = NULL,   clipMap = FALSE,   useLatex = FALSE,   edgeAlpha = 0.2 )"},{"path":"/reference/plotFlights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot flight data — plotFlights","text":"airportIndices indices airports (w.r.t. airports_sel) include. airports_sel airports plot. Might subset arguments airportIndices, graph. NULL, flights$airports used. connections_sel three columns data frame output flightCountMatrixToConnectionList(). NULL, flights$nFlights used construct one. graph optional igraph::graph object, containing flight graph plot. Vertices either match selected airports number order, named corresponding IATA codes airports represent. plotAirports Logical. Whether plot airports specified. plotConnections Logical. Whether plot connections specified. labelAirports Logical. Whether show IATA code next plotted airport. returnGGPlot TRUE, ggplot2::ggplot object returned plotted immediately. useAirportNFlights Logical. Whether vary size circles representing airports plot, according number flights airport. useConnectionNFlights Logical. Whether vary size edges representing connections plot, according number flights connection. minNFlights Numeric scalar. plot connections least many flights. map String data.frame NULL. map use background image. Strings passed ggplot2::map_data(), data frames assumed output ggplot2::map_data(). vertexColors Optional vector, named IATA codes, used colors vertices/airports. vertexShapes Optional vector, named IATA codes, used shapes vertices/airports. coerced character. edgeColors Optional vector symmetric matrix (character numeric), used colors edges/connections. vector, entries must match plotted connections (order specified connections_sel implied igraph::get.edgelist). matrix, row/column names must IATA codes, rows/columns match plotted airports (number order). xyRatio Approximate X-Y-ratio (w.r.t. distance ground) area shown plot. clipMap Logical numeric scalar. Whether ignore map image determining axis limits plot. positive scalar, plot limits extended factor. useLatex Whether format numbers etc. latex code (useful plotting tikz). edgeAlpha Numeric scalar 0 1. alpha value used plotting edges/connections.","code":""},{"path":"/reference/plotFlights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot flight data — plotFlights","text":"returnGGPlot TRUE, ggplot2::ggplot object, otherwise NULL.","code":""},{"path":[]},{"path":"/reference/plotFlights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot flight data — plotFlights","text":"","code":"# Plot all airports in the dataset plotFlights(plotConnections = FALSE, map = 'world')   # Plot a selection of airports plotFlights(c('JFK', 'SFO', 'LAX'), useConnectionNFlights = TRUE, useAirportNFlights = TRUE)   # Plot airports with a custom connections graph IATAs <- c('ACV', 'BFL', 'EUG', 'SFO', 'MRY') graph <- igraph::make_full_graph(length(IATAs)) plotFlights(IATAs, graph=graph, clipMap = 1.5)"},{"path":"/reference/rmpareto.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate Pareto distribution — rmpareto","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"Simulates exact samples multivariate Pareto distribution.","code":""},{"path":"/reference/rmpareto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"","code":"rmpareto(   n,   model = c(\"HR\", \"logistic\", \"neglogistic\", \"dirichlet\"),   d = NULL,   par )"},{"path":"/reference/rmpareto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"n Number simulations. model parametric model type; one : HR (default), logistic, neglogistic, dirichlet. d Dimension multivariate Pareto distribution. cases can NULL inferred par. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, model = HR. \\(\\theta \\(0, 1)\\), model = logistic. \\(\\theta > 0\\), model = neglogistic. \\(\\alpha\\), numeric vector size d positive entries, model = dirichlet.","code":""},{"path":"/reference/rmpareto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"Numeric \\(n \\times d\\) matrix simulations multivariate Pareto distribution.","code":""},{"path":"/reference/rmpareto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"simulation follows algorithm Engelke Hitz (2020) . details parameters Huesler-Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmpareto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"Coles S, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317. Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":[]},{"path":"/reference/rmpareto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"","code":"## A 4-dimensional HR distribution n <- 10 d <- 4 G <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  rmpareto(n, \"HR\", d = d, par = G) #>             [,1]       [,2]        [,3]       [,4] #>  [1,]  0.6242115  1.2340786  0.28424553  0.4945530 #>  [2,]  7.7306138  0.5739548  5.36225882  0.9660429 #>  [3,]  6.3546256 12.9548933  4.73217785  4.2658041 #>  [4,]  0.6558634  1.5353209  0.49389134  0.5448121 #>  [5,] 42.8554548  8.5273448 31.33763315 55.9390571 #>  [6,]  1.6246369  0.1199755  2.05703805  0.6370474 #>  [7,]  1.1139422  0.2996312  0.36922986  0.8431961 #>  [8,]  1.3597143  1.6552748  5.86433799  1.1239351 #>  [9,]  1.6800225  0.2931093  0.08781558  0.1119706 #> [10,]  0.6128817  1.2130212  0.90993956  0.4373595  ## A 3-dimensional logistic distribution n <- 10 d <- 3 theta <- .6 rmpareto(n, \"logistic\", d, par = theta) #>             [,1]        [,2]      [,3] #>  [1,] 8.24837685 10.69857583 2.4734847 #>  [2,] 1.14082522  0.58671413 1.2991381 #>  [3,] 1.05199869  0.01952548 0.1518117 #>  [4,] 0.09815916  2.09836473 0.9171968 #>  [5,] 1.44549755  0.03732527 0.1230960 #>  [6,] 0.87907805  2.96681227 1.6638072 #>  [7,] 0.25061503  1.47779913 0.2151474 #>  [8,] 1.05973104  0.40336846 0.1357882 #>  [9,] 0.21627479  1.27101068 0.5378615 #> [10,] 0.76093562  0.58420217 1.3596907  ## A 5-dimensional negative logistic distribution n <- 10 d <- 5 theta <- 1.5 rmpareto(n, \"neglogistic\", d, par = theta) #>             [,1]      [,2]      [,3]      [,4]       [,5] #>  [1,]  1.0410953 1.0368430 3.0641360 0.4899866  0.3413277 #>  [2,]  0.8043985 1.4684191 0.3371993 2.4377260  2.0067296 #>  [3,]  0.8398382 1.3174039 0.3297471 1.1210441  0.7363261 #>  [4,]  1.6320666 0.4856634 0.2237380 0.1971754  0.6634043 #>  [5,]  1.6686381 0.2726166 0.7718576 0.7949440  0.2269781 #>  [6,]  0.7743841 1.7759363 4.0861415 0.3360490  3.0394581 #>  [7,]  0.8424968 0.8434586 1.6880089 0.2612004  0.4319269 #>  [8,]  4.2622232 5.1144089 1.3030681 5.3718415  1.0723264 #>  [9,] 10.4418632 3.3544738 5.1462313 2.2192071 17.9442460 #> [10,]  1.1775948 0.5574875 1.1206045 6.1359100  1.2798100  ## A 4-dimensional Dirichlet distribution n <- 10 d <- 4 alpha <- c(.8, 1, .5, 2) rmpareto(n, \"dirichlet\", d, par = alpha) #>              [,1]       [,2]       [,3]      [,4] #>  [1,]  0.54438164 0.03495636 0.89308764 1.6750301 #>  [2,]  4.66487201 0.28122718 2.04269019 1.5075597 #>  [3,]  2.60696064 1.67971723 1.70213708 1.5252516 #>  [4,]  0.07793149 0.38886068 1.15564558 0.1560207 #>  [5,]  2.97816809 0.28430839 0.77949134 1.9339135 #>  [6,]  1.44739369 1.33222612 0.01962053 0.3117005 #>  [7,]  1.08362319 0.32159735 0.52307518 0.1984790 #>  [8,]  0.03959297 0.01409648 0.60053325 4.2018204 #>  [9,] 17.73588870 0.15360482 9.95951584 8.4454189 #> [10,]  4.03849379 0.94996230 1.76963146 1.4442792"},{"path":"/reference/rmpareto_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"Simulates exact samples multivariate Pareto distribution extremal graphical model tree defined Engelke Hitz (2020) .","code":""},{"path":"/reference/rmpareto_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"","code":"rmpareto_tree(n, model = c(\"HR\", \"logistic\", \"dirichlet\")[1], tree, par)"},{"path":"/reference/rmpareto_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"n Number simulations. model parametric model type; one : HR (default), logistic, dirichlet. tree Graph object igraph package. object must tree, .e., undirected graph connected cycles. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, entries corresponding edges tree used, model = HR. Alternatively, can vector length d-1 containing entries variogram corresponding edges given tree. \\(\\theta \\(0, 1)\\), vector length d-1 containing logistic parameters corresponding edges given tree, model = logistic. matrix size \\((d - 1) \\times 2\\), rows contain parameters vectors \\(\\alpha\\) size 2 positive entries edges tree, model = dirichlet.","code":""},{"path":"/reference/rmpareto_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"Numeric \\(n \\times d\\) matrix simulations multivariate Pareto distribution.","code":""},{"path":"/reference/rmpareto_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"simulation follows algorithm Engelke Hitz (2020) . details parameters Huesler-Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmpareto_tree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"Coles S, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317. Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":[]},{"path":"/reference/rmpareto_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"","code":"## A 4-dimensional HR tree model  my_tree <- igraph::graph_from_adjacency_matrix(rbind(   c(0, 1, 0, 0),   c(1, 0, 1, 1),   c(0, 1, 0, 0),   c(0, 1, 0, 0) ), mode = \"undirected\" ) n <- 10 Gamma_vec <- c(.5, 1.4, .8) set.seed(123) rmpareto_tree(n, \"HR\", tree = my_tree, par = Gamma_vec) #>             [,1]      [,2]      [,3]      [,4] #>  [1,] 2.84253613 1.0005391 0.3084607 0.4418211 #>  [2,] 2.47736524 1.3292869 1.2637143 1.2880978 #>  [3,] 0.06591181 0.2870575 1.0531443 0.3019635 #>  [4,] 7.55377972 9.1991979 5.8316487 3.9821044 #>  [5,] 3.04152555 1.7000302 6.6294011 0.4891234 #>  [6,] 1.06779693 0.2294188 0.2181644 0.1903021 #>  [7,] 0.21873177 0.3305197 0.1273843 1.0729052 #>  [8,] 0.42635241 0.3883451 1.0709708 0.2981210 #>  [9,] 0.10432605 0.2854805 1.0420470 0.1541613 #> [10,] 0.60313584 0.4771446 1.4032066 0.0989642  ## A 4-dimensional Dirichlet model with asymmetric edge distributions  alpha <- cbind(c(.2, 1, .5), c(1.5, .6, .8)) rmpareto_tree(n, model = \"dirichlet\", tree = my_tree, par = alpha) #>               [,1]        [,2]         [,3]        [,4] #>  [1,] 5.762897e-04  7.58402408 12.509319036 0.157712818 #>  [2,] 3.533313e-02  0.06507584  0.002406825 1.997241878 #>  [3,] 3.282715e+00  0.91728177  0.431414007 0.010582074 #>  [4,] 1.000012e+00  0.10685203  0.125698592 0.005096915 #>  [5,] 5.247710e-07  1.59205151  0.335459093 3.595989200 #>  [6,] 9.668793e-03 15.03385028  0.927124706 5.745471227 #>  [7,] 1.534824e+00  0.09823805  0.034636347 1.393518517 #>  [8,] 3.906524e+00  0.30175547  0.770171700 0.045366892 #>  [9,] 5.232992e+00  0.81597984  0.509299749 0.590041154 #> [10,] 1.029222e-01  1.07372668  2.867594928 0.584238945"},{"path":"/reference/rmstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate max-stable distribution — rmstable","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"Simulates exact samples multivariate max-stable distribution.","code":""},{"path":"/reference/rmstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"","code":"rmstable(n, model = c(\"HR\", \"logistic\", \"neglogistic\", \"dirichlet\")[1], d, par)"},{"path":"/reference/rmstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"n Number simulations. model parametric model type; one : HR (default), logistic, neglogistic, dirichlet. d Dimension multivariate Pareto distribution. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, model = HR. \\(\\theta \\(0, 1)\\), model = logistic. \\(\\theta > 0\\), model = neglogistic. \\(\\alpha\\), numeric vector size d positive entries, model = dirichlet.","code":""},{"path":"/reference/rmstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"Numeric \\(n \\times d\\) matrix simulations multivariate max-stable distribution.","code":""},{"path":"/reference/rmstable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"simulation follows extremal function algorithm Dombry et al. (2016) . details parameters Huesler-Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmstable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"Coles S, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317.","code":""},{"path":[]},{"path":"/reference/rmstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"","code":"## A 4-dimensional HR distribution n <- 10 d <- 4 G <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  rmstable(n, \"HR\", d = d, par = G) #>             [,1]       [,2]       [,3]       [,4] #>  [1,]  0.9129700  2.7320869  4.3930684  2.0396394 #>  [2,]  0.2666331  0.7563013  1.6998662  0.7642649 #>  [3,]  1.4469430  3.2588614  0.6616103  0.9099434 #>  [4,]  0.4459274  1.6260210  0.6936030  1.0758879 #>  [5,]  0.4388372  0.7088128  0.4051627  0.5354991 #>  [6,]  0.5635592  0.6925003  2.5880064  0.4623138 #>  [7,]  1.6316665  1.2772479  2.3119953  6.8583689 #>  [8,] 25.5877634  9.4518333 30.2610583 11.8954021 #>  [9,]  9.1793281  9.6263068  7.7595231 18.7535580 #> [10,] 23.4589286 30.4513683 27.9736059 12.6065325  ## A 3-dimensional logistic distribution n <- 10 d <- 3 theta <- .6 rmstable(n, \"logistic\", d, par = theta) #>            [,1]       [,2]      [,3] #>  [1,] 0.7920967  0.3838593 0.5446596 #>  [2,] 0.4762412  1.7332709 1.3834479 #>  [3,] 1.3370597  0.2851836 4.0607764 #>  [4,] 0.7421880  1.8327530 2.2199731 #>  [5,] 1.9280030 10.7751455 1.5144490 #>  [6,] 1.2808886  0.8044145 0.8670885 #>  [7,] 1.2840544  0.7799514 5.0934757 #>  [8,] 0.5676049  0.3633312 0.3426581 #>  [9,] 0.2693890  0.3870772 0.4698337 #> [10,] 1.0291076  0.4829797 1.6501069  ## A 5-dimensional negative logistic distribution n <- 10 d <- 5 theta <- 1.5 rmstable(n, \"neglogistic\", d, par = theta) #>             [,1]       [,2]       [,3]       [,4]       [,5] #>  [1,]  7.6648654 12.7130188  5.1404650 29.9312790  6.7218769 #>  [2,]  0.6997510  0.7048263  1.2611360  0.8094214  0.5227736 #>  [3,] 23.7136939  1.8638248  7.7195594  8.6375029 18.3126055 #>  [4,]  1.1596061  0.9826885  1.1413147  1.3009600  0.4160243 #>  [5,]  1.3697433  0.6338478  0.7218860  1.4924707  0.9762449 #>  [6,]  2.2482129  2.8355838  1.4315486  4.9443567  1.6710074 #>  [7,] 16.7420023 15.0632920 12.9267446 20.3789551 28.2010827 #>  [8,]  0.4362455  0.3568023  0.3109209  0.9655873  0.3155885 #>  [9,]  0.8675428  0.6111543  0.4107973  0.8449127  0.6456791 #> [10,]  3.8236338  3.0036666  4.5845912  1.6076321  2.4079347  ## A 4-dimensional Dirichlet distribution n <- 10 d <- 4 alpha <- c(.8, 1, .5, 2) rmstable(n, \"dirichlet\", d, par = alpha) #>            [,1]      [,2]      [,3]      [,4] #>  [1,] 1.8895508 0.7655561 1.2157059 2.1661873 #>  [2,] 0.7099777 1.8470676 3.6166997 0.7038762 #>  [3,] 3.0723931 0.4386526 0.9849517 0.7825669 #>  [4,] 0.5039515 0.4160592 0.9417922 2.8132326 #>  [5,] 8.8648594 2.9460901 7.5495707 6.8022550 #>  [6,] 2.8973698 4.9357845 2.1741180 4.9137229 #>  [7,] 1.5847216 6.1903019 3.3346973 1.8198441 #>  [8,] 0.2975653 1.2948784 1.5564330 2.1926874 #>  [9,] 1.3155831 0.5673063 0.4437899 1.0480459 #> [10,] 1.7603035 5.4723088 1.5448006 4.8258270"},{"path":"/reference/rmstable_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"Simulates exact samples multivariate max-stable distribution extremal graphical model tree defined Engelke Hitz (2020) .","code":""},{"path":"/reference/rmstable_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"","code":"rmstable_tree(n, model = c(\"HR\", \"logistic\", \"dirichlet\")[1], tree, par)"},{"path":"/reference/rmstable_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"n Number simulations. model parametric model type; one : HR (default), logistic, dirichlet. tree Graph object igraph package. object must tree, .e., undirected graph connected cycles. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, entries corresponding edges tree used, model = HR. Alternatively, can vector length d-1 containing entries variogram corresponding edges given tree. \\(\\theta \\(0, 1)\\), vector length d-1 containing logistic parameters corresponding edges given tree, model = logistic. matrix size \\((d - 1) \\times 2\\), rows contain parameter vectors \\(\\alpha\\) size 2 positive entries edges tree, model = dirichlet.","code":""},{"path":"/reference/rmstable_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"Numeric \\(n \\times d\\) matrix simulations multivariate max-stable distribution.","code":""},{"path":"/reference/rmstable_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"simulation follows combination extremal function algorithm Dombry et al. (2016)  theory Engelke Hitz (2020)  sample single extremal function. details parameters Huesler-Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmstable_tree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"Coles S, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317. Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":[]},{"path":"/reference/rmstable_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"","code":"## A 4-dimensional HR tree model  my_tree <- igraph::graph_from_adjacency_matrix(rbind(   c(0, 1, 0, 0),   c(1, 0, 1, 1),   c(0, 1, 0, 0),   c(0, 1, 0, 0) ), mode = \"undirected\" ) n <- 10 Gamma_vec <- c(.5, 1.4, .8) rmstable_tree(n, \"HR\", tree = my_tree, par = Gamma_vec) #>             [,1]        [,2]        [,3]        [,4] #>  [1,] 11.4926835   6.2692985   7.2692681   7.3656059 #>  [2,]  0.4240365   0.8814177   2.1049743   0.5471967 #>  [3,]  2.0693665   3.8310442   0.8515348   1.8757676 #>  [4,]  0.5332370   0.3338001   1.1440102   0.2431660 #>  [5,]  0.9622793   0.3529766   0.6154679   0.6122024 #>  [6,]  3.6110854   2.0049875   3.5542388   0.7321436 #>  [7,]  2.0810677   1.6376026   1.2619098   1.5633647 #>  [8,]  0.6077383   0.3588807   0.7824510   0.5408133 #>  [9,] 41.5770869 355.9902771 225.9689381 510.2973482 #> [10,]  3.0393533   1.5666653   2.4999867   5.7565452  ## A 4-dimensional Dirichlet model with asymmetric edge distributions  alpha <- cbind(c(.2, 1, .5), c(1.5, .6, .8)) rmstable_tree(n, model = \"dirichlet\", tree = my_tree, par = alpha) #>             [,1]       [,2]       [,3]       [,4] #>  [1,]  7.6875162 57.5437511  4.2553267  2.1829200 #>  [2,]  0.4213234  5.1944645  0.8254621  0.9480425 #>  [3,]  0.6316744  0.4647958  0.3077491  0.9783213 #>  [4,]  1.8720697 36.3060340 54.3817655 19.8613889 #>  [5,] 15.2347659  3.2621610  4.4430843  5.1449147 #>  [6,]  2.4624789  1.9151092  0.8660182  3.4762745 #>  [7,]  3.0352577  3.1889870  1.8856030  3.3643334 #>  [8,]  0.5431711  0.4845968  3.6101540  0.5459028 #>  [9,]  3.6090469  0.4368999  1.1240025  1.7006204 #> [10,]  2.5925942  1.4293217  3.0304101  0.9766790"},{"path":"/reference/simu_px_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate HR extremal functions — simu_px_HR","title":"Simulate HR extremal functions — simu_px_HR","text":"Simulates Huesler-Reiss extremal functions","code":""},{"path":"/reference/simu_px_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate HR extremal functions — simu_px_HR","text":"","code":"simu_px_HR(n, d, idx, trend, chol_mat)"},{"path":"/reference/simu_px_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate HR extremal functions — simu_px_HR","text":"n Number simulations. d Dimension multivariate Pareto distribution. cases can NULL inferred par. idx Integer. Index corresponding variable extremal function simulated. trend Numeric. Trend corresponding variable idx. chol_mat Numeric matrix \\(d \\times d\\). Cholesky decomposition desired covariance matrix.","code":""},{"path":"/reference/simu_px_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate HR extremal functions — simu_px_HR","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_dirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Dirichlet extremal functions — simu_px_dirichlet","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"Simulates Dirichlet extremal functions","code":""},{"path":"/reference/simu_px_dirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"","code":"simu_px_dirichlet(n, d, idx, alpha)"},{"path":"/reference/simu_px_dirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"n Number simulations. d Dimension multivariate Pareto distribution. cases can NULL inferred par. idx Integer numeric vector n elements. Index/indices 1 d, determine extremal function simulate. alpha Numeric vector size d.","code":""},{"path":"/reference/simu_px_dirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate logistic extremal functions — simu_px_logistic","title":"Simulate logistic extremal functions — simu_px_logistic","text":"Simulates logistic extremal functions","code":""},{"path":"/reference/simu_px_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate logistic extremal functions — simu_px_logistic","text":"","code":"simu_px_logistic(n, d, idx, theta)"},{"path":"/reference/simu_px_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate logistic extremal functions — simu_px_logistic","text":"n Number simulations. d Dimension multivariate Pareto distribution. cases can NULL inferred par. idx Integer numeric vector n elements. Index/indices 1 d, determine extremal function simulate. theta Numeric --- assume \\(0 < \\theta < 1\\).","code":""},{"path":"/reference/simu_px_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate logistic extremal functions — simu_px_logistic","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_neglogistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate negative logistic extremal functions — simu_px_neglogistic","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"Simulates negative logistic extremal functions","code":""},{"path":"/reference/simu_px_neglogistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"","code":"simu_px_neglogistic(n, d, idx, theta)"},{"path":"/reference/simu_px_neglogistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"n Number simulations. d Dimension multivariate Pareto distribution. cases can NULL inferred par. idx Integer numeric vector n elements. Index/indices 1 d, determine extremal function simulate. theta Numeric --- assume \\(\\theta > 0\\).","code":""},{"path":"/reference/simu_px_neglogistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_tree_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate HR extremal functions on a tree — simu_px_tree_HR","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"Simulates Huesler-Reiss extremal functions tree","code":""},{"path":"/reference/simu_px_tree_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"","code":"simu_px_tree_HR(n, Gamma_vec, A)"},{"path":"/reference/simu_px_tree_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"n Number simulations. Gamma_vec Numeric vector d-1 elements, d number nodes tree (d-1 number edges). Numeric \\(d \\times (d-1)\\) matrix; rows represent nodes tree, columns represent edges. fixed node \\(k = 1, \\dots, d\\), entry \\((, j)\\) equal 1 edge position j directed path node k node polytree rooted node k.","code":""},{"path":"/reference/simu_px_tree_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_tree_dirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"Simulates Dirichlet extremal functions tree","code":""},{"path":"/reference/simu_px_tree_dirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"","code":"simu_px_tree_dirichlet(n, alpha.start, alpha.end, A)"},{"path":"/reference/simu_px_tree_dirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"n Number simulations. alpha.start Numeric vector d-1 elements, d number nodes tree (d-1 number edges). alpha.end Numeric vector d-1 elements, d number nodes tree (d-1 number edges). Numeric \\(d \\times (d-1)\\) matrix; rows represent nodes tree, columns represent edges. fixed node \\(k = 1, \\dots, d\\), entry \\((, j)\\) equal 1 edge position j directed path node k node polytree rooted node k.","code":""},{"path":"/reference/simu_px_tree_dirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_tree_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"Simulates logistic extremal functions tree","code":""},{"path":"/reference/simu_px_tree_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"","code":"simu_px_tree_logistic(n, theta, A)"},{"path":"/reference/simu_px_tree_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"n Number simulations. theta Numeric vector 1 d-1 elements. Assume entry \\(0 < \\theta < 1\\). Numeric \\(d \\times (d-1)\\) matrix; rows represent nodes tree, columns represent edges. fixed node \\(k = 1, \\dots, d\\), entry \\((, j)\\) equal 1 edge position j directed path node k node polytree rooted node k.","code":""},{"path":"/reference/simu_px_tree_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/split_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Split graph into invariant subgraphs — split_graph","title":"Split graph into invariant subgraphs — split_graph","text":"Split graph invariant subgraphs","code":""},{"path":"/reference/split_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split graph into invariant subgraphs — split_graph","text":"","code":"split_graph(g)"},{"path":"/reference/split_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split graph into invariant subgraphs — split_graph","text":"g igraph::graph object","code":""},{"path":"/reference/split_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split graph into invariant subgraphs — split_graph","text":"List invariant subgraphs","code":""},{"path":"/reference/unif.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform margin — unif","title":"Uniform margin — unif","text":"Rescale vector x empirically uniform margin.","code":""},{"path":"/reference/unif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform margin — unif","text":"","code":"unif(x, na.rm = FALSE)"},{"path":"/reference/unif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform margin — unif","text":"x Numeric vector. na.rm Logical. TRUE, missing values removed. FALSE, missing values kept .","code":""},{"path":"/reference/unif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform margin — unif","text":"Numeric vector entries rescaled uniform margins","code":""}]
