[{"path":"/articles/exercises.html","id":"fitting-a-tree-model","dir":"Articles","previous_headings":"","what":"Fitting a tree model","title":"Exercises","text":"Fit extremal tree model flight delays using emst(), choosing threshold p = 0.7. Plot estimated tree US map interpret results.  Compute BIC value fitted tree model. Plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied fitted model.  Given flight_graph object, fit HR graphical model using fmpareto_graph_HR(). Compute BIC value flight_graph object corresponding Gamma matrix obtained Step 5. Plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied fitted model Step 5.","code":"p <- .7 flights_emst_fit <- emst(data = mat, p = p, method = \"vario\") plotFlights(     IATAs,     graph = flights_emst_fit$graph,     xyRatio = 1,     clipMap = 1.3 ) flights_loglik_tree <- loglik_HR(     data = mat,     p = p,     Gamma = flights_emst_fit$Gamma,     graph = flights_emst_fit$graph ) cat(\"Tree BIC =\", round(flights_loglik_tree[3], 2), \"\\n\") #> Tree BIC = 110638.3 emp_chi_mat <- emp_chi(mat, p = p)  ggplot() +     geom_point(         aes(             x = c(Gamma2chi(flights_emst_fit$Gamma)),             y = c(emp_chi_mat)         )     ) +     geom_abline(slope = 1, intercept = 0) +     xlab(\"Fitted\") +     ylab(\"Empirical\") model_fit <- fmpareto_graph_HR(     data = mat,     graph = flight_graph,     p = p,     method = \"vario\" ) flights_loglik_graph <- loglik_HR(     data = mat,     p = p,     graph = flight_graph,     Gamma = model_fit ) cat(\"BIC =\", round(flights_loglik_graph[3], 2), \"\\n\") #> BIC = 102405.1 ggplot() +     geom_point(aes(         x = c(Gamma2chi(model_fit)),         y = c(emp_chi_mat)     )) +     geom_abline(slope = 1, intercept = 0) +     xlab(\"Fitted\") +     ylab(\"Empirical\")"},{"path":"/articles/exercises.html","id":"fitting-a-general-model","dir":"Articles","previous_headings":"","what":"Fitting a general model","title":"Exercises","text":"Fit extremal graphical lasso model eglearn(), choosing threshold p = 0.7, rholist = seq(1e-4, 0.10, length.= 10). Plot estimated graph US map different values rho interpret results.  Compute plot BIC values estimated models different values rho.  Plot \\(\\chi\\) coefficients implied best fitted model empirical \\(\\chi\\) coefficients.","code":"rholist <- seq(1e-4, 0.10, length.out = 10) flights_eglasso_fit <- eglearn(mat, p = p, rholist = rholist, complete_Gamma = TRUE) plotFlights(IATAs, graph = flights_eglasso_fit$graph[[10]], clipMap = 1.3, xyRatio = 1) flights_loglik <- sapply(seq_along(rholist), FUN = function(j) {     loglik_HR(         data = mat, p = p,         Gamma = flights_eglasso_fit$Gamma[[j]],         graph = flights_eglasso_fit$graph[[j]]     ) })  ggplot(mapping = aes(x = rholist, y = flights_loglik[3, ])) +     geom_line() +     geom_point(shape = 21, size = 3, stroke = 1, fill = \"white\") +     # geom_hline(aes(yintercept = flights_loglik_tree[3]), lty = \"dashed\") +     xlab(\"rho\") +     ylab(\"BIC\") +     scale_x_continuous(         breaks = rholist,         labels = round(rholist, 3),         sec.axis = sec_axis(             trans = ~., breaks = rholist,             labels = sapply(                 flights_eglasso_fit$graph,                 igraph::gsize             ),             name = \"Number of edges\"         )     ) best_Gamma <- flights_eglasso_fit$Gamma[[which.min(flights_loglik[3,])]]  ggplot() +     geom_point(aes(x = c(Gamma2chi(best_Gamma)),                                  y = c(emp_chi_mat))) +     geom_abline(slope = 1, intercept = 0) +     xlab(\"Fitted\") +     ylab(\"Empirical\")"},{"path":"/articles/graphicalExtremes.html","id":"danube-data","dir":"Articles","previous_headings":"","what":"Danube Data","title":"Introduction to Extremal Graphical Models","text":"","code":"danube <- graphicalExtremes::danube  X <- danube$data_clustered  ggplot(X %>% as_tibble()) +     geom_point(aes(x = X1, y = X2)) ggplot(X %>% as_tibble()) +     geom_point(aes(x = X22, y = X28)) danube_flow <- igraph::graph_from_edgelist(danube$flow_edges) danube_plot_coords <- as.matrix(danube$info[, c(\"PlotCoordX\", \"PlotCoordY\")]) plot(danube_flow, layout = danube_plot_coords, edge.arrow.size = .3)"},{"path":[]},{"path":"/articles/graphicalExtremes.html","id":"definition","dir":"Articles","previous_headings":"Multivariate Pareto distributions","what":"Definition","title":"Introduction to Extremal Graphical Models","text":"goal study extremal tail multivariate random vector \\(\\mathbf{X} = (X_1,\\dots, X_d)\\). , interested extremal dependence therefore normlaize marginal distributions \\(F_j\\) \\(X_j\\) standard Pareto distributions \\[\\begin{equation} 1 /\\{1- F_j(X_j)\\}, \\quad j=1,\\dots, d. (\\#eq:pareto) \\end{equation}\\] assume sequel vector \\(X\\) normalized standard Pareto margins. multivariate Pareto distribution (MPD) defined limiting distribution exceedances \\(\\mathbf{X}\\) high threshold, multivariate threshold chosen terms \\(l_\\infty\\)-norm. \\(u>0\\), define exceedance distribution \\[\\begin{equation} \\mathbf{X}_u = \\mathbf{X} \\mid \\| \\mathbf{X} \\|_\\infty > u  (\\#eq:exc) \\end{equation}\\] sending \\(u\\\\infty\\) normalizing properly, random vector \\(\\mathbf{X}_u\\) converges limiting distribution \\(\\mathbf{Y}\\) called MPD: \\[ \\mathbf{Y} = \\lim_{u\\\\infty} \\mathbf{X}_u /u,\\] limit terms convergence distribution. construction, distribution MPD \\(\\mathbf{Y}\\) defined space \\(\\mathcal L = \\{\\mathbf{x} \\[0,\\infty)^d : \\| \\mathbf{x} \\|_\\infty > 1\\}\\), \\(\\mathbf{Y}\\) possesses density \\(f_{\\mathbf{Y}}\\), proportional -called exponent measure density \\(\\lambda\\); details see S. Engelke Hitz (2020). practice, use approximation \\(\\mathbf{Y} \\approx \\mathbf{X}_u\\) large value \\(u\\), \\(u\\) can chosen \\(p\\)th quantile distribution \\(\\|\\mathbf{X}\\|_\\infty\\). Given \\(n\\) oberservations \\(\\mathbf{X}_1, \\dots, \\mathbf{X}_n\\) \\(\\mathbf{X}\\), function data2mpareto() first computes standardization @ref(eq:pareto) based empirical distribution functions \\(\\hat F_j\\) selects exceedances \\(\\mathbf{X}_u\\) according @ref(eq:exc).","code":"Y <- data2mpareto(data = X, p = .8)"},{"path":"/articles/graphicalExtremes.html","id":"examples","dir":"Articles","previous_headings":"Multivariate Pareto distributions","what":"Examples","title":"Introduction to Extremal Graphical Models","text":"extremal logistic distribution parameter \\(\\theta\\(0,1)\\) induces multivariate Pareto distribution density \\[\\begin{equation} f_{\\mathbf{Y}}(\\mathbf{y}) = \\frac{1}{d^{\\theta}} \\left(y_1^{-1/\\theta}+\\dots+y_d^{-1/\\theta}\\right)^{\\theta-d}\\prod_{=1}^{d-1}\\left(\\frac{}{\\theta}-1\\right) \\prod_{=1}^{d} y_i^{-1/\\theta-1}, \\quad \\mathbf{y} \\\\mathcal L. \\end{equation}\\] parameter \\(\\theta\\) governs extremal dependence, ranging complete dependence \\(\\theta\\0\\) independence \\(\\theta \\1\\). \\(d\\)-dimensional Hüsler–Reiss distribution (Hüsler Reiss 1989) parameterized variogram matrix \\(\\Gamma = \\{\\Gamma_{ij}\\}_{1\\leq ,j\\leq d}\\). corresponding density exponent measure can written \\(k\\\\{1,\\dots, d\\}\\) \\[\\begin{equation}     \\lambda(\\mathbf{y}) = y_k^{-2}\\prod_{\\neq k} y_i^{-1} \\phi_{d-1}\\left(\\mathbf{\\tilde y}_{\\setminus k}; \\Sigma^{(k)}\\right), \\quad \\mathbf{y} \\\\mathcal L,  (\\#eq:fYHR) \\end{equation}\\] \\(\\phi_p(\\cdot; \\Sigma)\\) density centred \\(p\\)-dimensional normal distribution covariance matrix \\(\\Sigma\\), \\(\\mathbf{\\tilde y} = \\{\\log(y_i/y_k) + \\Gamma_{ik}/2\\}_{=1,\\dots, d}\\) \\[\\begin{equation}\\label{sigma_k}     \\Sigma^{(k)}  =\\frac{1}{2} \\{\\Gamma_{ik}+\\Gamma_{jk}-\\Gamma_{ij}\\}_{,j\\neq k} \\\\mathbb R^{(d-1)\\times (d-1)}. (\\#eq:Sigmak) \\end{equation}\\] matrix \\(\\Sigma^{(k)}\\) positive definite play important role theory extremal graphical models. representation density @ref(eq:fYHR) seems depend choice \\(k\\), , fact, value right-hand side equation independent \\(k\\). Hüsler–Reiss multivariate Pareto distribution density \\(f_{\\mathbf{Y}}(\\mathbf{y}) \\propto \\lambda(\\mathbf{y})\\) strength dependence \\(\\)th \\(j\\)th component parameterized \\(\\Gamma_{ij}\\), ranging complete dependence \\(\\Gamma_{ij} \\0\\) independence \\(\\Gamma_{ij} \\\\infty\\). extension Hüsler–Reiss distributions random fields Brown–Resnick processes (Kabluchko, Schlather, Haan 2009), widely used models spatial extremes. function rmpareto() generates samples MPD \\(\\mathbf{Y}\\) based exact algorithm described S. Engelke Hitz (2020). Note can also generate samples corresponding max-stable distribution function rmstable(), following exact algorithm Dombry, Engelke, Oesting (2016).","code":"G <- cbind(c(0, 1.5), c(1.5, 0)) Ysim <- rmpareto(n = 100, model = \"HR\", d = 2, par = G)  theta <- .5 Ysim <- rmpareto(n = 100, model = \"logistic\", d = 2, par = theta)"},{"path":[]},{"path":"/articles/graphicalExtremes.html","id":"extremal-correlation","dir":"Articles","previous_headings":"Multivariate Pareto distributions > Measures of extremal dependence","what":"Extremal correlation","title":"Introduction to Extremal Graphical Models","text":"extremal correlation \\(\\chi_{ij}\\[0,1]\\) measures dependence largest values random variables \\(X_i\\) \\(X_j\\). defined \\[\\begin{equation}\\label{EC}     \\chi_{ij} = \\lim_{p\\1} \\chi_{ij}(p) = \\lim_{p\\1} \\mathbb P\\left\\{F_i(X_i) > p\\mid  F_j(X_j) > p \\right\\}, \\end{equation}\\] boundary cases \\(0\\) \\(1\\) correspond asymptotic independence complete dependence, respectively. \\(n\\) observations \\(X_1,\\dots, X_n\\) \\(d\\)-dimensional vector \\(X\\), can empirically estimate \\(d\\times d\\) matrix pairwise extremal correlations fixed threshold \\(p\\) close 1. function, subsequent functions, variable p = NULL data already expected MPD scale, thresholding performed. danube() data, may therefore directly use \\(\\mathbf{Y}\\) instead \\(\\mathbf{X}\\): Hüsler–Reiss distribution parameter matrix \\(\\Gamma = \\{\\Gamma_{ij}\\}_{1\\leq ,j\\leq d}\\), extremal correlation given \\[ \\chi_{ij} =  2 - 2 \\Phi(\\sqrt{\\Gamma_{ij}}/2),\\] \\(\\Phi\\) standard normal distribution function. can use functions Gamma2chi() chi2Gamma() switch two coefficients.","code":"chi_hat <- emp_chi(data = X, p = .8) chi_hat <- emp_chi(data = Y)"},{"path":"/articles/graphicalExtremes.html","id":"extremal-variogram","dir":"Articles","previous_headings":"Multivariate Pareto distributions > Measures of extremal dependence","what":"Extremal variogram","title":"Introduction to Extremal Graphical Models","text":"exist several summary statistics extremal dependence. extremal variogram introduced turns particularly useful inference extremal graphical models discussed . root node \\(k\\V\\), pre-asymptotic extremal variogram defined matrix \\(\\Gamma^{(k)}\\) entries \\[\\begin{equation*}     \\Gamma_{ij}^{(k)}(p) = \\mathop{\\mathrm{Var}}\\left[\\log\\{1 -  F_i(X_{})\\}- \\log\\{1 - F_j(X_j)\\} \\mid F_k(X_k) > p\\right], \\quad ,j\\V,     \\end{equation*}\\] whenever right-hand side exists. Note \\(-\\log\\{1 - F_i(X_{})\\}\\) transforms \\(X_i\\) standard exponential distribution, \\(\\Gamma^{(k)}\\) simply variogram matrix \\(\\mathbf{X}\\) exponential scale, condtioned \\(k\\)th variable large. limit \\(p\\1\\) called extremal variogram can expressed terms MPD \\(\\mathbf{Y}\\): \\[\\begin{equation*} \\Gamma_{ij}^{(k)} = \\lim_{p\\1} \\Gamma_{ij}^{(k)}(p) = \\mathop{\\mathrm{Var}}\\left\\{ \\log Y^k_{} - \\log Y^k_j \\mid Y_k > 1 \\right\\}, \\quad ,j\\V. \\end{equation*}\\] Weak/strong extremal dependence indicated large/small values extremal variogram, respectively. function emp_vario() estimates (pre-asymptotic) extremal variogram, instance \\(k=1\\). general, matrices \\(\\Gamma^{(k)}\\) can different \\(k \\V\\), example Hüsler–Reiss distribution, coincide. Hüsler–Reiss distribution parameter matrix \\(\\Gamma\\), extremal variogram matrices satisfy \\[ \\Gamma = \\Gamma^{(1)} = \\dots = \\Gamma^{(d)}.\\] case makes sense estimate extremal variogram \\(\\hat \\Gamma\\) average estimators \\(\\hat \\Gamma^{(k)}\\):","code":"Gamma_1_hat <- emp_vario(data = X, k = 1, p = 0.8) Gamma_hat <- emp_vario(data = X, p = 0.8) Gamma_hat <- emp_vario(data = Y)"},{"path":"/articles/graphicalExtremes.html","id":"extremal-graphical-models","dir":"Articles","previous_headings":"","what":"Extremal graphical models","title":"Introduction to Extremal Graphical Models","text":"Let \\(G=(V,E)\\) undirected graph index set \\(V = \\{1,\\dots, d\\}\\) edges \\(E \\subset V \\times V\\). figure shows examples different graphical structure: tree, decomposable graph non-decomposable graph. S. Engelke Hitz (2020) introduce new notion extremal conditional independence MTPs, denoted \\(\\perp_e\\). define extremal graphical model \\(G\\) MPD \\(Y = (Y_j : j\\V)\\) satisfies pairwise Markov property \\[   Y_i \\perp_e Y_j \\mid  Y_{\\setminus \\{,j\\}}, \\quad  (,j)\\notin E.\\] , \\(Y_i\\) \\(Y_j\\) conditionally independent extremal sense \\(\\perp_e\\) given nodes whenever edge \\(\\) \\(j\\) \\(G\\). MPD possesses density \\(f_{\\mathbf{Y}}\\), graph \\(G\\) connected. S. Engelke Hitz (2020) show Hammersley–Clifford theorem stating extr emal graphical model decomposable graph \\(G\\), density \\(f_{\\mathbf{Y}}\\) factorizes marginal density cliques.","code":""},{"path":"/articles/graphicalExtremes.html","id":"trees","dir":"Articles","previous_headings":"Extremal graphical models","what":"Trees","title":"Introduction to Extremal Graphical Models","text":"tree \\(T = (V,E)\\) particularly simple type graph, connected cycles. implies exactly \\(|E| = d-1\\) edges. Hammersley–Clifford theorem shown S. Engelke Hitz (2020) yields density extremal tree model \\(\\mathbf{Y}\\) tree \\(T= (V,E)\\) factorizes \\[\\begin{equation}     f_{\\mathbf{Y}}(\\mathbf{y}) \\propto  \\prod_{\\{,j\\}\\E} {\\lambda_{ij}(y_i,y_j) \\y_i^{-2} y_j^{-2}} \\prod_{\\V} y_i^{-2},  (\\#eq:treedens) \\end{equation}\\] \\(\\lambda_{ij}\\) bivariate marginals exponent measure density \\(\\lambda\\) corresponding \\(\\mathbf{Y}\\). \\(d\\)-dimensional density MPD therefore reduced bivariate interactions . extremal graphical models trees, extremal variograms \\(\\Gamma^{(k)}\\), \\(k \\V\\), natural since define -called additive tree metric, ,\\[\\begin{equation} \\Gamma_{ij}^{(k)} = \\sum_{(s,t) \\\\text{ph}(ij)} \\Gamma^{(k)}_{st}, (\\#eq:treemetric) \\end{equation}\\] \\(\\text{ph}(ij)\\) denotes path node \\(\\) \\(j\\) tree \\(T\\).","code":""},{"path":"/articles/graphicalExtremes.html","id":"simulation","dir":"Articles","previous_headings":"Extremal graphical models > Trees","what":"Simulation","title":"Introduction to Extremal Graphical Models","text":"representation @ref(eq:treedens) can specify models bivariate \\(\\lambda_{ij}\\) \\((,j) \\E\\) combine valid tree model. instance, use bivariate Hüsler–Reiss distributions edges tree \\(T\\), resulting \\(d\\)-dimensional tree model Hüsler–Reiss parameter matrix \\(\\Gamma\\) implied @ref(eq:treemetric). use bivariate logistic distributions edges, results extremal tree model \\(d\\)-dimensional logistic model, flexible model \\(d-1\\) parameters. function rmpareto_tree() generates samples extremal tree model \\(\\mathbf{Y}\\). Note can also generate samples corresponding max-stable distribution function rmstable_tree().","code":"set.seed(42)  my_model <- generate_random_model(d = 4, graph_type = \"tree\") Ysim <- rmpareto_tree(     n = 100, model = \"HR\",     tree = my_model$graph,     par = my_model$Gamma )  theta_vec <- c(.2, .8, .3) Ysim <- rmpareto_tree(     n = 100, model = \"logistic\",     tree = my_model$graph,     par = theta_vec )"},{"path":"/articles/graphicalExtremes.html","id":"estimation","dir":"Articles","previous_headings":"Extremal graphical models > Trees","what":"Estimation","title":"Introduction to Extremal Graphical Models","text":"given tree \\(T= (V,E)\\) parametric model \\(\\{f_{\\mathbf{Y}}(\\mathbf{y}; \\theta): \\theta \\\\Theta\\}\\) MPDs tree \\(T\\), estimation model parameters fairly straight-forward. \\(\\theta = \\{ \\theta_{ij}: (,j) \\E\\}\\) consists one parameter per edge, thanks factorization @ref(eq:treedens) may fit parameter \\(\\theta_{ij}\\) separately. can done (censored) maximum likelihood methods, methods M-estimation. can done (censored) maximum likelihood methods, methods M-estimation. provided tree data, function fmpareto_graph_HR() estimates \\(d-1\\) parametres Hüsler–Reiss model tree. example, fit extremal tree model (undirected) tree resulting flow connections danube() data set compare fitted empirical extremal coefficients.","code":"danube_tree <- igraph::as.undirected(danube_flow) danube_flow_fit <- fmpareto_graph_HR(data = X, graph = danube_tree, p = .8)"},{"path":"/articles/graphicalExtremes.html","id":"structure-learning","dir":"Articles","previous_headings":"Extremal graphical models > Trees","what":"Structure learning","title":"Introduction to Extremal Graphical Models","text":"practice, underlying conditonal independence tree \\(T = (V,E)\\) usually unknown estimated data-driven way. extremal tree models, turns can done efficiently completely non-parametric way; see Sebastian Engelke Volgushev (2022) details. method based notion minimum spanning tree. set symmetric weights \\(\\rho_{ij} > 0\\) associated pair nodes \\(,j\\V\\), \\(\\neq j\\), latter defined tree structure \\[\\begin{align}\\label{Tmin}     T_{\\mathop{\\mathrm{mst}}} = \\mathop{\\mathrm{arg\\,min}}_{T' = (V,E)} \\sum_{(,j)\\E} \\rho_{ij}, \\end{align}\\] minimizes sum distances tree. Sebastian Engelke Volgushev (2022) showed \\(\\mathbf{Y}\\) extremal graphical model unkown tree \\(T\\), minimum spanning tree extremal variogram \\(\\rho_{ij} = \\Gamma_{ij}^{(k)}\\) weights unique satisfies \\(T_{\\mathop{\\mathrm{mst}}} = T\\). Using empircal estimates \\(\\hat \\Gamma_{ij}^{(k)}\\) weights, can thus consistently recover underlying tree structure fully non-parametric way. fact, taking average \\(\\hat \\Gamma^{(k)}\\), \\(k \\V\\), using weights \\(\\rho_{ij} = \\hat \\Gamma_{ij}\\) makes better use data usually improves performance structure estimation significantly. Sebastian Engelke Volgushev (2022) show empircal extremal correlation \\(\\rho_{ij} = \\hat \\chi_{ij}\\) may also used consistent tree recovery, performance typically inferior extremal variogram based algorithms. function emst() estimates extremal tree structure minimum spanning tree algorithm based different summary statistics extremal dependence. provides estimated tree implied extremal variogram matrix @ref(eq:treemetric).","code":"danube_emst_fit <- emst(data = X, p = .8, method = \"vario\") plot(danube_emst_fit$graph, layout = danube_plot_coords) ggplot() +     geom_point(aes(x = c(Gamma2chi(danube_flow_fit)), y = c(chi_hat))) +     geom_abline(slope = 1, intercept = 0) +     xlab(\"Fitted\") +     ylab(\"Empirical\") +     coord_cartesian(xlim = c(0.4, 1), ylim = c(0.4, 1))"},{"path":"/articles/graphicalExtremes.html","id":"hüslerreiss-graphical-models","dir":"Articles","previous_headings":"Extremal graphical models","what":"Hüsler–Reiss graphical models","title":"Introduction to Extremal Graphical Models","text":"Hüsler–Reiss Pareto distribution \\(\\mathbf{Y}\\) parametrized variogram matrix \\(\\Gamma\\). Using linear transformation @ref(eq:Sigmak), obtain covariance matrix \\(\\Sigma^{(k)}\\) \\(k\\V\\). inverse, called precision matrix, denoted \\(\\Theta^{(k)}\\). S. Engelke Hitz (2020) showed \\(k\\V\\) precision matrix contains conditional independence structure \\(\\mathbf{Y}\\), since \\(,j\\V\\) \\(\\neq j\\), \\[\\begin{equation*}         Y_i\\perp_e Y_j\\mid \\mathbf{Y}_{V\\setminus \\{,j\\}} \\quad \\iff \\quad         \\begin{cases}              \\Theta^{(k)}_{ij}= 0,  &\\text{ } ,j \\neq k,\\\\              \\sum_{l\\neq k} \\Theta^{(k)}_{jl} = 0, & \\text{ } = k,j \\neq k.         \\end{cases}     \\end{equation*}\\] means, \\(Y\\) extremal graphical graph \\(G = (V,E)\\), missing edges can read matrix \\(\\Theta^{(k)}\\) zeros -diagonal zero row sums. Note matrices \\(\\Theta^{(k)}\\) \\((d-1)\\times(d-1)\\) dimensional. combine precision matrices \\(k\\V\\), may fact positive semi-definite precision matrix \\(\\Theta \\\\mathbb R^{d\\times d}\\) \\[\\begin{equation*} \\Theta_{ij} = \\Theta^{(k)}_{ij} \\text{ } k \\neq ,j, \\end{equation*}\\] contains extremal conditional independencies zeros -diagonal: \\[\\begin{equation*}         Y_i\\perp_e Y_j\\mid \\mathbf{Y}_{V\\setminus \\{,j\\}} \\quad \\iff \\quad              \\Theta_{ij}= 0,  \\quad ,j \\V. \\end{equation*}\\]","code":""},{"path":"/articles/graphicalExtremes.html","id":"transformations","dir":"Articles","previous_headings":"Extremal graphical models > Hüsler–Reiss graphical models","what":"Transformations","title":"Introduction to Extremal Graphical Models","text":"Hüsler–Reiss distribution parameterized variogram matrix \\(\\Gamma\\), objects \\(\\Sigma^{(k)}\\), \\(\\Theta^{(k)}\\) \\(\\Theta\\) often required, instance, identify extremal graphical structure. functions Gamma2Sigma(), Sigma2Gamma(), Gamma2Theta() Theta2Gamma() often useful. Note function bijections. function Gamma2graph() creates igraph::graph() object plots .","code":"Gamma <- cbind(     c(0, 1.5, 1.5, 2),     c(1.5, 0, 2, 1.5),     c(1.5, 2, 0, 1.5),     c(2, 1.5, 1.5, 0) ) Gamma2Sigma(Gamma, k = 1) Gamma2Theta(Gamma) my_graph <- Gamma2graph(Gamma) >      [,1] [,2] [,3] > [1,]  1.5  0.5    1 > [2,]  0.5  1.5    1 > [3,]  1.0  1.0    2 >      [,1] [,2] [,3] [,4] > [1,]  1.0 -0.5 -0.5  0.0 > [2,] -0.5  1.0  0.0 -0.5 > [3,] -0.5  0.0  1.0 -0.5 > [4,]  0.0 -0.5 -0.5  1.0"},{"path":"/articles/graphicalExtremes.html","id":"completion-of-gamma","dir":"Articles","previous_headings":"Extremal graphical models > Hüsler–Reiss graphical models","what":"Completion of \\(\\Gamma\\)","title":"Introduction to Extremal Graphical Models","text":"Hüsler–Reiss graphical models suffices specify graph structure \\(G = (V,E)\\) entries parameter matrix \\(\\Gamma_{ij}\\) \\((,j) \\E\\). remaining entries matrix \\(\\Gamma\\) implicitely implied graph structure. function complete_Gamma() takes input partially specified \\(\\Gamma\\) matrix corresponding graph structure \\(G\\), completes \\(\\Gamma\\) matrix. mathematical theory completion different depening whether graph decomposable non-decomposable. simplest case tree, entries \\(\\Gamma_{ij}\\) \\((,j) \\notin E\\) can easily obtained additive tree metric property @ref(eq:treemetric).  also works general decomposable graphs, matrix \\(\\Gamma\\) specified cliques. decomposable graphs, graph structure can also implied \\(\\Gamma_{ij} = \\text{NA}\\) \\((,j)\\notin E\\). non-decomposable graphs, valid \\(\\Gamma\\) matrix undirected, connected graph provided.","code":"set.seed(42) my_tree <- generate_random_model(d = 4, graph_type = \"tree\")$graph Gamma_vec <- c(.5, 1.4, .8) complete_Gamma(Gamma = Gamma_vec, graph = my_tree) >      [,1] [,2] [,3] [,4] > [1,]  0.0  0.5  1.9  1.3 > [2,]  0.5  0.0  1.4  0.8 > [3,]  1.9  1.4  0.0  2.2 > [4,]  1.3  0.8  2.2  0.0 plot(my_tree) G <- rbind(     c(0, 5, 7, 6, NA),     c(5, 0, 14, 15, NA),     c(7, 14, 0, 5, 5),     c(6, 15, 5, 0, 6),     c(NA, NA, 5, 6, 0) ) complete_Gamma(Gamma = G) >      [,1] [,2] [,3] [,4] [,5] > [1,]  0.0  5.0    7    6  9.6 > [2,]  5.0  0.0   14   15 17.4 > [3,]  7.0 14.0    0    5  5.0 > [4,]  6.0 15.0    5    0  6.0 > [5,]  9.6 17.4    5    6  0.0 my_graph <- Gamma2graph(complete_Gamma(G)) set.seed(42) G <- rbind(     c(0, 5, 7, 6, 6),     c(5, 0, 14, 15, 13),     c(7, 14, 0, 5, 5),     c(6, 15, 5, 0, 6),     c(6, 13, 5, 6, 0) ) my_graph <- generate_random_model(d = 5, graph_type = \"general\", m = 5)$graph complete_Gamma(Gamma = G, graph = my_graph) >         [,1]    [,2]    [,3]    [,4]    [,5] > [1,]  0.0000  5.0000 10.2915  6.0000 15.2915 > [2,]  5.0000  0.0000 14.0000 10.2915 19.0000 > [3,] 10.2915 14.0000  0.0000  5.0000  5.0000 > [4,]  6.0000 10.2915  5.0000  0.0000 10.0000 > [5,] 15.2915 19.0000  5.0000 10.0000  0.0000 plot(my_graph)"},{"path":"/articles/graphicalExtremes.html","id":"estimation-1","dir":"Articles","previous_headings":"Extremal graphical models > Hüsler–Reiss graphical models","what":"Estimation","title":"Introduction to Extremal Graphical Models","text":"Let us first suppose connected graph \\(G\\) given. data set, function fmpareto_graph_HR() fits Hüsler–Reiss graphical model graph \\(G\\). graph decomposable, parameters clique can fitted separately combined together full \\(\\Gamma\\) matrix. cliques small enough, (censored) maximum likelihood estimation feasible, otherwise empirical extremal variogram used. Combining clique estimates relies principle complete_Gamma() function, care required ensure \\(\\Gamma_{ij}\\) estimates consistent \\((,j)\\) belongs separator set two cliques.   graph \\(G\\) non-decomposable, empirical extremal variogram first computed fitted graph structure \\(G\\) using function complete_Gamma().","code":"set.seed(42) d <- 10 my_model <- generate_random_model(d = d, graph_type = \"decomposable\") plot(my_model$graph) Ysim <- rmpareto(n = 100, d = d, model = \"HR\", par = my_model$Gamma) my_fit <- fmpareto_graph_HR(data = Ysim, graph = my_model$graph, p = NULL) ggplot() +     geom_point(aes(x = c(Gamma2chi(my_fit)), y = c(Gamma2chi(my_model$Gamma)))) +     geom_abline(slope = 1, intercept = 0) +     xlab(\"Fitted\") +     ylab(\"True\") +     coord_cartesian(xlim = c(0, 1), ylim = c(0, 1)) set.seed(42) d <- 20 my_model <- generate_random_model(d = d, graph_type = \"general\") plot(my_model$graph) Ysim <- rmpareto(n = 100, d = d, model = \"HR\", par = my_model$Gamma) my_fit <- fmpareto_graph_HR(data = Ysim, graph = my_model$graph, p = NULL, method = \"vario\") ggplot() +     geom_point(aes(x = c(Gamma2chi(my_fit)), y = c(Gamma2chi(my_model$Gamma)))) +     geom_abline(slope = 1, intercept = 0) +     xlab(\"Fitted\") +     ylab(\"True\") +     coord_cartesian(xlim = c(0, 1), ylim = c(0, 1))"},{"path":"/articles/graphicalExtremes.html","id":"extremal-graphical-lasso","dir":"Articles","previous_headings":"Extremal graphical models > Hüsler–Reiss graphical models","what":"Extremal graphical lasso","title":"Introduction to Extremal Graphical Models","text":"structure learning general, possibly non-decomposable graphs, can use extremal graphical lasso Hüsler–Reiss distributions. Given estimate \\(\\widehat \\Gamma\\) parameter matrix, e.g., obtained emp_vario(), compute corresponding matrices \\(\\widehat \\Sigma^{(k)}\\) function Gamma2Sigma(). order enforce sparsity, compute \\(\\ell_1\\)-penalized precision matrices \\(k\\V\\). tuning parameter \\(\\rho\\geq 0\\), extremal graphical lasso \\[\\begin{align*}   \\widehat \\Theta^{(k)}_{\\rho} = \\underset{{\\Theta} \\succeq 0}{\\mathop{\\mathrm{arg\\,max}}} \\,\\,   \\log \\det{\\Theta}-\\operatorname{tr}(\\widehat \\Sigma^{(k)}\\Theta) -\\rho \\sum_{\\substack{\\neq j \\\\ ,j\\neq k}} \\left|\\Theta_{ij}\\right|. \\end{align*}\\] Since run \\(d\\) different graphical lasso algorithms \\(k\\)th enforces sparsity edges involve \\(k\\)th node, determine estimated graph structure \\(\\widehat{G}_\\rho = (\\widehat E_\\rho,V)\\) majority vote: \\[ (,j) \\\\widehat E_\\rho \\quad \\Leftrightarrow \\quad \\frac1{d-2} \\# \\left\\{k \\V \\setminus \\{,j\\}: \\right(\\widehat\\Theta^{(k)}_\\rho \\left)_{ij} \\neq 0 \\right\\} \\geq 1/2.\\] best parameter \\(\\rho\\) can chosen instance minimizer BIC resulting models. extremal graphical lasso implemented eglasso() function. returns (sequence) estimated graphs , desired, corresponding \\(\\widehat \\Gamma_\\rho\\) estimates.","code":"set.seed(42) # (Ysim from previous example is used) rholist <- seq(1e-5, 0.04, length.out = 10) eglasso_fit <- eglearn(     data = Ysim,     rholist = rholist,     complete_Gamma = TRUE )  eglasso_loglik <- sapply(1:length(rholist), FUN = function(j) {     loglik_HR(         data = Ysim, p = .8, Gamma = eglasso_fit$Gamma[[j]],         graph = eglasso_fit$graph[[j]]     ) })  emst_fit <- emst(Ysim)  danube_loglik_tree <- loglik_HR(     data = Ysim, p = .8, Gamma = emst_fit$Gamma,     graph = emst_fit$graph )  ggplot(mapping = aes(x = rholist, y = eglasso_loglik[3, ])) +     geom_line() +     geom_point(shape = 21, size = 3, stroke = 1, fill = \"white\") +     geom_hline(aes(yintercept = danube_loglik_tree[3]), lty = \"dashed\") +     xlab(\"rho\") +     ylab(\"BIC\") +     scale_x_continuous(         breaks = rholist,         labels = round(rholist, 3),         sec.axis = sec_axis(             trans = ~., breaks = rholist,             labels = sapply(eglasso_fit$graph, igraph::gsize),             name = \"Number of edges\"         )     ) best_Gamma <- eglasso_fit$Gamma[[which.min(eglasso_loglik[3, ])]] chi_hat <- emp_chi(Ysim)  ggplot() +     geom_point(aes(x = c(Gamma2chi(best_Gamma)), y = c(chi_hat))) +     geom_abline(slope = 1, intercept = 0) +     xlab(\"Fitted\") +     ylab(\"Empirical\") +     coord_cartesian(         ylim = c(0, 1),         xlim = c(0, 1)     )"},{"path":"/articles/graphicalExtremes.html","id":"exercises","dir":"Articles","previous_headings":"Extremal graphical models","what":"Exercises","title":"Introduction to Extremal Graphical Models","text":"exercises solutions see vignette(\"exercises\").","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Engelke. Author, maintainer. Adrien S. Hitz. Author. Nicola Gnecco. Author. Manuel Hentschel. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Engelke S, Hitz , Gnecco N, Hentschel M (2022). graphicalExtremes: Statistical Methodology Graphical Extreme Value Models. R package version 0.2.0, https://github.com/sebastian-engelke/graphicalExtremes.","code":"@Manual{,   title = {graphicalExtremes: Statistical Methodology for Graphical Extreme Value Models},   author = {Sebastian Engelke and Adrien S. Hitz and Nicola Gnecco and Manuel Hentschel},   year = {2022},   note = {R package version 0.2.0},   url = {https://github.com/sebastian-engelke/graphicalExtremes}, }"},{"path":"/index.html","id":"graphical-extremes","dir":"","previous_headings":"","what":"Statistical Methodology for Graphical Extreme Value Models","title":"Statistical Methodology for Graphical Extreme Value Models","text":"implementation statistical methodology paper Engelke Hitz (2020) sparse multivariate extreme value models. Includes exact simulation algorithms statistical inference methods multivariate Pareto distributions graphical structures. Furthermore contains implementations statistical methods Engelke Volgushev (2022), Röttger et al. (2021), Hentschel et al. (2022).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Statistical Methodology for Graphical Extreme Value Models","text":"latest CRAN version can installed using: latest GitHub version can installed using:","code":"install.packages(\"graphicalExtremes\") # install.packages(\"devtools\") devtools::install_github(\"sebastian-engelke/graphicalExtremes\")"},{"path":[]},{"path":"/reference/Gamma2Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma\\) or \\(\\Sigma^k\\) matrix — Gamma2Sigma","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma\\) or \\(\\Sigma^k\\) matrix — Gamma2Sigma","text":"Transforms Gamma matrix definition Huesler--Reiss distribution corresponding \\(\\Sigma\\) \\(\\Sigma^k\\) matrix.","code":""},{"path":"/reference/Gamma2Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma\\) or \\(\\Sigma^k\\) matrix — Gamma2Sigma","text":"","code":"Gamma2Sigma(Gamma, k = NULL, full = FALSE)"},{"path":"/reference/Gamma2Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma\\) or \\(\\Sigma^k\\) matrix — Gamma2Sigma","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. k NULL (default) integer 1 d. Indicates matrix \\(\\Sigma\\), \\(\\Sigma^k\\) produced. full Logical. true, kth row column \\(\\Sigma^k\\) included function returns \\(d \\times d\\) matrix. default, full = FALSE.","code":""},{"path":"/reference/Gamma2Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma\\) or \\(\\Sigma^k\\) matrix — Gamma2Sigma","text":"Numeric \\(\\Sigma^k\\) matrix size \\((d-1) \\times (d-1)\\) full = FALSE, \\(\\Sigma\\) size \\(d \\times d\\) full = TRUE.","code":""},{"path":"/reference/Gamma2Sigma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma\\) or \\(\\Sigma^k\\) matrix — Gamma2Sigma","text":"Every \\(d \\times d\\) Gamma matrix definition Huesler--Reiss distribution can transformed \\((d-1) \\times (d-1)\\) \\(\\Sigma^k\\) matrix, k 1 d. inverse \\(\\Sigma^k\\) contains graph structure corresponding Huesler--Reiss distribution parameter matrix Gamma. full = TRUE, \\(\\Sigma^k\\) returned \\(d \\times d\\) matrix additional kth row column contain zeros. details see Engelke Hitz (2020)  Hentschel et al. (2022) .","code":""},{"path":"/reference/Gamma2Sigma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma\\) or \\(\\Sigma^k\\) matrix — Gamma2Sigma","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932. Hentschel M, Engelke S, Segers J (2022). “Statistical Inference Hüsler-Reiss Graphical Models Matrix Completions.” doi:10.48550/ARXIV.2210.14292 , https://arxiv.org/abs/2210.14292.","code":""},{"path":[]},{"path":"/reference/Gamma2Sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma\\) or \\(\\Sigma^k\\) matrix — Gamma2Sigma","text":"","code":"Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) ) Gamma2Sigma(Gamma, k = 1, full = FALSE) #>      [,1] [,2] [,3] #> [1,]  1.5  0.5    1 #> [2,]  0.5  1.5    1 #> [3,]  1.0  1.0    2"},{"path":"/reference/Gamma2Theta.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"Transforms variogram matrix (\\(\\Gamma\\)) definition Huesler--Reiss distribution corresponding precision matrix (\\(\\Theta\\) \\(\\Theta^k\\)).","code":""},{"path":"/reference/Gamma2Theta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"","code":"Gamma2Theta(Gamma, k = NULL)"},{"path":"/reference/Gamma2Theta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. k NULL integer 1 d. NULL, \\(d \\times d\\) matrix \\(\\Theta\\) produced, otherwise specified \\((d-1) \\times (d-1)\\) matrix \\(\\Theta^k\\).","code":""},{"path":"/reference/Gamma2Theta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"Numeric \\(\\Sigma^k\\) matrix size \\((d-1) \\times (d-1)\\) full = FALSE, size \\(d \\times d\\) full = TRUE.","code":""},{"path":"/reference/Gamma2Theta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"Every \\(d \\times d\\) Gamma matrix definition Huesler--Reiss distribution can transformed \\(d \\times d\\) \\(\\Theta\\) matrix, contains graph structure corresponding Huesler--Reiss distribution parameter matrix Gamma.","code":""},{"path":"/reference/Gamma2Theta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"references Rd macro \\insertAllCites help page.","code":""},{"path":[]},{"path":"/reference/Gamma2Theta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"","code":"Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) ) Gamma2Theta(Gamma) #>               [,1]          [,2]          [,3] [,4] #> [1,]  1.000000e+00 -5.000000e-01 -5.000000e-01  0.0 #> [2,] -5.000000e-01  1.000000e+00  1.110223e-16 -0.5 #> [3,] -5.000000e-01 -1.054712e-15  1.000000e+00 -0.5 #> [4,]  5.551115e-17 -5.000000e-01 -5.000000e-01  1.0"},{"path":"/reference/Gamma2chi.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"Transforms Gamma matrix definition Huesler--Reiss distribution corresponding extremal correlation \\(\\chi\\).","code":""},{"path":"/reference/Gamma2chi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"","code":"Gamma2chi(Gamma)"},{"path":"/reference/Gamma2chi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"Gamma Numeric matrix, positive entries.","code":""},{"path":"/reference/Gamma2chi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"Numeric matrix. extremal correlation coefficient.","code":""},{"path":"/reference/Gamma2chi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"formula transformation Gamma \\(\\chi\\) applied element-wise $$\\chi = 2 - 2 \\Phi(\\sqrt{\\Gamma} / 2),$$ \\(\\Phi\\) standard normal distribution function. inverse chi2Gamma().","code":""},{"path":"/reference/Gamma2chi_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"Computes theoretical \\(\\chi\\) coefficient 3 dimensions.","code":""},{"path":"/reference/Gamma2chi_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"","code":"Gamma2chi_3D(Gamma)"},{"path":"/reference/Gamma2chi_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"Gamma Numeric \\(3 \\times 3\\) matrix.","code":""},{"path":"/reference/Gamma2chi_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"3-dimensional \\(\\chi\\) coefficient, .e., extremal correlation coefficient HR distribution. Note \\(0 \\leq \\chi \\leq 1\\).","code":""},{"path":"/reference/Gamma2graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of matrix to graph object — Gamma2graph","title":"Transformation of matrix to graph object — Gamma2graph","text":"Transforms \\(\\Gamma\\) \\(\\Theta\\) matrix igraph::graph object corresponding Huesler--Reiss extremal graphical model.","code":""},{"path":"/reference/Gamma2graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of matrix to graph object — Gamma2graph","text":"","code":"Gamma2graph(Gamma, tol = get_large_tol())  Theta2graph(Theta, tol = get_large_tol())"},{"path":"/reference/Gamma2graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of matrix to graph object — Gamma2graph","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. tol Numeric scalar, entries precision matrix absolute value smaller considered zero. Theta Numeric \\(d \\times d\\) precision matrix.","code":""},{"path":"/reference/Gamma2graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of matrix to graph object — Gamma2graph","text":"Graph object igraph package. undirected graph.","code":""},{"path":[]},{"path":"/reference/Gamma2graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformation of matrix to graph object — Gamma2graph","text":"","code":"Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  Gamma2graph(Gamma) #> IGRAPH 5be2b04 U--- 4 4 --  #> + edges from 5be2b04: #> [1] 1--2 1--3 2--4 3--4"},{"path":"/reference/Gamma2par.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","title":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","text":"function returns vector containing upper triangular part matrix Gamma. Gamma already vector, returns .","code":""},{"path":"/reference/Gamma2par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","text":"","code":"Gamma2par(Gamma)"},{"path":"/reference/Gamma2par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","text":"Gamma Numeric \\(d \\times d\\) variogram matrix.","code":""},{"path":"/reference/Gamma2par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","text":"Numeric vector d elements. upper triangular part given Gamma matrix.","code":""},{"path":"/reference/Sigma2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of \\(\\Sigma\\) and \\(\\Sigma^k\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","title":"Transformation of \\(\\Sigma\\) and \\(\\Sigma^k\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"Transforms \\(\\Sigma^k\\) matrix definition Huesler--Reiss distribution corresponding \\(\\Gamma\\) matrix.","code":""},{"path":"/reference/Sigma2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of \\(\\Sigma\\) and \\(\\Sigma^k\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"","code":"Sigma2Gamma(Sigma, k = NULL, full = FALSE)"},{"path":"/reference/Sigma2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of \\(\\Sigma\\) and \\(\\Sigma^k\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"Sigma Numeric \\((d-1) \\times (d-1)\\) covariance matrix \\(\\Sigma^k\\) definition Huesler--Reiss distribution. Numeric \\(d \\times d\\) covariance matrix full = TRUE, see full parameter. k Integer 1 (default value) d. Indicates matrix \\(\\Sigma^k\\) given S. full Logical. true, kth row column \\(\\Sigma^k\\) included function returns \\(d \\times d\\) matrix. default, full = FALSE.","code":""},{"path":"/reference/Sigma2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of \\(\\Sigma\\) and \\(\\Sigma^k\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"Numeric \\(d \\times d\\)  \\(\\Gamma\\) matrix.","code":""},{"path":"/reference/Sigma2Gamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of \\(\\Sigma\\) and \\(\\Sigma^k\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"k 1 d, \\(\\Sigma^k\\) matrix size \\((d-1) \\times (d-1)\\) definition Huesler--Reiss distribution can transformed corresponding \\(d \\times d\\) \\(\\Gamma\\) matrix. full = TRUE, \\(\\Sigma^k\\) must \\(d \\times d\\) matrix kth row column containing zeros. details see Engelke Hitz (2020) . inverse function Gamma2Sigma().","code":""},{"path":"/reference/Sigma2Gamma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transformation of \\(\\Sigma\\) and \\(\\Sigma^k\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":[]},{"path":"/reference/Sigma2Gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformation of \\(\\Sigma\\) and \\(\\Sigma^k\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"","code":"Sigma1 <- rbind(   c(1.5, 0.5, 1),   c(0.5, 1.5, 1),   c(1, 1, 2) ) Sigma2Gamma(Sigma1, k = 1, full = FALSE) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  1.5  1.5  2.0 #> [2,]  1.5  0.0  2.0  1.5 #> [3,]  1.5  2.0  0.0  1.5 #> [4,]  2.0  1.5  1.5  0.0"},{"path":"/reference/Theta2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Theta2Gamma","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Theta2Gamma","text":"Transforms precision matrix (\\(\\Theta\\) \\(\\Theta^k\\)) corresponding variogram matrix.","code":""},{"path":"/reference/Theta2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Theta2Gamma","text":"","code":"Theta2Gamma(Theta, k = NULL)"},{"path":"/reference/Theta2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Theta2Gamma","text":"Theta Numeric \\(d \\times d\\) matrix (k NULL) \\((d-1) \\times (d-1)\\) matrix (k number). k NULL integer 1 d. NULL input Theta interpreted \\(d \\times d\\) precision matrix \\(\\Theta\\), otherwise \\(\\Theta^k\\).","code":""},{"path":"/reference/Theta2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Theta2Gamma","text":"\\(d \\times d\\) variogram matrix implied Theta.","code":""},{"path":[]},{"path":"/reference/V_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute exponent measure — V_HR","title":"Compute exponent measure — V_HR","text":"Computes exponent measure HR distribution.","code":""},{"path":"/reference/V_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute exponent measure — V_HR","text":"","code":"V_HR(x, Gamma = NULL, Theta = NULL)"},{"path":"/reference/V_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute exponent measure — V_HR","text":"x Numeric vector d positive elements exponent measure evaluated. Gamma d x d variogram matrix numeric vector d(d-1)/2 elements, containing upper triangular part variogram matrix. Theta d x d precision matrix numeric vector d(d-1)/2 elements, containing upper triangular part precision matrix.","code":""},{"path":"/reference/V_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute exponent measure — V_HR","text":"Numeric. exponent measure HR distribution.","code":""},{"path":"/reference/V_HR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute exponent measure — V_HR","text":"Gamma needed computation. Theta used compute Gamma necessary.","code":""},{"path":"/reference/Zmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Z-matrix — Zmatrix","title":"Computes the Z-matrix — Zmatrix","text":"Copied R package \"golazo\" kind permission Piotr Zwiernik piotr.zwiernik@utoronto.ca. function outputs Z matrix, , unique ultrametric matrix dominating S. matrix used connstruct starting point GOLAZO algorithm L=0 U strictly positive (-diagonal entries).","code":""},{"path":"/reference/Zmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Z-matrix — Zmatrix","text":"","code":"Zmatrix(S)"},{"path":"/reference/Zmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Z-matrix — Zmatrix","text":"S covariance matrix","code":""},{"path":"/reference/censor.html","id":null,"dir":"Reference","previous_headings":"","what":"Censor dataset — censor","title":"Censor dataset — censor","text":"Censors row matrix x vector p.","code":""},{"path":"/reference/censor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Censor dataset — censor","text":"","code":"censor(x, p)"},{"path":"/reference/censor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Censor dataset — censor","text":"x Numeric \\(n \\times d\\) matrix. p Numeric vector d elements.","code":""},{"path":"/reference/censor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Censor dataset — censor","text":"Numeric \\(n \\times d\\) matrix.","code":""},{"path":"/reference/check_Gamma_and_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input graph and Gamma matrix — check_Gamma_and_graph","title":"Check input graph and Gamma matrix — check_Gamma_and_graph","text":"Checks converts (incomplete) Gamma matrix graph given HR graphical model.","code":""},{"path":"/reference/check_Gamma_and_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input graph and Gamma matrix — check_Gamma_and_graph","text":"","code":"check_Gamma_and_graph(Gamma, graph = NULL, graph_type = \"general\")"},{"path":"/reference/check_Gamma_and_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input graph and Gamma matrix — check_Gamma_and_graph","text":"Gamma Gamma matrix vector entries corresponding edges graph graph graph object NULL graph structure specified NA Gamma matrix graph_type Passed check_graph().","code":""},{"path":"/reference/check_Gamma_and_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input graph and Gamma matrix — check_Gamma_and_graph","text":"list consisting Gamma Gamma matrix given input implied input graph graph given input implied input Throws error input valid.","code":""},{"path":[]},{"path":"/reference/check_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input graph — check_graph","title":"Check input graph — check_graph","text":"Checks input graph valid graph extremal graphical model. necessary, converts graph undirected graph. Removes vertex labels present.","code":""},{"path":"/reference/check_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input graph — check_graph","text":"","code":"check_graph(   graph,   graph_type = c(\"general\", \"decomposable\", \"block\", \"tree\"),   check_connected = TRUE,   nVertices = NULL )"},{"path":"/reference/check_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input graph — check_graph","text":"graph [igraph::graph] object. graph_type \"general\", \"decomposable\", \"block\", \"tree\". required type graph. check_connected Whether check graph connected. nVertices number vertices required graph.","code":""},{"path":"/reference/check_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input graph — check_graph","text":"given graph, necessary converted undirected. graph valid error thrown.","code":""},{"path":[]},{"path":"/reference/check_split_by_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify pairs of vertices that are split by a separator — check_split_by_sep","title":"Identify pairs of vertices that are split by a separator — check_split_by_sep","text":"Identify pairs vertices split separator","code":""},{"path":"/reference/check_split_by_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify pairs of vertices that are split by a separator — check_split_by_sep","text":"","code":"check_split_by_sep(graph, sep, edgeMat)"},{"path":"/reference/check_split_by_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify pairs of vertices that are split by a separator — check_split_by_sep","text":"graph graph sep set vertex ids used split graph edgeMat two-column matrix, containing vertex-paris checked","code":""},{"path":"/reference/check_split_by_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify pairs of vertices that are split by a separator — check_split_by_sep","text":"logical vector, indicating edge whether split sep","code":""},{"path":"/reference/chi2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"Transforms extremal correlation \\(\\chi\\) Gamma matrix definition Huesler--Reiss distribution.","code":""},{"path":"/reference/chi2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"","code":"chi2Gamma(chi)"},{"path":"/reference/chi2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"chi Numeric matrix, entries 0 1.","code":""},{"path":"/reference/chi2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"Numeric matrix. \\(\\Gamma\\) parameters Huesler--Reiss distribution.","code":""},{"path":"/reference/chi2Gamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"formula transformation chi \\(\\Gamma\\) applied element-wise $$\\Gamma = (2 \\Phi^{-1}(1 - 0.5 \\chi))^2,$$ \\(\\Phi^{-1}\\) inverse standard normal distribution function. inverse Gamma2chi().","code":""},{"path":"/reference/complete_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of Gamma matrices — complete_Gamma","title":"Completion of Gamma matrices — complete_Gamma","text":"Given graph (partial) variogram matrix Gamma, returns full variogram matrix agrees Gamma entries corresponding edges graph whose corresponding precision matrix, obtained Gamma2Theta(), zeros entries corresponding non-edges graph. results existence uniqueness completion, see Hentschel et al. (2022) .","code":""},{"path":"/reference/complete_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of Gamma matrices — complete_Gamma","text":"","code":"complete_Gamma(Gamma, graph = NULL, ...)"},{"path":"/reference/complete_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completion of Gamma matrices — complete_Gamma","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. graph NULL igraph::graph object. NULL, graph implied non-edge entries Gamma NA. Must connected, undirected. ... arguments passed complete_Gamma_general() graph decomposable","code":""},{"path":"/reference/complete_Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completion of Gamma matrices — complete_Gamma","text":"Completed \\(d \\times d\\)  Gamma matrix.","code":""},{"path":"/reference/complete_Gamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Completion of Gamma matrices — complete_Gamma","text":"graph decomposable, Gamma needs specified edges graph, entries ignored. graph decomposable, graphical completion algorithm requires fully specified (non-graphical) variogram matrix Gamma begin . necessary, initial completion computed using edmcr::npf().","code":""},{"path":"/reference/complete_Gamma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Completion of Gamma matrices — complete_Gamma","text":"Hentschel M, Engelke S, Segers J (2022). “Statistical Inference Hüsler-Reiss Graphical Models Matrix Completions.” doi:10.48550/ARXIV.2210.14292 , https://arxiv.org/abs/2210.14292.","code":""},{"path":[]},{"path":"/reference/complete_Gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Completion of Gamma matrices — complete_Gamma","text":"","code":"## Block graph: Gamma <- rbind(   c(0, .5, NA, NA),   c(.5, 0, 1, 1.5),   c(NA, 1, 0, .8),   c(NA, 1.5, .8, 0) )  complete_Gamma(Gamma) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.5  2.0 #> [2,]  0.5  0.0  1.0  1.5 #> [3,]  1.5  1.0  0.0  0.8 #> [4,]  2.0  1.5  0.8  0.0  ## Alternative representation of the same completion problem: my_graph <- igraph::graph_from_adjacency_matrix(rbind(   c(0, 1, 0, 0),   c(1, 0, 1, 1),   c(0, 1, 0, 1),   c(0, 1, 1, 0) ), mode = \"undirected\") Gamma_vec <- c(.5, 1, 1.5, .8) complete_Gamma(Gamma_vec, my_graph) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.5  2.0 #> [2,]  0.5  0.0  1.0  1.5 #> [3,]  1.5  1.0  0.0  0.8 #> [4,]  2.0  1.5  0.8  0.0  ## Decomposable graph: G <- rbind( c(0, 5, 7, 6, NA), c(5, 0, 14, 15, NA), c(7, 14, 0, 5, 5), c(6, 15, 5, 0, 6), c(NA, NA, 5, 6, 0) )  complete_Gamma(G) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  0.0  5.0    7    6  9.6 #> [2,]  5.0  0.0   14   15 17.4 #> [3,]  7.0 14.0    0    5  5.0 #> [4,]  6.0 15.0    5    0  6.0 #> [5,]  9.6 17.4    5    6  0.0  ## Non-decomposable graph: G <- rbind( c(0, 5, 7, 6, 6), c(5, 0, 14, 15, 13), c(7, 14, 0, 5, 5), c(6, 15, 5, 0, 6), c(6, 13, 5, 6, 0) ) g <- igraph::make_ring(5)  complete_Gamma(G, g) #>          [,1]      [,2]      [,3]     [,4]     [,5] #> [1,]  0.00000  5.000000 12.723425 10.37104 6.000000 #> [2,]  5.00000  0.000000 14.000000 12.72342 9.676194 #> [3,] 12.72342 14.000000  0.000000  5.00000 9.676194 #> [4,] 10.37104 12.723425  5.000000  0.00000 6.000000 #> [5,]  6.00000  9.676194  9.676194  6.00000 0.000000"},{"path":"/reference/complete_Gamma_decomposable.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"Given decomposable graph incomplete variogram matrix Gamma, returns full Gamma matrix implied conditional independencies.","code":""},{"path":"/reference/complete_Gamma_decomposable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"","code":"complete_Gamma_decomposable(Gamma, graph = NULL)"},{"path":"/reference/complete_Gamma_decomposable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"Gamma variogram matrix specified edges graph diagonals. entries ignored (graph specified), NA indicate non-edges graph. graph NULL decomposable [igraph::graph] object. NULL, structure NA entries Gamma used instead.","code":""},{"path":"/reference/complete_Gamma_decomposable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"complete variogram matrix agrees Gamma entries corresponding edges graph diagonals. corresponding \\(\\Theta\\) matrix produced Gamma2Theta() zeros remaining entries.","code":""},{"path":[]},{"path":"/reference/complete_Gamma_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-decomposable completion of variogram matrices — complete_Gamma_general","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general","text":"Given non-decomposable graph, (non-graphical) variogram matrix Gamma, modifies Gamma non-edge entries, resulting matrix variogram matrix graphical structure described graph.","code":""},{"path":"/reference/complete_Gamma_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general","text":"","code":"complete_Gamma_general(   Gamma,   graph,   N = 10000,   tol = get_large_tol(),   check_tol = 100 )"},{"path":"/reference/complete_Gamma_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. graph igraph::graph() object. N Maximum number iterations. tol Numeric scalar. Tolerance used completing submatrices. check_tol Numeric/integer scalar. often check tolerance completing submatrices.","code":""},{"path":"/reference/complete_Gamma_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general","text":"completed \\(d \\times d\\) variogram matrix.","code":""},{"path":[]},{"path":"/reference/complete_Gamma_general_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","title":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","text":"Given graph variogram matrix Gamma, returns full Gamma matrix implied conditional independencies. DEMO VERSION: Returns lot details allows specifying graph list used. way slower functions.","code":""},{"path":"/reference/complete_Gamma_general_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","text":"","code":"complete_Gamma_general_demo(Gamma, graph, N = 1000, tol = 0, gList = NULL)"},{"path":"/reference/complete_Gamma_general_demo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","text":"Gamma complete variogram matrix (without graphical structure). graph igraph::graph object. N maximal number iterations algorithm. tol tolerance use checking zero entries Theta. gList list graphs used instead output make_sep_list().","code":""},{"path":"/reference/complete_Gamma_general_demo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DEMO-VERSION: Completion of non-decomposable Gamma matrices — complete_Gamma_general_demo","text":"nested list, containing following details. \"error term\" maximal absolute value Theta non-edge entry. graph, N, tol input gList input computed make_sep_list(). Gamma0, Theta0, err0 Initial Gamma, Theta, error term. iterations nested list, containing following infos performed iteration: n Number iteration t Corresponding index gList g graph used Gamma, Theta, err value Gamma, Theta, error term iteration","code":""},{"path":[]},{"path":"/reference/complete_Gamma_general_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","text":"Given non-decomposable graph, (non-graphical) variogram matrix Gamma, modifies Gamma non-edge entries, resulting matrix variogram matrix graphical structure described graph. splitting graph complete separators smaller subgraphs, calling complete_Gamma_general subgraph/submatrix, using multiple cores available.","code":""},{"path":"/reference/complete_Gamma_general_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","text":"","code":"complete_Gamma_general_split(   Gamma,   graph,   N = 10000,   sub_tol = get_large_tol() * 0.001,   check_tol = 100,   mc_cores_overwrite = NULL,   final_tol = get_large_tol() )"},{"path":"/reference/complete_Gamma_general_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. graph igraph::graph() object. N Maximum number iterations. sub_tol Numeric scalar. Tolerance used completing submatrices. smaller final_tol. check_tol Numeric/integer scalar. often check tolerance completing submatrices. mc_cores_overwrite NULL numeric/integer scalar. Maximal number cores use. final_tol Numeric scalar. Check convergence final result tolerance. Skipped value < 0.","code":""},{"path":"/reference/complete_Gamma_general_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non-decomposable completion of variogram matrices — complete_Gamma_general_split","text":"completed \\(d \\times d\\) variogram matrix.","code":""},{"path":[]},{"path":"/reference/complete_Gamma_one_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","title":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","text":"Given decomposable graph consisting two cliques incomplete variogram matrix Gamma, returns full Gamma matrix implied conditional independencies. rows/columns Gamma must ordered clique size nA (excluding separator) comes first, separator size nC, remaining nB vertices.","code":""},{"path":"/reference/complete_Gamma_one_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","text":"","code":"complete_Gamma_one_step(Gamma, nA, nC, nB)"},{"path":"/reference/computeLimits.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to compute the axis limits of a plot\nwith given x, y data and optionally a fixed x-y-ratio and\ncorrecting the latitude/longitude scale at different latitudes — computeLimits","title":"Helper function to compute the axis limits of a plot\nwith given x, y data and optionally a fixed x-y-ratio and\ncorrecting the latitude/longitude scale at different latitudes — computeLimits","text":"Helper function compute axis limits plot given x, y data optionally fixed x-y-ratio correcting latitude/longitude scale different latitudes","code":""},{"path":"/reference/computeLimits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to compute the axis limits of a plot\nwith given x, y data and optionally a fixed x-y-ratio and\ncorrecting the latitude/longitude scale at different latitudes — computeLimits","text":"","code":"computeLimits(xData, yData, xyRatio = 1, convertLatLong = TRUE, stretch = 1)"},{"path":"/reference/danube.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper Danube basin dataset — danube","title":"Upper Danube basin dataset — danube","text":"dataset containing river discharge data tributaries Danube.","code":""},{"path":"/reference/danube.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper Danube basin dataset — danube","text":"","code":"danube"},{"path":"/reference/danube.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Upper Danube basin dataset — danube","text":"named list four entries data_clustered numeric matrix, containing pre-processed discharge data gauging station data_raw numeric matrix, containing daily (raw) discharge data gauging station info data frame, containing information gauging station flow_edges two-column numeric matrix. row contains indices (info) pair gauging stations directly connected river.","code":""},{"path":"/reference/danube.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Upper Danube basin dataset — danube","text":"Bavarian Environmental Agency https://www.gkd.bayern.de.","code":""},{"path":"/reference/danube.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upper Danube basin dataset — danube","text":"obtain matrix data, daily discharge data summer months 1960 2010, given dailyData, declustered, yielding seven ten observations per year. row corresponds one observation declustered time series, non-unique rownames indicate year observation . column corresponds one gauging stations, column indices data corresponding row indices info. See (Asadi et al. 2015)  details preprocessing declustering. info data frame containing following information gauging stations corresponding catchment area: RivNames Name river gauging station Lat, Long Coordinates gauging station Lat_Center, Long_Center Coordinates center catchment corresponding gauging station Alt Mean altitude catchment Area Area catchment corresponding gauging station Slope Mean slope catchment PlotCoordX, PlotCoordY X-Y-coordinates can used arrange gauging stations plotting flow graph.","code":""},{"path":"/reference/danube.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Upper Danube basin dataset — danube","text":"Asadi P, Davison AC, Engelke S (2015). “Extremes river networks.” Annals Applied Statistics, 9(4), 2023 -- 2050. doi:10.1214/15-AOAS863 .","code":""},{"path":[]},{"path":"/reference/danube.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upper Danube basin dataset — danube","text":"","code":"g <- igraph::graph_from_edgelist(danube$flow_edges) loc <- as.matrix(danube$info[,c('PlotCoordX', 'PlotCoordY')]) plot(g, layout = loc)"},{"path":"/reference/data2mpareto.html","id":null,"dir":"Reference","previous_headings":"","what":"Data standardization to multivariate Pareto scale — data2mpareto","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"Transforms data matrix empirically multivariate Pareto scale.","code":""},{"path":"/reference/data2mpareto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"","code":"data2mpareto(data, p, na.rm = FALSE)"},{"path":"/reference/data2mpareto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric 0 1. Probability used quantile threshold data. na.rm Logical. rows containing NAs removed.","code":""},{"path":"/reference/data2mpareto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"Numeric \\(m \\times d\\) matrix, m number rows original data matrix threshold.","code":""},{"path":"/reference/data2mpareto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"columns data matrix first transformed empirically standard Pareto distributions. , observations least one component exceeds p-quantile standard Pareto distribution kept. observations finally divided p-quantile standard Pareto distribution standardize multivariate Pareto scale. na.rm FALSE, missing entries left transformation univariate marginals. thresholding step, missing values considered -Inf.","code":""},{"path":"/reference/data2mpareto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"","code":"n <- 20 d <- 4 p <- .8 G <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  set.seed(123) my_data <- rmstable(n, \"HR\", d = d, par = G) data2mpareto(my_data, p) #>            [,1]      [,2]      [,3]      [,4] #>  [1,] 0.2470588 0.4200000 1.4000000 0.7000000 #>  [2,] 1.0500000 0.6000000 0.3500000 0.2333333 #>  [3,] 0.6000000 0.3230769 1.0500000 0.3000000 #>  [4,] 0.7000000 0.5250000 0.8400000 1.4000000 #>  [5,] 2.1000000 1.4000000 0.6000000 0.6000000 #>  [6,] 0.4666667 0.3000000 0.2210526 2.1000000 #>  [7,] 0.3818182 2.1000000 0.3818182 1.0500000 #>  [8,] 1.4000000 0.8400000 4.2000000 0.4666667 #>  [9,] 4.2000000 1.0500000 2.1000000 4.2000000 #> [10,] 0.3230769 4.2000000 0.2100000 0.2470588"},{"path":"/reference/dim_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Gamma square matrix? — dim_Gamma","title":"Is Gamma square matrix? — dim_Gamma","text":"Check Gamma matrix square matrix. , return dimension. Else, raise error.","code":""},{"path":"/reference/dim_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Gamma square matrix? — dim_Gamma","text":"","code":"dim_Gamma(Gamma)"},{"path":"/reference/dim_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Gamma square matrix? — dim_Gamma","text":"Gamma Numeric matrix. Matrix representing variogram HR distribution.","code":""},{"path":"/reference/dim_Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Gamma square matrix? — dim_Gamma","text":"Numeric. dimension matrix (number rows columns, matrix symmetric). Else, raises error.","code":""},{"path":"/reference/eglearn.html","id":null,"dir":"Reference","previous_headings":"","what":"Learning extremal graph structure — eglearn","title":"Learning extremal graph structure — eglearn","text":"Fits extremal graph structure using neighborhood selection approach (see Meinshausen Bühlmann (2006) ) graphical lasso (see Friedman et al. (2008) ).","code":""},{"path":"/reference/eglearn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learning extremal graph structure — eglearn","text":"","code":"eglearn(   data,   p = NULL,   rholist = c(0.1, 0.15, 0.19, 0.205),   reg_method = c(\"ns\", \"glasso\"),   complete_Gamma = FALSE )"},{"path":"/reference/eglearn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learning extremal graph structure — eglearn","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. rholist Numeric vector non-negative regularization parameters lasso. Default rholist = c(0.1, 0.15, 0.19, 0.205). details see glasso::glassopath(). reg_method One \"ns\", \"glasso\", neighborhood selection graphical lasso, respectively. Default reg_method = \"ns\". details see Meinshausen Bühlmann (2006) , Friedman et al. (2008) . complete_Gamma Whether want try fto complete Gamma matrix. Default complete_Gamma = FALSE.","code":""},{"path":"/reference/eglearn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Learning extremal graph structure — eglearn","text":"List made : graph list [igraph::graph] objects representing fitted graphs rho rholist. Gamma list numeric estimated \\(d \\times d\\) variogram matrices \\(\\Gamma\\) corresponding fitted graphs, rho rholist. complete_Gamma = FALSE underlying graph connected, returns NULL. rholist list penalty coefficients. graph_ic list [igraph::graph] objects representing optimal graph according aic, bic, mbic information criteria. reg_method = \"glasso\", returns list NA. Gamma_ic list numeric \\(d \\times d\\) estimated variogram matrices \\(\\Gamma\\) corresponding aic, bic, mbic information criteria. reg_method = \"glasso\", complete_Gamma = FALSE, underlying graph connected, returns list NA.","code":""},{"path":"/reference/emp_chi.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"Estimates empirically matrix bivariate extremal correlation coefficients \\(\\chi\\).","code":""},{"path":"/reference/emp_chi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"","code":"emp_chi(data, p = NULL)  emp_chi_pairwise(data, p = NULL, verbose = FALSE)"},{"path":"/reference/emp_chi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric scalar 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability data2mpareto() standardize data. verbose Print verbose progress information","code":""},{"path":"/reference/emp_chi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"Numeric matrix \\(d \\times d\\). matrix contains bivariate extremal coefficients \\(\\chi_{ij}\\), \\(, j = 1, ..., d\\).","code":""},{"path":"/reference/emp_chi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"emp_chi_pairwise calls emp_chi pair observations. robust data contains many NAs, can take rather long.","code":""},{"path":"/reference/emp_chi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"","code":"n <- 100 d <- 4 p <- .8 Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  set.seed(123) my_data <- rmstable(n, \"HR\", d = d, par = Gamma) emp_chi(my_data, p) #>      [,1] [,2] [,3] [,4] #> [1,] 1.00 0.65 0.55 0.45 #> [2,] 0.65 1.00 0.60 0.55 #> [3,] 0.55 0.60 1.00 0.60 #> [4,] 0.45 0.55 0.60 1.00"},{"path":"/reference/emp_chi_multdim.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"Estimates d-dimensional extremal correlation coefficient \\(\\chi\\) empirically.","code":""},{"path":"/reference/emp_chi_multdim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"","code":"emp_chi_multdim(data, p = NULL)"},{"path":"/reference/emp_chi_multdim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric scalar 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability data2mpareto() standardize data.","code":""},{"path":"/reference/emp_chi_multdim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"Numeric scalar. empirical d-dimensional extremal correlation coefficient \\(\\chi\\) data.","code":""},{"path":"/reference/emp_chi_multdim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"","code":"n <- 100 d <- 2 p <- .8 G <- cbind(   c(0, 1.5),   c(1.5, 0) )  set.seed(123) my_data <- rmstable(n, \"HR\", d = d, par = G) emp_chi_multdim(my_data, p) #> [1] 0.55"},{"path":"/reference/emp_vario.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler--Reiss distribution — emp_vario","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler--Reiss distribution — emp_vario","text":"Estimates variogram Huesler--Reiss distribution empirically.","code":""},{"path":"/reference/emp_vario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler--Reiss distribution — emp_vario","text":"","code":"emp_vario(data, k = NULL, p = NULL)  emp_vario_pairwise(data, k = NULL, p = NULL, verbose = FALSE)"},{"path":"/reference/emp_vario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler--Reiss distribution — emp_vario","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. k Integer 1 d. Component multivariate observations conditioned larger threshold p. NULL (default), average k returned. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. verbose Print verbose progress information","code":""},{"path":"/reference/emp_vario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler--Reiss distribution — emp_vario","text":"Numeric \\(d \\times d\\) matrix. estimated variogram Huesler--Reiss distribution.","code":""},{"path":"/reference/emp_vario.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the variogram matrix \\(\\Gamma\\) of a Huesler--Reiss distribution — emp_vario","text":"emp_vario_pairwise calls emp_vario pair observations. robust data contains many NAs, can take rather long.","code":""},{"path":"/reference/emst.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting extremal minimum spanning tree — emst","title":"Fitting extremal minimum spanning tree — emst","text":"Fits extremal minimum spanning tree, edge weights : negative maximized log-likelihoods bivariate Huesler--Reiss distributions, method = \"ML\". See Engelke Hitz (2020)  details. empirical extremal variogram, method = \"vario\". See Engelke Volgushev (2022)  details. empirical extremal correlation, method = \"chi\". See Engelke Volgushev (2022)  details.","code":""},{"path":"/reference/emst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting extremal minimum spanning tree — emst","text":"","code":"emst(data, p = NULL, method = c(\"vario\", \"ML\", \"chi\"), cens = FALSE)"},{"path":"/reference/emst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting extremal minimum spanning tree — emst","text":"data Numeric \\(n \\times d\\) matrix, n number observations d dimension. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. method One \"vario\", \"ML\", \"chi\". Default method = \"vario\". cens Logical. argument considered method = \"ML\". TRUE, censored likelihood contributions used components threshold. default, cens = FALSE.","code":""},{"path":"/reference/emst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting extremal minimum spanning tree — emst","text":"List consisting : graph igraph::graph object. fitted minimum spanning tree. Gamma Numeric \\(d \\times d\\) estimated variogram matrix \\(\\Gamma\\) corresponding fitted minimum spanning tree.","code":""},{"path":"/reference/emst.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting extremal minimum spanning tree — emst","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932. Engelke S, Volgushev S (2022). “Structure learning extremal tree models.” J. R. Stat. Soc. Ser. B Stat. Methodol.. doi:10.1111/rssb.12556 , Forthcoming, https://rss.onlinelibrary.wiley.com/doi/pdf/10.1111/rssb.12556.","code":""},{"path":"/reference/emst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting extremal minimum spanning tree — emst","text":"","code":"## Fitting a 4-dimensional HR minimum spanning tree my_graph <- igraph::graph_from_adjacency_matrix(   rbind(     c(0, 1, 0, 0),     c(1, 0, 1, 1),     c(0, 1, 0, 0),     c(0, 1, 0, 0)   ),   mode = \"undirected\" ) n <- 100 Gamma_vec <- c(.5, 1.4, .8) complete_Gamma(Gamma = Gamma_vec, graph = my_graph) ## full Gamma matrix #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.9  1.3 #> [2,]  0.5  0.0  1.4  0.8 #> [3,]  1.9  1.4  0.0  2.2 #> [4,]  1.3  0.8  2.2  0.0  set.seed(123) my_data <- rmpareto_tree(n, \"HR\", tree = my_graph, par = Gamma_vec) my_fit <- emst(my_data, p = NULL, method = \"ML\", cens = FALSE)"},{"path":"/reference/emtp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"function implements block descent algorithm find maximum Gaussian log-likelihood constraint concentration matrix Laplacian matrix. See Röttger et al. (2021)  details.","code":""},{"path":"/reference/emtp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"","code":"emtp2(Gamma, tol = 1e-06, verbose = TRUE, initial_point = TRUE)"},{"path":"/reference/emtp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"Gamma conditionally negative semidefinite matrix. typically empirical variogram matrix. tol convergence tolerance. algorithm terminates sum absolute differences two iterations tol. verbose TRUE (default) output printed. initial_point TRUE (default), algorithm construct initial point iteration steps.","code":""},{"path":"/reference/emtp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"list consisting : G_emtp2 optimal value variogram matrix number iterations","code":""},{"path":"/reference/emtp2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"Röttger F, Engelke S, Zwiernik P (2021). “Total positivity multivariate extremes.” doi:10.48550/ARXIV.2112.14727 , https://arxiv.org/abs/2112.14727.","code":""},{"path":"/reference/fast_diag.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast computation of diag(y %% M %% t(y)) — fast_diag","title":"Fast computation of diag(y %% M %% t(y)) — fast_diag","text":"Fast computation diag(y %% M %% t(y))","code":""},{"path":"/reference/fast_diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast computation of diag(y %% M %% t(y)) — fast_diag","text":"","code":"fast_diag(y, M)"},{"path":"/reference/fast_diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast computation of diag(y %% M %% t(y)) — fast_diag","text":"y Numeric matrix M Numeric matrix","code":""},{"path":"/reference/fast_diag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast computation of diag(y %% M %% t(y)) — fast_diag","text":"Numeric vector","code":""},{"path":"/reference/fillFixedParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to combine par with fixed params (in init) — fillFixedParams","title":"Helper function to combine par with fixed params (in init) — fillFixedParams","text":"Helper function combine par fixed params (init)","code":""},{"path":"/reference/fillFixedParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to combine par with fixed params (in init) — fillFixedParams","text":"","code":"fillFixedParams(par, init, fixParams)"},{"path":"/reference/fillFixedParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to combine par with fixed params (in init) — fillFixedParams","text":"par Numeric vector. parameters optimized init Numeric vector. initial parameters (including ones optimized ) fixParams Numeric logical vector. Positions fixed parameters full parameter vector.","code":""},{"path":"/reference/findVsep.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a separator set for two vertices — findVsep","title":"Find a separator set for two vertices — findVsep","text":"Finds reasonably small set vertices separate v0 v1 graph.","code":""},{"path":"/reference/findVsep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a separator set for two vertices — findVsep","text":"","code":"findVsep(graph, v0, v1)"},{"path":"/reference/fitInInterval.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit value(s) in interval — fitInInterval","title":"Fit value(s) in interval — fitInInterval","text":"Fit value(s) interval, arguments recycled necessary.","code":""},{"path":"/reference/fitInInterval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit value(s) in interval — fitInInterval","text":"","code":"fitInInterval(x, xMin = -Inf, xMax = Inf)"},{"path":"/reference/fitInInterval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit value(s) in interval — fitInInterval","text":"x Numeric vector xMin Numeric vector xMax Numeric vector","code":""},{"path":"/reference/fitInInterval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit value(s) in interval — fitInInterval","text":"Numeric vector","code":""},{"path":"/reference/fit_graph_to_Theta.html","id":null,"dir":"Reference","previous_headings":"","what":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","text":"Fits graph empirical Gamma matrix computing corresponding Theta matrix using Gamma2Theta() greedily chooses m edges correspond high absolute values Theta.","code":""},{"path":"/reference/fit_graph_to_Theta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","text":"","code":"fit_graph_to_Theta(data, m = NULL, Gamma_emp = NULL)"},{"path":"/reference/fit_graph_to_Theta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","text":"data (standardized) data compute Gamma m number edges add, defaults number edges tree Gamma_emp empirical Gamma matrix (can NULL data given)","code":""},{"path":"/reference/fit_graph_to_Theta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph_to_Theta","text":"list containing [igraph::graph] object fitted Gamma matrix","code":""},{"path":"/reference/flightCountMatrixToConnectionList.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert flight counts to connection list — flightCountMatrixToConnectionList","title":"Convert flight counts to connection list — flightCountMatrixToConnectionList","text":"Convert numeric matrix containing flight counts ariports data frame containing list connections.","code":""},{"path":"/reference/flightCountMatrixToConnectionList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert flight counts to connection list — flightCountMatrixToConnectionList","text":"","code":"flightCountMatrixToConnectionList(nFlightsPerConnection, directed = TRUE)"},{"path":"/reference/flightCountMatrixToConnectionList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert flight counts to connection list — flightCountMatrixToConnectionList","text":"nFlightsPerConnection square, numeric matrix identical column- row-names. entry represents number flights airport indexing row airport indexing column arbitrary time period. directed Logical scalar. Whether flights ->B B->considered separately.","code":""},{"path":"/reference/flightCountMatrixToConnectionList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert flight counts to connection list — flightCountMatrixToConnectionList","text":"data frame columns departureAirport, arrivalAirport, nFlights. row represents one connection >=1 flights input matrix.","code":""},{"path":"/reference/flights.html","id":null,"dir":"Reference","previous_headings":"","what":"Flights delay data — flights","title":"Flights delay data — flights","text":"dataset containing daily total delays major U.S. airlines. raw data obtained U.S. Bureau Transportation Statistics, pre-processed described Hentschel et al. (2022) .","code":""},{"path":"/reference/flights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flights delay data — flights","text":"","code":"flights"},{"path":"/reference/flights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Flights delay data — flights","text":"named list three entries: airports data.frame, containing information US airports delays numeric matrix, containing daily aggregated delays airports dataset flightCounts numeric array, containing yearly flight numbers airports dataset","code":""},{"path":"/reference/flights.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flights delay data — flights","text":"Raw delays data: https://www.bts.dot.gov/browse-statistical-products--data/bts-publications/airline-service-quality-performance-234-time Fields/Forms used raw data: https://esubmit.rita.dot.gov/ViewReports.aspx https://esubmit.rita.dot.gov/-Time-Form1.aspx https://esubmit.rita.dot.gov/-Time-Form3A.aspx Airports (includes license information): https://openflights.org/data.html","code":""},{"path":"/reference/flights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flights delay data — flights","text":"flightCounts three-dimensional array, containing number flights dataset pair airports, aggregated yearly basis. entry total number flights departure airport (row) destination airport (column) given year (dimension 3). array contain NAs, even airport operate given year, simply indicated zeros. delays three-dimensional array containing daily total positive delays, minutes, incoming outgoing flights respectively. column corresponds airport dataset row corresponds day. third dimension length two, 'arrivals' containing delays incoming flights 'departures' containing delays outgoing flights. Zeros indicate flights arriving/departing airport given day, none delays. NAs indicate flights arriving/departing airport day . airports data frame containing following information number US airports. entries missing, indicated NAs. IATA 3-letter IATA code Name name airport City main city served airport Country country territory airport located (mostly \"United States\") ICAO 4-letter ICAO code Latitude latitude airport, decimal degrees Longitude longitude airport, decimal degrees Altitude altitude airport, feet Timezone timezone airport, hours offset UTC DST Daylight savings time used airport. ''=US/Canada, 'N'=None. Timezone2 name timezone airport","code":""},{"path":"/reference/flights.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flights delay data — flights","text":"Hentschel M, Engelke S, Segers J (2022). “Statistical Inference Hüsler-Reiss Graphical Models Matrix Completions.” doi:10.48550/ARXIV.2210.14292 , https://arxiv.org/abs/2210.14292.","code":""},{"path":[]},{"path":"/reference/flights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flights delay data — flights","text":"","code":"if (FALSE) {  # Get total number of flights in the dataset: totalFlightCounts <- apply(flights$flightCounts, c(1,2), sum)  # Get number of flights for specific years in the dataset: flightCounts_08_09 <- apply(flights$flightCounts[,,c('2008', '2009')], c(1,2), sum)  # Get list of connections: connections <- flightCountMatrixToConnectionList(flights$flightCounts) connections_08 <- flightCountMatrixToConnectionList(flights$flightCounts[,,'2008'])  # Get total delays (arriving + departing): totalDelays <- apply(flights$delays, c(1,2), sum) }"},{"path":"/reference/fmpareto_HR_MLE.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR_MLE","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR_MLE","text":"Fits parameters multivariate Huesler--Reiss Pareto distribution using (censored) maximum likelihood estimation.","code":""},{"path":"/reference/fmpareto_HR_MLE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR_MLE","text":"","code":"fmpareto_HR_MLE(   data,   p = NULL,   cens = FALSE,   init = NULL,   fixParams = integer(0),   useTheta = TRUE,   maxit = 100,   graph = NULL,   optMethod = \"BFGS\" )"},{"path":"/reference/fmpareto_HR_MLE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR_MLE","text":"data Numeric \\(n \\times d\\) matrix, n number observations d number dimensions. p Numeric scalar 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability data2mpareto() standardize data. cens Logical scalar. true, censored likelihood contributions used components threshold. computationally expensive default cens = FALSE. init Numeric vector numeric matrix. Initial parameter values optimization. NULL, empirical variogram used instead. Otherwise numeric vector one entry per edge graph, complete variogram/precision matrix. fixParams Numeric logical vector. Indices parameter vectors kept fixed (identical init) optimization. Default integer(0). maxit Positive integer. maximum number iterations optimization. graph Graph object igraph package NULL (implying complete graph). method String. valid optimization method used function stats::optim. default, method = \"BFGS\".","code":""},{"path":"/reference/fmpareto_HR_MLE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR_MLE","text":"List consisting : convergence Logical. Indicates whether optimization converged . Gamma Numeric d x d matrix. Fitted variogram matrix. Theta Numeric d x d matrix. Fitted precision matrix. par Numeric vector. Optimal parameters, including fixed parameters. par_opt Numeric. Optimal parameters, excluding fixed parameters. nllik Numeric. Optimal value negative log-likelihood function. hessian Numeric matrix. Estimated Hessian matrix estimated parameters.","code":""},{"path":"/reference/fmpareto_HR_MLE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR_MLE","text":"parameters corresponding edges graph optimized, remaining entries implied graphical structure. graph NULL, complete graph used. optimization done either terms variogram (Gamma) precision matrix (Theta), depending value useTheta. graph non-decomposable, useTheta=TRUE significantly faster, otherwise similar performance.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter fitting for Huesler--Reiss graphical models — fmpareto_graph_HR","title":"Parameter fitting for Huesler--Reiss graphical models — fmpareto_graph_HR","text":"Fits parameter matrix (variogram) multivariate Huesler--Reiss Pareto distirubtion given graphical structure, using maximum-likelihood estimation empirical variogram.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter fitting for Huesler--Reiss graphical models — fmpareto_graph_HR","text":"","code":"fmpareto_graph_HR(   data,   graph,   p = NULL,   method = c(\"vario\", \"ML\"),   handleCliques = c(\"average\", \"full\", \"sequential\"),   ... )"},{"path":"/reference/fmpareto_graph_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter fitting for Huesler--Reiss graphical models — fmpareto_graph_HR","text":"data Numeric \\(n \\times d\\) matrix, n number observations d number dimensions. graph Undirected, connected [igraph::graph] object d vertices, representing graphical structure fitted Huesler--Reiss model. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. method One c('vario', 'ML'), 'vario' default, indicating method used parameter estimation. See details. handleCliques handle cliques separators graph. See details. ... Arguments passed fmpareto_HR_MLE(). Currently cens, maxit, optMethod, useTheta supported.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter fitting for Huesler--Reiss graphical models — fmpareto_graph_HR","text":"estiamted parameter matrix.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter fitting for Huesler--Reiss graphical models — fmpareto_graph_HR","text":"handleCliques='average', marginal parameter matrix estimated maximal clique graph combined partial parameter matrix taking average entries overlapping cliques. Lastly, full parameter matrix computed using complete_Gamma(). handleCliques='full', first full parameter matrix estimated using specified method non-edge entries adjusted final parameter matrix graphical structure indicated graph. handleCliques='sequential', graph must decomposable, method='ML' must specified. parameter matrix first estimated (recursive) separators rest cliques, keeping previously estimated entries fixed. method='ML', computational cost mostly influenced total size graph (handleCliques='full') size cliques, can already take significant amount time modest dimensions (e.g. d=3).","code":""},{"path":"/reference/generate_random_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random Gamma matrix — generate_random_Gamma","title":"Generate a random Gamma matrix — generate_random_Gamma","text":"Generates valid Gamma matrix given dimension","code":""},{"path":"/reference/generate_random_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random Gamma matrix — generate_random_Gamma","text":"","code":"generate_random_Gamma(d, ...)"},{"path":"/reference/generate_random_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random Gamma matrix — generate_random_Gamma","text":"d Size matrix ... arguments passed generate_random_spd_matrix()","code":""},{"path":[]},{"path":"/reference/generate_random_cactus.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random cactus graph — generate_random_cactus","title":"Generate a random cactus graph — generate_random_cactus","text":"Generates random cactus graph (mostly useful benchmarking).","code":""},{"path":"/reference/generate_random_cactus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random cactus graph — generate_random_cactus","text":"","code":"generate_random_cactus(d, cMin = 2, cMax = 6)"},{"path":"/reference/generate_random_cactus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random cactus graph — generate_random_cactus","text":"d Number vertices graph cMin Minimal size block (last block might smaller) cMax Maximal size block","code":""},{"path":[]},{"path":"/reference/generate_random_chordal_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random chordal graph — generate_random_chordal_graph","title":"Generate a random chordal graph — generate_random_chordal_graph","text":"Generates random chordal graph starting (small) complete graph adding new cliques specified size reached. sizes cliques separators can specified.","code":""},{"path":"/reference/generate_random_chordal_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random chordal graph — generate_random_chordal_graph","text":"","code":"generate_random_chordal_graph(   d,   cMin = 2,   cMax = 6,   sMin = 1,   sMax = 4,   block_graph = FALSE,   ... )"},{"path":"/reference/generate_random_chordal_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random chordal graph — generate_random_chordal_graph","text":"d Number vertices graph cMin Minimal size cliques (last clique might smaller necessary) cMax Maximal size cliques sMin Minimal size separators sMax Maximal size separators block_graph Force sMin == sMax == 1 produce block graph ... Ignored, allowed compatibility","code":""},{"path":"/reference/generate_random_chordal_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random chordal graph — generate_random_chordal_graph","text":"[igraph::graph] object","code":""},{"path":[]},{"path":"/reference/generate_random_connected_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random connected graph — generate_random_connected_graph","title":"Generate a random connected graph — generate_random_connected_graph","text":"Generates random connected graph. First tries generate Erdoes-Renyi graph, fails, falls back producing tree adding random edges tree.","code":""},{"path":"/reference/generate_random_connected_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random connected graph — generate_random_connected_graph","text":"","code":"generate_random_connected_graph(   d,   m = NULL,   p = 2/(d + 1),   maxTries = 1000,   ... )"},{"path":"/reference/generate_random_connected_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random connected graph — generate_random_connected_graph","text":"d Number vertices graph m Number edges graph (specify p) p Probability edge graph (specify m) maxTries Maximum number tries produce connected Eroes-Renyi graph ... Ignored, allowed compatibility","code":""},{"path":"/reference/generate_random_connected_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random connected graph — generate_random_connected_graph","text":"[igraph::graph] object","code":""},{"path":[]},{"path":"/reference/generate_random_graphical_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","title":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","text":"Generates valid Gamma matrix conditional independence structure specified graph","code":""},{"path":"/reference/generate_random_graphical_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","text":"","code":"generate_random_graphical_Gamma(graph, ...)"},{"path":"/reference/generate_random_graphical_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","text":"graph [igraph::graph] object ... Furhter arguments passed generate_random_spd_matrix()","code":""},{"path":[]},{"path":"/reference/generate_random_integer_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"Generates random variogram Matrix producing \\((d-1) \\times (d-1)\\) matrix B random integer entries -b b, computing S = B %*% t(B), passing S Sigma2Gamma(). process repeated increasing b valid Gamma matrix produced.","code":""},{"path":"/reference/generate_random_integer_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"","code":"generate_random_integer_Gamma(d, b = 2, b_step = 1)"},{"path":"/reference/generate_random_integer_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"d Number rows/columns output matrix b Initial b used algorithm described b_step much b increased iteration","code":""},{"path":"/reference/generate_random_integer_Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"numeric \\(d \\times d\\) variogram matrix integer entries","code":""},{"path":[]},{"path":"/reference/generate_random_integer_Gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"","code":"generate_random_integer_Gamma(5, 2, 0.1) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    2    6    3    7 #> [2,]    2    0   14    7    9 #> [3,]    6   14    0    9   13 #> [4,]    3    7    9    0   14 #> [5,]    7    9   13   14    0"},{"path":"/reference/generate_random_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random Huesler--Reiss Models — generate_random_model","title":"Generate random Huesler--Reiss Models — generate_random_model","text":"Generates random connected graph Gamma matrix conditional independence structure corresponding graph.","code":""},{"path":"/reference/generate_random_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random Huesler--Reiss Models — generate_random_model","text":"","code":"generate_random_model(d, graph_type = \"general\", ...)"},{"path":"/reference/generate_random_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random Huesler--Reiss Models — generate_random_model","text":"d Number vertices graph graph_type \"tree\", \"block\", \"decomposable\", \"complete\", \"general\" ... arguments passed functions generating graph Gamma matrix","code":""},{"path":[]},{"path":"/reference/generate_random_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random Huesler--Reiss Models — generate_random_model","text":"","code":"set.seed(1) d <- 12  generate_random_model(d, 'tree') #> $graph #> IGRAPH 71cc895 U--- 12 11 --  #> + edges from 71cc895: #>  [1] 1-- 7 1--12 2-- 3 3-- 8 3-- 9 4-- 5 4-- 6 6--10 7--10 7--11 9--10 #>  #> $Gamma #>            [,1]      [,2]      [,3]       [,4]       [,5]      [,6]      [,7] #>  [1,] 0.0000000 2.6720780 2.0022634 1.75490900 1.84728711 1.5147334 0.4817166 #>  [2,] 2.6720780 0.0000000 0.6698146 1.80053975 1.89291786 1.5603642 2.1903614 #>  [3,] 2.0022634 0.6698146 0.0000000 1.13072516 1.22310327 0.8905496 1.5205468 #>  [4,] 1.7549090 1.8005397 1.1307252 0.00000000 0.09237811 0.2401756 1.2731924 #>  [5,] 1.8472871 1.8929179 1.2231033 0.09237811 0.00000000 0.3325537 1.3655705 #>  [6,] 1.5147334 1.5603642 0.8905496 0.24017559 0.33255370 0.0000000 1.0330168 #>  [7,] 0.4817166 2.1903614 1.5205468 1.27319238 1.36557049 1.0330168 0.0000000 #>  [8,] 2.3459810 1.0135322 0.3437176 1.47444277 1.56682088 1.2342672 1.8642644 #>  [9,] 1.8552114 0.8168666 0.1470520 0.98367317 1.07605128 0.7434976 1.3734948 #> [10,] 1.3132236 1.3588544 0.6890398 0.44168538 0.53406349 0.2015098 0.8315070 #> [11,] 1.2638652 2.9725099 2.3026953 2.05534092 2.14771903 1.8151653 0.7821485 #> [12,] 1.0796174 3.7516954 3.0818808 2.83452640 2.92690451 2.5943508 1.5613340 #>            [,8]      [,9]     [,10]     [,11]    [,12] #>  [1,] 2.3459810 1.8552114 1.3132236 1.2638652 1.079617 #>  [2,] 1.0135322 0.8168666 1.3588544 2.9725099 3.751695 #>  [3,] 0.3437176 0.1470520 0.6890398 2.3026953 3.081881 #>  [4,] 1.4744428 0.9836732 0.4416854 2.0553409 2.834526 #>  [5,] 1.5668209 1.0760513 0.5340635 2.1477190 2.926905 #>  [6,] 1.2342672 0.7434976 0.2015098 1.8151653 2.594351 #>  [7,] 1.8642644 1.3734948 0.8315070 0.7821485 1.561334 #>  [8,] 0.0000000 0.4907696 1.0327574 2.6464129 3.425598 #>  [9,] 0.4907696 0.0000000 0.5419878 2.1556433 2.934829 #> [10,] 1.0327574 0.5419878 0.0000000 1.6136555 2.392841 #> [11,] 2.6464129 2.1556433 1.6136555 0.0000000 2.343483 #> [12,] 3.4255984 2.9348288 2.3928410 2.3434826 0.000000 #>  generate_random_model(d, 'block') #> $graph #> IGRAPH 6347768 U--- 12 21 --  #> + edges from 6347768: #>  [1]  1-- 2  2-- 3  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8  2-- 9  2--10  2--11 #> [11]  2--12  4-- 5  4-- 6  4-- 7  5-- 6  5-- 7  6-- 7  8-- 9  8--10  9--10 #> [21] 11--12 #>  #> $Gamma #>            [,1]       [,2]      [,3]       [,4]       [,5]      [,6]      [,7] #>  [1,] 0.0000000 0.66312320 1.0431529 1.05616480 1.05953800 0.9379824 0.8416377 #>  [2,] 0.6631232 0.00000000 0.3800297 0.39304160 0.39641480 0.2748592 0.1785145 #>  [3,] 1.0431529 0.38002970 0.0000000 0.77307130 0.77644449 0.6548889 0.5585442 #>  [4,] 1.0561648 0.39304160 0.7730713 0.00000000 0.06648054 0.4351744 0.2388959 #>  [5,] 1.0595380 0.39641480 0.7764445 0.06648054 0.00000000 0.5224760 0.2543835 #>  [6,] 0.9379824 0.27485922 0.6548889 0.43517445 0.52247603 0.0000000 0.1955791 #>  [7,] 0.8416377 0.17851450 0.5585442 0.23889590 0.25438349 0.1955791 0.0000000 #>  [8,] 0.9882473 0.32512411 0.7051538 0.71816571 0.72153891 0.5999833 0.5036386 #>  [9,] 1.2927417 0.62961846 1.0096482 1.02266005 1.02603325 0.9044777 0.8081330 #> [10,] 1.7371201 1.07399688 1.4540266 1.46703848 1.47041168 1.3488561 1.2525114 #> [11,] 0.6842724 0.02114922 0.4011789 0.41419081 0.41756401 0.2960084 0.1996637 #> [12,] 0.6894506 0.02632739 0.4063571 0.41936898 0.42274218 0.3011866 0.2048419 #>            [,8]      [,9]     [,10]      [,11]      [,12] #>  [1,] 0.9882473 1.2927417 1.7371201 0.68427242 0.68945059 #>  [2,] 0.3251241 0.6296185 1.0739969 0.02114922 0.02632739 #>  [3,] 0.7051538 1.0096482 1.4540266 0.40117892 0.40635709 #>  [4,] 0.7181657 1.0226601 1.4670385 0.41419081 0.41936898 #>  [5,] 0.7215389 1.0260333 1.4704117 0.41756401 0.42274218 #>  [6,] 0.5999833 0.9044777 1.3488561 0.29600844 0.30118661 #>  [7,] 0.5036386 0.8081330 1.2525114 0.19966372 0.20484189 #>  [8,] 0.0000000 0.2638163 0.9393278 0.34627333 0.35145150 #>  [9,] 0.2638163 0.0000000 0.6205046 0.65076767 0.65594584 #> [10,] 0.9393278 0.6205046 0.0000000 1.09514610 1.10032427 #> [11,] 0.3462733 0.6507677 1.0951461 0.00000000 0.05173694 #> [12,] 0.3514515 0.6559458 1.1003243 0.05173694 0.00000000 #>  generate_random_model(d, 'decomposable') #> $graph #> IGRAPH eb69df3 U--- 12 25 --  #> + edges from eb69df3: #>  [1]  1-- 2  1-- 3  1-- 4  2-- 3  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8  3-- 4 #> [11]  5-- 6  5-- 7  5-- 8  5-- 9  5--10  5--11  5--12  6-- 7  6-- 8  9--10 #> [21]  9--11  9--12 10--11 10--12 11--12 #>  #> $Gamma #>            [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>  [1,] 0.0000000 0.7642524 0.4113240 1.3614233 1.0419512 0.9419788 1.1521648 #>  [2,] 0.7642524 0.0000000 0.3023596 0.3445731 0.2776988 0.1777264 0.3879125 #>  [3,] 0.4113240 0.3023596 0.0000000 0.3856178 0.5800584 0.4800860 0.6902720 #>  [4,] 1.3614233 0.3445731 0.3856178 0.0000000 0.6222719 0.5222995 0.7324856 #>  [5,] 1.0419512 0.2776988 0.5800584 0.6222719 0.0000000 0.4014644 0.3728168 #>  [6,] 0.9419788 0.1777264 0.4800860 0.5222995 0.4014644 0.0000000 0.2380561 #>  [7,] 1.1521648 0.3879125 0.6902720 0.7324856 0.3728168 0.2380561 0.0000000 #>  [8,] 1.3806228 0.6163705 0.9187301 0.9609436 0.7102602 0.5832712 0.7425574 #>  [9,] 1.2745559 0.5103035 0.8126631 0.8548766 0.2326047 0.6340691 0.6054215 #> [10,] 1.2193632 0.4551108 0.7574704 0.7996839 0.1774120 0.5788764 0.5502288 #> [11,] 1.1542695 0.3900171 0.6923767 0.7345902 0.1123183 0.5137827 0.4851351 #> [12,] 1.1869615 0.4227091 0.7250687 0.7672822 0.1450103 0.5464747 0.5178271 #>            [,8]      [,9]      [,10]      [,11]     [,12] #>  [1,] 1.3806228 1.2745559 1.21936316 1.15426947 1.1869615 #>  [2,] 0.6163705 0.5103035 0.45511081 0.39001712 0.4227091 #>  [3,] 0.9187301 0.8126631 0.75747038 0.69237669 0.7250687 #>  [4,] 0.9609436 0.8548766 0.79968388 0.73459019 0.7672822 #>  [5,] 0.7102602 0.2326047 0.17741199 0.11231830 0.1450103 #>  [6,] 0.5832712 0.6340691 0.57887638 0.51378270 0.5464747 #>  [7,] 0.7425574 0.6054215 0.55022880 0.48513511 0.5178271 #>  [8,] 0.0000000 0.9428649 0.88767219 0.82257850 0.8552705 #>  [9,] 0.9428649 0.0000000 0.28971757 0.17883725 0.3184166 #> [10,] 0.8876722 0.2897176 0.00000000 0.09618224 0.2926910 #> [11,] 0.8225785 0.1788372 0.09618224 0.00000000 0.1896247 #> [12,] 0.8552705 0.3184166 0.29269096 0.18962473 0.0000000 #>  generate_random_model(d, 'general') #> $graph #> IGRAPH e73772e U--- 12 14 --  #> + edges from e73772e: #>  [1] 1-- 2 3-- 6 4-- 6 1-- 7 4-- 7 1-- 9 5-- 9 2--10 3--10 7--10 2--11 7--11 #> [13] 6--12 8--12 #>  #> $Gamma #>            [,1]      [,2]      [,3]      [,4]       [,5]      [,6]      [,7] #>  [1,] 0.0000000 0.3098242 0.5151284 0.6425519 1.58185823 0.7206350 0.1871033 #>  [2,] 0.3098242 0.0000000 0.4689128 0.6522880 1.89168244 0.7160302 0.2291397 #>  [3,] 0.5151284 0.4689128 0.0000000 0.5602815 2.09698659 0.5274192 0.3547164 #>  [4,] 0.6425519 0.6522880 0.5602815 0.0000000 2.22441010 0.2543482 0.4652176 #>  [5,] 1.5818582 1.8916824 2.0969866 2.2244101 0.00000000 2.3024933 1.7689616 #>  [6,] 0.7206350 0.7160302 0.5274192 0.2543482 2.30249326 0.0000000 0.5476381 #>  [7,] 0.1871033 0.2291397 0.3547164 0.4652176 1.76896157 0.5476381 0.0000000 #>  [8,] 2.4528655 2.4482606 2.2596496 1.9865786 4.03472368 1.7322304 2.2798685 #>  [9,] 1.4825351 1.7923593 1.9976635 2.1250870 0.09932311 2.2031701 1.6696385 #> [10,] 0.3353065 0.2770228 0.2191284 0.5287895 1.91716473 0.5601635 0.1785445 #> [11,] 0.2797845 0.2122884 0.4447439 0.5779304 1.86164269 0.6545364 0.1258087 #> [12,] 2.2949051 2.2903002 2.1016892 1.8286182 3.87676328 1.5742700 2.1219081 #>            [,8]       [,9]     [,10]     [,11]     [,12] #>  [1,] 2.4528655 1.48253511 0.3353065 0.2797845 2.2949051 #>  [2,] 2.4482606 1.79235933 0.2770228 0.2122884 2.2903002 #>  [3,] 2.2596496 1.99766347 0.2191284 0.4447439 2.1016892 #>  [4,] 1.9865786 2.12508699 0.5287895 0.5779304 1.8286182 #>  [5,] 4.0347237 0.09932311 1.9171647 1.8616427 3.8767633 #>  [6,] 1.7322304 2.20317014 0.5601635 0.6545364 1.5742700 #>  [7,] 2.2798685 1.66963846 0.1785445 0.1258087 2.1219081 #>  [8,] 0.0000000 3.93540056 2.2923939 2.3867669 0.1579604 #>  [9,] 3.9354006 0.00000000 1.8178416 1.7623196 3.7774402 #> [10,] 2.2923939 1.81784162 0.0000000 0.2636791 2.1344335 #> [11,] 2.3867669 1.76231958 0.2636791 0.0000000 2.2288065 #> [12,] 0.1579604 3.77744017 2.1344335 2.2288065 0.0000000 #>  generate_random_model(d, 'complete') #> $graph #> IGRAPH 8306326 U--- 12 66 -- Full graph #> + attr: name (g/c), loops (g/l) #> + edges from 8306326: #>  [1]  1-- 2  1-- 3  1-- 4  1-- 5  1-- 6  1-- 7  1-- 8  1-- 9  1--10  1--11 #> [11]  1--12  2-- 3  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8  2-- 9  2--10  2--11 #> [21]  2--12  3-- 4  3-- 5  3-- 6  3-- 7  3-- 8  3-- 9  3--10  3--11  3--12 #> [31]  4-- 5  4-- 6  4-- 7  4-- 8  4-- 9  4--10  4--11  4--12  5-- 6  5-- 7 #> [41]  5-- 8  5-- 9  5--10  5--11  5--12  6-- 7  6-- 8  6-- 9  6--10  6--11 #> [51]  6--12  7-- 8  7-- 9  7--10  7--11  7--12  8-- 9  8--10  8--11  8--12 #> [61]  9--10  9--11  9--12 10--11 10--12 11--12 #>  #> $Gamma #>           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>  [1,] 0.000000  1.826744 2.5198342 4.2667952  2.584708  5.583948  6.285138 #>  [2,] 1.826744  0.000000 6.4535179 9.1284751  2.252150 10.575238  9.529873 #>  [3,] 2.519834  6.453518 0.0000000 0.8056098  6.511059  2.296935  2.045383 #>  [4,] 4.266795  9.128475 0.8056098 0.0000000  8.103820  2.380367  1.898064 #>  [5,] 2.584708  2.252150 6.5110592 8.1038200  0.000000 13.214458  9.978888 #>  [6,] 5.583948 10.575238 2.2969349 2.3803671 13.214458  0.000000  4.101424 #>  [7,] 6.285138  9.529873 2.0453833 1.8980638  9.978888  4.101424  0.000000 #>  [8,] 3.799885  2.743182 6.5516513 8.0627895  1.132995 13.207905  8.282186 #>  [9,] 5.040655  3.130909 6.7864433 8.5146144  3.499823 12.735089  6.436607 #> [10,] 3.471922  2.554109 6.3456017 8.2200324  1.206106 13.336919  8.446862 #> [11,] 3.374544  7.616578 5.5408265 6.4150116  6.424110  7.346951 12.582113 #> [12,] 4.778869 10.076722 0.9297935 0.5136598  9.822322  1.585486  2.467000 #>             [,8]      [,9]      [,10]     [,11]      [,12] #>  [1,]  3.7998848  5.040655  3.4719215  3.374544  4.7788690 #>  [2,]  2.7431822  3.130909  2.5541085  7.616578 10.0767220 #>  [3,]  6.5516513  6.786443  6.3456017  5.540827  0.9297935 #>  [4,]  8.0627895  8.514614  8.2200324  6.415012  0.5136598 #>  [5,]  1.1329952  3.499823  1.2061061  6.424110  9.8223223 #>  [6,] 13.2079046 12.735089 13.3369185  7.346951  1.5854857 #>  [7,]  8.2821860  6.436607  8.4468624 12.582113  2.4669998 #>  [8,]  0.0000000  1.394137  0.6724853  9.366593  9.4847246 #>  [9,]  1.3941372  0.000000  1.5509688 13.775335  9.8140262 #> [10,]  0.6724853  1.550969  0.0000000  9.343888  9.5150467 #> [11,]  9.3665933 13.775335  9.3438880  0.000000  6.4286236 #> [12,]  9.4847246  9.814026  9.5150467  6.428624  0.0000000 #>"},{"path":"/reference/generate_random_spd_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","title":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","text":"Generates random \\(d \\times d\\) symmetric positive definite matrix. done generating random \\(d \\times d\\) matrix B, computing B %*% t(B), normalizing matrix approximately single digit entries.","code":""},{"path":"/reference/generate_random_spd_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","text":"","code":"generate_random_spd_matrix(d, bMin = -10, bMax = 10, ...)"},{"path":"/reference/generate_random_spd_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","text":"d Number rows/columns bMin Minimum value entries B bMax Maximum value entries B ... Ignored, allowed compatibility","code":""},{"path":[]},{"path":"/reference/generate_random_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random tree — generate_random_tree","title":"Generate a random tree — generate_random_tree","text":"Generates random tree random Pruefer sequence","code":""},{"path":"/reference/generate_random_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random tree — generate_random_tree","text":"","code":"generate_random_tree(d)"},{"path":"/reference/generate_random_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random tree — generate_random_tree","text":"d Number vertices graph","code":""},{"path":"/reference/generate_random_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random tree — generate_random_tree","text":"[igraph::graph] object","code":""},{"path":[]},{"path":"/reference/getSubMatrixForSubgraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the submatrix corresponding to a subgraph — getSubMatrixForSubgraph","title":"Get the submatrix corresponding to a subgraph — getSubMatrixForSubgraph","text":"graph subgraph need persistent IDs graph==NULL assumed pIDs 1, 2, ...","code":""},{"path":"/reference/getSubMatrixForSubgraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the submatrix corresponding to a subgraph — getSubMatrixForSubgraph","text":"","code":"getSubMatrixForSubgraph(fullMatrix, subgraph, graph = NULL)"},{"path":"/reference/get_cliques_and_separators.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cliques and Separators of a graph — get_cliques_and_separators","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"Finds cliques, separators, (recursively) separators separators graph.","code":""},{"path":"/reference/get_cliques_and_separators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"","code":"get_cliques_and_separators(   graph,   sortIntoLayers = FALSE,   includeSingletons = FALSE )"},{"path":"/reference/get_cliques_and_separators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"graph [igraph::graph] object","code":""},{"path":"/reference/get_cliques_and_separators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"list vertex sets represent cliques (recursive) separators graph, ordered separators come cliques separate.","code":""},{"path":"/reference/get_cliques_and_separators_OLD.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","title":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","text":"Finds cliques, separators, (recursively) separators separators graph.","code":""},{"path":"/reference/get_cliques_and_separators_OLD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","text":"","code":"get_cliques_and_separators_OLD(graph)"},{"path":"/reference/get_cliques_and_separators_OLD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","text":"graph [igraph::graph] object","code":""},{"path":"/reference/get_cliques_and_separators_OLD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cliques and Separators of a graph — get_cliques_and_separators_OLD","text":"list vertex sets represent cliques (recursive) separators graph","code":""},{"path":"/reference/get_mc_cores.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of cores to be used in parallel computations — get_mc_cores","title":"Number of cores to be used in parallel computations — get_mc_cores","text":"Helper function returns number cores used parallel computations. always 1 windows. systems, value can set using setOption('graphicalExtremes.mc.cores', ...).","code":""},{"path":"/reference/get_mc_cores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of cores to be used in parallel computations — get_mc_cores","text":"","code":"get_mc_cores(overwrite = NULL)"},{"path":"/reference/get_mc_cores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of cores to be used in parallel computations — get_mc_cores","text":"overwrite Use value (valid windows)","code":""},{"path":"/reference/get_mc_cores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of cores to be used in parallel computations — get_mc_cores","text":"integer used number cores","code":""},{"path":[]},{"path":"/reference/get_tol.html","id":null,"dir":"Reference","previous_headings":"","what":"Tolerances to be used in computations — get_small_tol","title":"Tolerances to be used in computations — get_small_tol","text":"Helper function returns tolerance used internal computations.","code":""},{"path":"/reference/get_tol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tolerances to be used in computations — get_small_tol","text":"","code":"get_small_tol(overwrite = NULL)  get_large_tol(overwrite = NULL)"},{"path":"/reference/get_tol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tolerances to be used in computations — get_small_tol","text":"overwrite NULL numeric scalar. specified, use value instead option value.","code":""},{"path":"/reference/get_tol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tolerances to be used in computations — get_small_tol","text":"non-negative numerical scalar","code":""},{"path":"/reference/get_tol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tolerances to be used in computations — get_small_tol","text":"two different tolerances used package, details see graphicalExtremes-package. default values tolerances can set using options \"graphicalExtremes.tol.small\" \"graphicalExtremes.tol.large\".","code":""},{"path":[]},{"path":"/reference/graphicalExtremes.html","id":null,"dir":"Reference","previous_headings":"","what":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"implementation statistical methodology paper Engelke Hitz (2020)  sparse multivariate extreme value models. Includes exact simulation algorithms statistical inference methods multivariate Pareto distributions graphical structures. Also contains implementations statistical methods Engelke Volgushev (2022) , Röttger et al. (2021) , Hentschel et al. (2022) .","code":""},{"path":"/reference/graphicalExtremes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"following global options used functions package. values can changed using base::options(). \"graphicalExtremes.mc.cores\" (maximal) number cores use parallel tasks. always overwritten 1 windows. \"graphicalExtremes.tol.small\" \"small\" tolerance used internal computations values mathematically exactly equal zero, deviate due inherent limitations numerical computations. value used e.g. checking matrices symmetry definiteness. general, value used \"permissive\" tolerance, sense value positive, compared actual zero, zero, absolute value compared tolerance. \"graphicalExtremes.tol.small\" \"large\" tolerance used values converge zero, mathematically supposed equal zero. value used e.g. converting precision matrix \\(\\Theta\\) adjacency matrix graph.","code":""},{"path":"/reference/graphicalExtremes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932. Engelke S, Volgushev S (2022). “Structure learning extremal tree models.” J. R. Stat. Soc. Ser. B Stat. Methodol.. doi:10.1111/rssb.12556 , Forthcoming, https://rss.onlinelibrary.wiley.com/doi/pdf/10.1111/rssb.12556. Hentschel M, Engelke S, Segers J (2022). “Statistical Inference Hüsler-Reiss Graphical Models Matrix Completions.” doi:10.48550/ARXIV.2210.14292 , https://arxiv.org/abs/2210.14292. Röttger F, Engelke S, Zwiernik P (2021). “Total positivity multivariate extremes.” doi:10.48550/ARXIV.2112.14727 , https://arxiv.org/abs/2112.14727.","code":""},{"path":[]},{"path":"/reference/graphicalExtremes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"Maintainer: Sebastian Engelke sebastian.engelke@unige.ch Authors: Adrien S. Hitz Nicola Gnecco Manuel Hentschel","code":""},{"path":"/reference/graphs_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph equality — graphs_equal","title":"Graph equality — graphs_equal","text":"Produce true two graphs vertices edges (labelled)","code":""},{"path":"/reference/graphs_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph equality — graphs_equal","text":"","code":"graphs_equal(g1, g2)"},{"path":"/reference/graphs_equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph equality — graphs_equal","text":"g1 igraph::graph g2 igraph::graph","code":""},{"path":"/reference/graphs_equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph equality — graphs_equal","text":"logical indicating graphs equal","code":""},{"path":"/reference/logLH_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Full censored log-likelihood of HR model — logLH_HR","title":"Full censored log-likelihood of HR model — logLH_HR","text":"Computes full (censored) log-likelihood HR model.","code":""},{"path":"/reference/logLH_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full censored log-likelihood of HR model — logLH_HR","text":"","code":"logLH_HR(data, Gamma, cens = FALSE)"},{"path":"/reference/logLH_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full censored log-likelihood of HR model — logLH_HR","text":"data Numeric \\(n \\times d\\) matrix, containing observations following multivariate HR Pareto distribution. Gamma Numeric \\(d \\times d\\) matrix, representing variogram matrix \\(\\Gamma\\). cens Boolean. true, censored log-likelihood computed. default, cens = FALSE.","code":""},{"path":"/reference/logLH_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full censored log-likelihood of HR model — logLH_HR","text":"Numeric. full censored log-likelihood HR model.","code":""},{"path":"/reference/logdVK_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute censored exponent measure — logdVK_HR","title":"Compute censored exponent measure — logdVK_HR","text":"Computes (censored) exponent measure density HR distribution.","code":""},{"path":"/reference/logdVK_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute censored exponent measure — logdVK_HR","text":"","code":"logdVK_HR(x, K, Gamma)"},{"path":"/reference/logdVK_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute censored exponent measure — logdVK_HR","text":"x Numeric vector d positive elements censored exponent measure evaluated. K Integer vector, subset 1, ..., d, index set censored. logical vector length d, indicating entries censored. Gamma d x d variogram matrix numeric vector d(d-1)/2 elements, containing upper triangular part variogram matrix.","code":""},{"path":"/reference/logdVK_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute censored exponent measure — logdVK_HR","text":"Numeric. censored exponent measure HR distribution. entries censored, result logdV_HR(x, par returned.","code":""},{"path":"/reference/logdV_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the exponent measure density of HR distribution — logdV_HR","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"Computes exponent measure density HR distribution.","code":""},{"path":"/reference/logdV_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"","code":"logdV_HR(x, Gamma = NULL, Theta = NULL)"},{"path":"/reference/logdV_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"x Numeric \\(n \\times d\\) matrix vector d elements. Gamma d x d variogram matrix numeric vector d(d-1)/2 elements, containing upper triangular part variogram matrix. Theta d x d precision matrix numeric vector d(d-1)/2 elements, containing upper triangular part precision matrix.","code":""},{"path":"/reference/logdV_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"Numeric. censored exponent measure HR distribution.","code":""},{"path":"/reference/logdV_HR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"Gamma Theta needed internally, one missing computed one.","code":""},{"path":"/reference/loglik_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","title":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"Computes (censored) Huesler--Reiss log-likelihood, AIC, BIC values.","code":""},{"path":"/reference/loglik_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"","code":"loglik_HR(data, p = NULL, graph = NULL, Gamma, cens = FALSE)"},{"path":"/reference/loglik_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"data Numeric \\(n \\times d\\) matrix. contains observations following multivariate HR Pareto distribution. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto() standardize data. graph [igraph::graph] object NULL. graph must undirected connected. graph specified, complete graph used. Gamma Numeric \\(n \\times d\\) matrix. represents variogram matrix \\(\\Gamma\\). cens Boolean. true, censored log-likelihood computed. default, cens = FALSE.","code":""},{"path":"/reference/loglik_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"Numeric vector c(\"loglik\"=..., \"aic\"=..., \"bic\"=...) evaluated log-likelihood, AIC, BIC values.","code":""},{"path":"/reference/make_sep_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of separators — make_sep_list","title":"Create a list of separators — make_sep_list","text":"Creates list separator set, every pair non-adjacent vertices graph completely disconnected removal (least) one separator sets graph.","code":""},{"path":"/reference/make_sep_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of separators — make_sep_list","text":"","code":"make_sep_list(graph, details = TRUE)"},{"path":"/reference/make_sep_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of separators — make_sep_list","text":"graph graph details Return detailed infos (default TRUE)","code":""},{"path":"/reference/make_sep_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of separators — make_sep_list","text":"list numeric vectors","code":""},{"path":"/reference/mparetomargins.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginalize multivariate Pareto dataset — mparetomargins","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"Marginalize multivariate Pareto dataset data respect variables set_indices.","code":""},{"path":"/reference/mparetomargins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"","code":"mparetomargins(data, set_indices)"},{"path":"/reference/mparetomargins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"data Numeric \\(n \\times d\\) matrix. dataset containing observations following multivariate Pareto distribution. set_indices Numeric vector d different elements 1, ..., d. variables respect marginalize multivariate distribution.","code":""},{"path":"/reference/mparetomargins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"Numeric \\(n \\times m\\) matrix, m length set_indices. Marginalized multivariate Pareto data.","code":""},{"path":"/reference/order_cliques.html","id":null,"dir":"Reference","previous_headings":"","what":"Order Cliques — order_cliques","title":"Order Cliques — order_cliques","text":"Orders cliques connected decomposable graph fulfill running intersection property.","code":""},{"path":"/reference/order_cliques.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order Cliques — order_cliques","text":"","code":"order_cliques(cliques)"},{"path":"/reference/par2Matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Gamma or Theta from vector — par2Matrix","title":"Create Gamma or Theta from vector — par2Matrix","text":"function takes parameters vector par (upper triangular Gamma/Theta matrix) returns full Gamma/Theta.","code":""},{"path":"/reference/par2Matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Gamma or Theta from vector — par2Matrix","text":"","code":"par2Matrix(par, allowMatrix = FALSE, allowNull = FALSE, zeroRowSums = FALSE)  par2Gamma(par, allowMatrix = FALSE, allowNull = FALSE)  par2Theta(par, allowMatrix = FALSE, allowNull = FALSE)"},{"path":"/reference/par2Matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Gamma or Theta from vector — par2Matrix","text":"par Numeric vector d elements. Upper triangular part Gamma/Theta matrix. allowMatrix TRUE par already matrix, return . allowNull TRUE par NULL, return NULL. zeroRowSums TRUE diagonal set (-1) times rowSums.","code":""},{"path":"/reference/par2Matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Gamma or Theta from vector — par2Matrix","text":"Numeric matrix \\(d \\times d\\). Full Gamma/Theta matrix.","code":""},{"path":"/reference/parToMatricesFactory.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory: parToMatrices — parToMatricesFactory","title":"Factory: parToMatrices — parToMatricesFactory","text":"Creates helper function convert parameter vector par Gamma /Theta matrix.","code":""},{"path":"/reference/parToMatricesFactory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory: parToMatrices — parToMatricesFactory","text":"","code":"parToMatricesFactory(   graph,   init = NULL,   fixParams = integer(0),   parIsTheta = FALSE,   checkValidity = TRUE )"},{"path":"/reference/parToMatricesFactory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory: parToMatrices — parToMatricesFactory","text":"graph par represents entries corresponding edges graph. init values used fixed parameters fixParams indices (logical numeric) fixed parameters full parameter vector. parIsTheta TRUE par represents entries Theta (otherwise Gamma) checkValidity Whether check implied Gamma/Theta valid parameter matrix.","code":""},{"path":"/reference/parToMatricesFactory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory: parToMatrices — parToMatricesFactory","text":"function parToMatrices(par, forceGamma=FALSE, forceTheta=FALSE), takes parameter vector returns either NULL list entries Gamma, Theta. function returns NULL checkValidity==TRUE par implies invalid matrix. Otherwise, depending parIsTheta, forceTheta, forceGamma, one Gamma Theta matrices implied par.","code":""},{"path":"/reference/partialMatrixToGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of a partial matrix to a graph — partialMatrixToGraph","title":"Transformation of a partial matrix to a graph — partialMatrixToGraph","text":"Creates graph edges entries corresponding non-NA entries Gamma.","code":""},{"path":"/reference/partialMatrixToGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of a partial matrix to a graph — partialMatrixToGraph","text":"","code":"partialMatrixToGraph(Matrix)"},{"path":"/reference/partialMatrixToGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of a partial matrix to a graph — partialMatrixToGraph","text":"Matrix matrix NA entries","code":""},{"path":"/reference/partialMatrixToGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of a partial matrix to a graph — partialMatrixToGraph","text":"igraph::graph object","code":""},{"path":"/reference/plotFlights.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot flight data — plotFlights","title":"Plot flight data — plotFlights","text":"Plotting function visualize flight connections flights dataset. function requires package ggplot2 installed.","code":""},{"path":"/reference/plotFlights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot flight data — plotFlights","text":"","code":"plotFlights(   airportIndices = NULL,   airports_sel = NULL,   connections_sel = NULL,   graph = NULL,   plotAirports = TRUE,   plotConnections = TRUE,   returnGGPlot = FALSE,   useAirportNFlights = FALSE,   useConnectionNFlights = FALSE,   minNFlights = 0,   map = \"state\",   vertexColors = NULL,   vertexShapes = NULL,   xyRatio = NULL,   clipMap = FALSE,   useLatex = FALSE,   edgeAlpha = 0.2 )"},{"path":"/reference/plotFlights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot flight data — plotFlights","text":"airportIndices indices airports (w.r.t. airports_sel) include. airports_sel airports plot. Might subset arguments airportIndeices, graph. NULL, flights$aiports used. connections_sel three columns data frame output flightCountMatrixToConnectionList(). NULL, flights$nFlights used construct one. graph optional igraph::graph object, containing flight graph plot. Vertices either match selected airports number order, named corresponding IATA codes airports represent. plotAirports Logical. Whether plot airports specified. plotConnections Logical. Whether plot connections specified. returnGGPlot TRUE, ggplot2::ggplot object returned plotted immediately. useAirportNFlights Logical. Whether vary size circles representing airports plot, according number flights airport. useConnectionNFlights Logical. Whether vary size edges representing connections plot, according number flights connection. minNFlights Numeric scalar. plot connections least many flights. map String NULL. map use background image. passed ggplot2::map_data(). vertexColors Optional vector, named IATA codes, used colors vertices/airports. vertexShapes Optional vector, named IATA codes, used shapes vertices/airports. coerced character. xyRatio Approximate X-Y-ratio (w.r.t. distance ground) area shown plot. clipMap Logical numeric scalar. Whether ignore map image determining axis limits plot. positive scalar, plot limits extended factor. useLatex Whether format numbers etc. latex code (useful plotting tikz). edgeAlpha Numeric scalar 0 1. alpha value used plotting edges/connections.","code":""},{"path":"/reference/plotFlights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot flight data — plotFlights","text":"returnGGPlot TRUE, ggplot2::ggplot object, otherwise NULL.","code":""},{"path":"/reference/plotFlights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot flight data — plotFlights","text":"","code":"# Plot all airports in the dataset plotFlights(plotConnections = FALSE, map = 'world') #> Loading required namespace: ggplot2   # Plot a selection of airports plotFlights(c('JFK', 'SFO', 'LAX'), useConnectionNFlights = TRUE, useAirportNFlights = TRUE)   # Plot airports with a custom connections graph IATAs <- c('ACV', 'BFL', 'EUG', 'SFO', 'MRY') graph <- igraph::make_full_graph(length(IATAs)) plotFlights(IATAs, graph=graph, clipMap = 1.5)"},{"path":"/reference/rmpareto.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate Pareto distribution — rmpareto","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"Simulates exact samples multivariate Pareto distribution.","code":""},{"path":"/reference/rmpareto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"","code":"rmpareto(n, model = c(\"HR\", \"logistic\", \"neglogistic\", \"dirichlet\"), d, par)"},{"path":"/reference/rmpareto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"n Number simulations. model parametric model type; one : HR (default), logistic, neglogistic, dirichlet. d Dimension multivariate Pareto distribution. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, model = HR. \\(\\theta \\(0, 1)\\), model = logistic. \\(\\theta > 0\\), model = neglogistic. \\(\\alpha\\), numeric vector size d positive entries, model = dirichlet.","code":""},{"path":"/reference/rmpareto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"Numeric \\(n \\times d\\) matrix simulations multivariate Pareto distribution.","code":""},{"path":"/reference/rmpareto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"simulation follows algorithm Engelke Hitz (2020) . details parameters Huesler--Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmpareto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"Coles SG, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317. Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/rmpareto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"","code":"## A 4-dimensional HR distribution n <- 10 d <- 4 G <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  rmpareto(n, \"HR\", d = d, par = G) #>             [,1]       [,2]       [,3]       [,4] #>  [1,] 16.3548939 51.8914647 26.5360057 11.9100801 #>  [2,] 20.9130951 32.0792224  7.2794536  5.6055372 #>  [3,]  1.2241391  0.3447070  0.7496115  0.2745461 #>  [4,]  0.7394802  0.4819105  2.1271742  0.3886519 #>  [5,]  1.0288000  0.6176337  4.4626858  3.2288565 #>  [6,]  4.3463725  2.2569587  1.5039667  0.4394725 #>  [7,]  0.3639499  0.5788987  0.1448434  1.0622063 #>  [8,]  0.2240812  0.7406062  1.6868892  1.0045579 #>  [9,]  2.5227895  2.7013269  1.2707881  6.1357386 #> [10,]  5.0506833  0.6972832  2.9392381  0.7087562  ## A 3-dimensional logistic distribution n <- 10 d <- 3 theta <- .6 rmpareto(n, \"logistic\", d, par = theta) #>              [,1]       [,2]       [,3] #>  [1,]  0.05348099 1.43118239 0.05389678 #>  [2,]  0.01689916 0.01781006 1.99043774 #>  [3,]  6.44522829 3.84192615 4.75185297 #>  [4,] 11.15086927 0.16993262 0.24024980 #>  [5,]  2.25358425 4.15025057 0.98266205 #>  [6,]  0.79767190 1.01037069 0.22238741 #>  [7,]  2.78516354 0.21910546 1.20811417 #>  [8,]  0.04791265 0.10796482 1.68464391 #>  [9,]  0.30041421 0.34682216 3.42222481 #> [10,]  1.07739392 1.31927799 3.78082996  ## A 5-dimensional negative logistic distribution n <- 10 d <- 5 theta <- 1.5 rmpareto(n, \"neglogistic\", d, par = theta) #>            [,1]       [,2]      [,3]      [,4]       [,5] #>  [1,] 0.9134682  0.4193091 0.7498344 1.7362368 0.08409103 #>  [2,] 0.7208462  3.3963208 1.7810699 0.3657981 2.16306778 #>  [3,] 1.3045793  2.5554570 0.5059166 1.9259453 1.72207737 #>  [4,] 0.2339351  0.4125991 0.8470116 1.2650381 0.42853321 #>  [5,] 0.2743498  1.2312591 0.5132162 0.4067593 0.07696845 #>  [6,] 1.1723923 15.6433440 2.5125949 4.3020861 1.53768302 #>  [7,] 0.2016467  0.8811418 1.5944097 0.9142069 0.75295434 #>  [8,] 1.1345907 13.6006050 7.5408809 1.6431343 0.70043126 #>  [9,] 1.3882851  1.3071895 0.1377822 0.7802426 0.35501419 #> [10,] 0.7799429  1.2795155 1.3238882 4.6093305 1.16572037  ## A 4-dimensional Dirichlet distribution n <- 10 d <- 4 alpha <- c(.8, 1, .5, 2) rmpareto(n, \"dirichlet\", d, par = alpha) #>             [,1]      [,2]       [,3]      [,4] #>  [1,] 0.57371501 1.2714518 0.05502085 0.4254865 #>  [2,] 0.27543374 1.1791533 0.71491748 0.1394769 #>  [3,] 0.18748175 1.0704765 0.20897389 0.2447078 #>  [4,] 0.03798897 0.5333116 0.77020255 1.0527140 #>  [5,] 5.90239676 7.4359643 3.69547405 9.2465348 #>  [6,] 1.64891085 0.7637040 0.73301231 2.4138431 #>  [7,] 0.22732093 4.1917728 0.31475693 1.2420307 #>  [8,] 0.55205514 0.3883455 1.07991041 0.2559198 #>  [9,] 0.40841575 0.3063875 0.73968876 1.0118474 #> [10,] 0.05650611 0.9281560 1.79495680 0.5093663"},{"path":"/reference/rmpareto_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"Simulates exact samples multivariate Pareto distribution extremal graphical model tree defined Engelke Hitz (2020) .","code":""},{"path":"/reference/rmpareto_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"","code":"rmpareto_tree(n, model = c(\"HR\", \"logistic\", \"dirichlet\")[1], tree, par)"},{"path":"/reference/rmpareto_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"n Number simulations. model parametric model type; one : HR (default), logistic, dirichlet. tree Graph object igraph package. object must tree, .e., undirected graph connected cycles. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, entries corresponding edges tree used, model = HR. Alternatively, can vector length d-1 containing entries variogram corresponding edges given tree. \\(\\theta \\(0, 1)\\), vector length d-1 containing logistic parameters corresponding edges given tree, model = logistic. matrix size \\((d - 1) \\times 2\\), rows contain parameters vectors \\(\\alpha\\) size 2 positve entries edges tree, model = dirichlet.","code":""},{"path":"/reference/rmpareto_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"Numeric \\(n \\times d\\) matrix simulations multivariate Pareto distribution.","code":""},{"path":"/reference/rmpareto_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"simulation follows algorithm Engelke Hitz (2020) . details parameters Huesler--Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmpareto_tree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"Coles SG, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317. Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/rmpareto_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"","code":"## A 4-dimensional HR tree model  my_tree <- igraph::graph_from_adjacency_matrix(rbind(   c(0, 1, 0, 0),   c(1, 0, 1, 1),   c(0, 1, 0, 0),   c(0, 1, 0, 0) ), mode = \"undirected\" ) n <- 10 Gamma_vec <- c(.5, 1.4, .8) set.seed(123) rmpareto_tree(n, \"HR\", tree = my_tree, par = Gamma_vec) #>             [,1]      [,2]      [,3]      [,4] #>  [1,] 2.84253613 1.0005391 0.3084607 0.4418211 #>  [2,] 2.47736524 1.3292869 1.2637143 1.2880978 #>  [3,] 0.06591181 0.2870575 1.0531443 0.3019635 #>  [4,] 7.55377972 9.1991979 5.8316487 3.9821044 #>  [5,] 3.04152555 1.7000302 6.6294011 0.4891234 #>  [6,] 1.06779693 0.2294188 0.2181644 0.1903021 #>  [7,] 0.21873177 0.3305197 0.1273843 1.0729052 #>  [8,] 0.42635241 0.3883451 1.0709708 0.2981210 #>  [9,] 0.10432605 0.2854805 1.0420470 0.1541613 #> [10,] 0.60313584 0.4771446 1.4032066 0.0989642  ## A 4-dimensional Dirichlet model with asymmetric edge distributions  alpha <- cbind(c(.2, 1, .5), c(1.5, .6, .8)) rmpareto_tree(n, model = \"dirichlet\", tree = my_tree, par = alpha) #>               [,1]        [,2]         [,3]        [,4] #>  [1,] 5.762897e-04  7.58402408 12.509319036 0.157712818 #>  [2,] 3.533313e-02  0.06507584  0.002406825 1.997241878 #>  [3,] 3.282715e+00  0.91728177  0.431414007 0.010582074 #>  [4,] 1.000012e+00  0.10685203  0.125698592 0.005096915 #>  [5,] 5.247710e-07  1.59205151  0.335459093 3.595989200 #>  [6,] 9.668793e-03 15.03385028  0.927124706 5.745471227 #>  [7,] 1.534824e+00  0.09823805  0.034636347 1.393518517 #>  [8,] 3.906524e+00  0.30175547  0.770171700 0.045366892 #>  [9,] 5.232992e+00  0.81597984  0.509299749 0.590041154 #> [10,] 1.029222e-01  1.07372668  2.867594928 0.584238945"},{"path":"/reference/rmstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate max-stable distribution — rmstable","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"Simulates exact samples multivariate max-stable distribution.","code":""},{"path":"/reference/rmstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"","code":"rmstable(n, model = c(\"HR\", \"logistic\", \"neglogistic\", \"dirichlet\")[1], d, par)"},{"path":"/reference/rmstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"n Number simulations. model parametric model type; one : HR (default), logistic, neglogistic, dirichlet. d Dimension multivariate Pareto distribution. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, model = HR. \\(\\theta \\(0, 1)\\), model = logistic. \\(\\theta > 0\\), model = neglogistic. \\(\\alpha\\), numeric vector size d positive entries, model = dirichlet.","code":""},{"path":"/reference/rmstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"Numeric \\(n \\times d\\) matrix simulations multivariate max-stable distribution.","code":""},{"path":"/reference/rmstable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"simulation follows extremal function algorithm Dombry et al. (2016) . details parameters Huesler--Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmstable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"Coles SG, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317.","code":""},{"path":"/reference/rmstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"","code":"## A 4-dimensional HR distribution n <- 10 d <- 4 G <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  rmstable(n, \"HR\", d = d, par = G) #>             [,1]       [,2]       [,3]       [,4] #>  [1,]  0.9129700  2.7320869  4.3930684  2.0396394 #>  [2,]  0.2666331  0.7563013  1.6998662  0.7642649 #>  [3,]  1.4469430  3.2588614  0.6616103  0.9099434 #>  [4,]  0.4459274  1.6260210  0.6936030  1.0758879 #>  [5,]  0.4388372  0.7088128  0.4051627  0.5354991 #>  [6,]  0.5635592  0.6925003  2.5880064  0.4623138 #>  [7,]  1.6316665  1.2772479  2.3119953  6.8583689 #>  [8,] 25.5877634  9.4518333 30.2610583 11.8954021 #>  [9,]  9.1793281  9.6263068  7.7595231 18.7535580 #> [10,] 23.4589286 30.4513683 27.9736059 12.6065325  ## A 3-dimensional logistic distribution n <- 10 d <- 3 theta <- .6 rmstable(n, \"logistic\", d, par = theta) #>            [,1]       [,2]      [,3] #>  [1,] 0.7920967  0.3838593 0.5446596 #>  [2,] 0.4762412  1.7332709 1.3834479 #>  [3,] 1.3370597  0.2851836 4.0607764 #>  [4,] 0.7421880  1.8327530 2.2199731 #>  [5,] 1.9280030 10.7751455 1.5144490 #>  [6,] 1.2808886  0.8044145 0.8670885 #>  [7,] 1.2840544  0.7799514 5.0934757 #>  [8,] 0.5676049  0.3633312 0.3426581 #>  [9,] 0.2693890  0.3870772 0.4698337 #> [10,] 1.0291076  0.4829797 1.6501069  ## A 5-dimensional negative logistic distribution n <- 10 d <- 5 theta <- 1.5 rmstable(n, \"neglogistic\", d, par = theta) #>             [,1]       [,2]       [,3]       [,4]       [,5] #>  [1,]  7.6648654 12.7130188  5.1404650 29.9312790  6.7218769 #>  [2,]  0.6997510  0.7048263  1.2611360  0.8094214  0.5227736 #>  [3,] 23.7136939  1.8638248  7.7195594  8.6375029 18.3126055 #>  [4,]  1.1596061  0.9826885  1.1413147  1.3009600  0.4160243 #>  [5,]  1.3697433  0.6338478  0.7218860  1.4924707  0.9762449 #>  [6,]  2.2482129  2.8355838  1.4315486  4.9443567  1.6710074 #>  [7,] 16.7420023 15.0632920 12.9267446 20.3789551 28.2010827 #>  [8,]  0.4362455  0.3568023  0.3109209  0.9655873  0.3155885 #>  [9,]  0.8675428  0.6111543  0.4107973  0.8449127  0.6456791 #> [10,]  3.8236338  3.0036666  4.5845912  1.6076321  2.4079347  ## A 4-dimensional Dirichlet distribution n <- 10 d <- 4 alpha <- c(.8, 1, .5, 2) rmstable(n, \"dirichlet\", d, par = alpha) #>            [,1]      [,2]      [,3]      [,4] #>  [1,] 1.8895508 0.7655561 1.2157059 2.1661873 #>  [2,] 0.7099777 1.8470676 3.6166997 0.7038762 #>  [3,] 3.0723931 0.4386526 0.9849517 0.7825669 #>  [4,] 0.5039515 0.4160592 0.9417922 2.8132326 #>  [5,] 8.8648594 2.9460901 7.5495707 6.8022550 #>  [6,] 2.8973698 4.9357845 2.1741180 4.9137229 #>  [7,] 1.5847216 6.1903019 3.3346973 1.8198441 #>  [8,] 0.2975653 1.2948784 1.5564330 2.1926874 #>  [9,] 1.3155831 0.5673063 0.4437899 1.0480459 #> [10,] 1.7603035 5.4723088 1.5448006 4.8258270"},{"path":"/reference/rmstable_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"Simulates exact samples multivariate max-stable distribution extremal graphical model tree defined Engelke Hitz (2020) .","code":""},{"path":"/reference/rmstable_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"","code":"rmstable_tree(n, model = c(\"HR\", \"logistic\", \"dirichlet\")[1], tree, par)"},{"path":"/reference/rmstable_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"n Number simulations. model parametric model type; one : HR (default), logistic, dirichlet. tree Graph object igraph package. object must tree, .e., undirected graph connected cycles. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, entries corresponding edges tree used, model = HR. Alternatively, can vector length d-1 containing entries variogram corresponding edges given tree. \\(\\theta \\(0, 1)\\), vector length d-1 containing logistic parameters corresponding edges given tree, model = logistic. matrix size \\((d - 1) \\times 2\\), rows contain parameter vectors \\(\\alpha\\) size 2 positve entries edges tree, model = dirichlet.","code":""},{"path":"/reference/rmstable_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"Numeric \\(n \\times d\\) matrix simulations multivariate max-stable distribution.","code":""},{"path":"/reference/rmstable_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"simulation follows combination extremal function algorithm Dombry et al. (2016)  theory Engelke Hitz (2020)  sample single extremal function. details parameters Huesler--Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmstable_tree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"Coles SG, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317. Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/rmstable_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"","code":"## A 4-dimensional HR tree model  my_tree <- igraph::graph_from_adjacency_matrix(rbind(   c(0, 1, 0, 0),   c(1, 0, 1, 1),   c(0, 1, 0, 0),   c(0, 1, 0, 0) ), mode = \"undirected\" ) n <- 10 Gamma_vec <- c(.5, 1.4, .8) rmstable_tree(n, \"HR\", tree = my_tree, par = Gamma_vec) #>             [,1]        [,2]        [,3]        [,4] #>  [1,] 11.4926835   6.2692985   7.2692681   7.3656059 #>  [2,]  0.4240365   0.8814177   2.1049743   0.5471967 #>  [3,]  2.0693665   3.8310442   0.8515348   1.8757676 #>  [4,]  0.5332370   0.3338001   1.1440102   0.2431660 #>  [5,]  0.9622793   0.3529766   0.6154679   0.6122024 #>  [6,]  3.6110854   2.0049875   3.5542388   0.7321436 #>  [7,]  2.0810677   1.6376026   1.2619098   1.5633647 #>  [8,]  0.6077383   0.3588807   0.7824510   0.5408133 #>  [9,] 41.5770869 355.9902771 225.9689381 510.2973482 #> [10,]  3.0393533   1.5666653   2.4999867   5.7565452  ## A 4-dimensional Dirichlet model with asymmetric edge distributions  alpha <- cbind(c(.2, 1, .5), c(1.5, .6, .8)) rmstable_tree(n, model = \"dirichlet\", tree = my_tree, par = alpha) #>             [,1]       [,2]       [,3]       [,4] #>  [1,]  7.6875162 57.5437511  4.2553267  2.1829200 #>  [2,]  0.4213234  5.1944645  0.8254621  0.9480425 #>  [3,]  0.6316744  0.4647958  0.3077491  0.9783213 #>  [4,]  1.8720697 36.3060340 54.3817655 19.8613889 #>  [5,] 15.2347659  3.2621610  4.4430843  5.1449147 #>  [6,]  2.4624789  1.9151092  0.8660182  3.4762745 #>  [7,]  3.0352577  3.1889870  1.8856030  3.3643334 #>  [8,]  0.5431711  0.4845968  3.6101540  0.5459028 #>  [9,]  3.6090469  0.4368999  1.1240025  1.7006204 #> [10,]  2.5925942  1.4293217  3.0304101  0.9766790"},{"path":"/reference/simu_px_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate HR extremal functions — simu_px_HR","title":"Simulate HR extremal functions — simu_px_HR","text":"Simulates Huessler--Reiss extremal functions","code":""},{"path":"/reference/simu_px_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate HR extremal functions — simu_px_HR","text":"","code":"simu_px_HR(n, d, idx, trend, chol_mat)"},{"path":"/reference/simu_px_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate HR extremal functions — simu_px_HR","text":"n Number simulations. d Dimension multivariate Pareto distribution. idx Integer. Index corresponding variable extremal function simulated. trend Numeric. Trend corresponding variable idx. chol_mat Numeric matrix \\(d \\times d\\). Cholesky decomposition desired covariance matrix.","code":""},{"path":"/reference/simu_px_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate HR extremal functions — simu_px_HR","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_dirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Dirichlet extremal functions — simu_px_dirichlet","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"Simulates Dirichlet extremal functions","code":""},{"path":"/reference/simu_px_dirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"","code":"simu_px_dirichlet(n, d, idx, alpha)"},{"path":"/reference/simu_px_dirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"n Number simulations. d Dimension multivariate Pareto distribution. idx Integer numeric vector n elements. Inde(x|ces) 1 d, determine extremal function simulate. alpha Numeric vector size d.","code":""},{"path":"/reference/simu_px_dirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate logistic extremal functions — simu_px_logistic","title":"Simulate logistic extremal functions — simu_px_logistic","text":"Simulates logistic extremal functions","code":""},{"path":"/reference/simu_px_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate logistic extremal functions — simu_px_logistic","text":"","code":"simu_px_logistic(n, d, idx, theta)"},{"path":"/reference/simu_px_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate logistic extremal functions — simu_px_logistic","text":"n Number simulations. d Dimension multivariate Pareto distribution. idx Integer numeric vector n elements. Inde(x|ces) 1 d, determine extremal function simulate. theta Numeric --- assume \\(0 < \\theta < 1\\).","code":""},{"path":"/reference/simu_px_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate logistic extremal functions — simu_px_logistic","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_neglogistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate negative logistic extremal functions — simu_px_neglogistic","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"Simulates negative logistic extremal functions","code":""},{"path":"/reference/simu_px_neglogistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"","code":"simu_px_neglogistic(n, d, idx, theta)"},{"path":"/reference/simu_px_neglogistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"n Number simulations. d Dimension multivariate Pareto distribution. idx Integer numeric vector n elements. Inde(x|ces) 1 d, determine extremal function simulate. theta Numeric --- assume \\(\\theta > 0\\).","code":""},{"path":"/reference/simu_px_neglogistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_tree_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate HR extremal functions on a tree — simu_px_tree_HR","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"Simulates Huessler--Reiss extremal functions tree","code":""},{"path":"/reference/simu_px_tree_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"","code":"simu_px_tree_HR(n, Gamma_vec, A)"},{"path":"/reference/simu_px_tree_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"n Number simulations. Gamma_vec Numeric vector d-1 elements, d number nodes tree (d-1 number edges). Numeric \\(d \\times (d-1)\\) matrix; rows represent nodes tree, columns represent edges. fixed node \\(k = 1, \\dots, d\\), entry \\((, j)\\) equal 1 edge position j directed path node k node polytree rooted node k.","code":""},{"path":"/reference/simu_px_tree_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_tree_dirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"Simulates Dirichlet extremal functions tree","code":""},{"path":"/reference/simu_px_tree_dirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"","code":"simu_px_tree_dirichlet(n, alpha.start, alpha.end, A)"},{"path":"/reference/simu_px_tree_dirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"n Number simulations. alpha.start Numeric vector d-1 elements, d number nodes tree (d-1 number edges). alpha.end Numeric vector d-1 elements, d number nodes tree (d-1 number edges). Numeric \\(d \\times (d-1)\\) matrix; rows represent nodes tree, columns represent edges. fixed node \\(k = 1, \\dots, d\\), entry \\((, j)\\) equal 1 edge position j directed path node k node polytree rooted node k.","code":""},{"path":"/reference/simu_px_tree_dirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/simu_px_tree_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"Simulates logistic extremal functions tree","code":""},{"path":"/reference/simu_px_tree_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"","code":"simu_px_tree_logistic(n, theta, A)"},{"path":"/reference/simu_px_tree_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"n Number simulations. theta Numeric vector 1 d-1 elements. Assume entry \\(0 < \\theta < 1\\). Numeric \\(d \\times (d-1)\\) matrix; rows represent nodes tree, columns represent edges. fixed node \\(k = 1, \\dots, d\\), entry \\((, j)\\) equal 1 edge position j directed path node k node polytree rooted node k.","code":""},{"path":"/reference/simu_px_tree_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"Numeric \\(n \\times d\\) matrix. Simulated data.","code":""},{"path":"/reference/split_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Split graph into invariant subgraphs — split_graph","title":"Split graph into invariant subgraphs — split_graph","text":"Split graph invariant subgraphs","code":""},{"path":"/reference/split_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split graph into invariant subgraphs — split_graph","text":"","code":"split_graph(g)"},{"path":"/reference/split_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split graph into invariant subgraphs — split_graph","text":"g igraph::graph object","code":""},{"path":"/reference/split_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split graph into invariant subgraphs — split_graph","text":"List invariant subgraphs","code":""},{"path":"/reference/unif.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform margin — unif","title":"Uniform margin — unif","text":"Rescale vector x empirically uniform margin.","code":""},{"path":"/reference/unif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform margin — unif","text":"","code":"unif(x, na.rm = FALSE)"},{"path":"/reference/unif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform margin — unif","text":"x Numeric vector. na.rm Logical. TRUE, missing values removed. FALSE, missing values kept .","code":""},{"path":"/reference/unif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform margin — unif","text":"Numeric vector entries rescaled uniform margins","code":""}]
