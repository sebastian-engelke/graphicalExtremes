[{"path":"/articles/exercises.html","id":"part-a","dir":"Articles","previous_headings":"","what":"Part A","title":"Exercises","text":"Fit extremal tree model flight delays using emst(), choosing threshold p = 0.7. Plot estimated tree US map interpret results.  Compute BIC value fitted tree model. Plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied fitted model.  Given flight_graph object, fit HR graphical model using fmpareto_graph_HR(). Compute BIC value flight_graph object corresponding Gamma matrix obtained Step 5. Plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied fitted model Step 5.","code":"p <- .7 flights_emst_fit <- emst(data = mat, p = p, method = \"vario\") plot_connections(flights_emst_fit$graph, airports) flights_loglik_tree <- loglik_HR(data=mat, p=p,                                  Gamma = flights_emst_fit$Gamma,                                  graph = flights_emst_fit$graph)  paste0(\"Tree BIC = \", flights_loglik_tree[3] %>% round(2)) > [1] \"Tree BIC = 17057.72\" emp_chi_mat <- emp_chi(mat, p = p)  ggplot() +   geom_point(aes(x = c(Gamma2chi(flights_emst_fit$Gamma)),                  y = c(emp_chi_mat))) +   geom_abline(slope = 1, intercept = 0) +   xlab(\"Fitted\") +   ylab(\"Empirical\") model_fit <- fmpareto_graph_HR(data = mat,                                graph = flight_graph, p = p, method = \"vario\") flights_loglik_graph <- loglik_HR(data = mat,                                    p = p, graph = flight_graph,                                   Gamma = model_fit$Gamma) paste0(\"BIC = \", flights_loglik_graph[3] %>% round(2)) > [1] \"BIC = 15087.67\" ggplot() +   geom_point(aes(x = c(Gamma2chi(model_fit$Gamma)),                  y = c(emp_chi_mat))) +   geom_abline(slope = 1, intercept = 0) +   xlab(\"Fitted\") +   ylab(\"Empirical\")"},{"path":"/articles/exercises.html","id":"part-b","dir":"Articles","previous_headings":"","what":"Part B","title":"Exercises","text":"Fit extremal graphical lasso model eglasso(), choosing threshold p = 0.7, rholist = seq(1e-4, 0.10, length.= 10). Plot estimated graph US map different values rho interpret results.  Compute plot BIC values estimated models different values rho.  Plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied best fitted model.  function eglasso() accepts input variogram matrix Gamma. Try estimate variogram matrix using different methods, : emp_vario(), fixing k, e.g., k = 1. graphicalExtremes:::ml_weight_matrix(), internal function. different estimates variogram: fit eglasso() model, plot corresponding BIC curves, plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied best eglasso() fit. Hint: methods, might need adjust rholist provided eglasso().","code":"Gamma <- emp_vario(mat, p = p) rholist = seq(1e-4, 0.10, length.out = 10) flights_eglasso_fit <- eglasso(Gamma, rholist = rholist, complete_Gamma = TRUE) plot_connections(flights_eglasso_fit$graph[[10]], airports) flights_loglik <- sapply(seq_along(rholist), FUN = function(j) {  loglik_HR(data=mat, p=p,             Gamma = flights_eglasso_fit$Gamma[[j]],            graph = flights_eglasso_fit$graph[[j]] ) })  ggplot(mapping = aes(x = rholist, y = flights_loglik[3, ])) +   geom_line() +   geom_point(shape = 21, size = 3, stroke = 1, fill = \"white\") +   geom_hline(aes(yintercept = flights_loglik_tree[3]), lty = \"dashed\") +   xlab(\"rho\") +   ylab(\"BIC\") +   scale_x_continuous(     breaks = rholist,     labels = round(rholist, 3),     sec.axis = sec_axis(trans=~., breaks = rholist,                         labels = sapply(flights_eglasso_fit$graph,                                          igraph::gsize),                         name=\"Number of edges\")   ) best_Gamma <- flights_eglasso_fit$Gamma[[which.min(flights_loglik[3,])]]  ggplot() +   geom_point(aes(x = c(Gamma2chi(best_Gamma)),                  y = c(emp_chi_mat))) +   geom_abline(slope = 1, intercept = 0) +   xlab(\"Fitted\") +   ylab(\"Empirical\") Gamma_vario_k_1 <- emp_vario(data = mat, k = 1, p = p) flights_eglasso_k_1 <- eglasso(Gamma_vario_k_1, rholist,                                 complete_Gamma = TRUE)  Gamma_ml <- graphicalExtremes:::ml_weight_matrix(data = mat, p = p) flights_eglasso_ml <- eglasso(Gamma_ml$est_gamma, rholist,                                 complete_Gamma = TRUE)"},{"path":"/articles/graphicalExtremes.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to Extremal Graphical Models","text":"Make sure install development version graphicalExtremes GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"sebastian-engelke/graphicalExtremes\")"},{"path":"/articles/graphicalExtremes.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction to Extremal Graphical Models","text":"","code":"danube = graphicalExtremes::danube  X = danube$data    ggplot(X %>% as_tibble()) +   geom_point(aes(x = X1, y = X2)) ggplot(X %>% as_tibble()) +   geom_point(aes(x = X22, y = X28)) danube_flow <- igraph::graph_from_edgelist(danube$flow_edges) plot(danube_flow, layout = danube$coords_to_plot,       edge.arrow.size=.3)"},{"path":[]},{"path":"/articles/graphicalExtremes.html","id":"definition","dir":"Articles","previous_headings":"3 Multivariate Pareto distributions","what":"Definition","title":"Introduction to Extremal Graphical Models","text":"goal study extremal tail multivariate random vector \\(\\mathbf{X} = (X_1,\\dots, X_d)\\). , interested extremal dependence therefore normlaize marginal distributions \\(F_j\\) \\(X_j\\) standard Pareto distributions \\[\\begin{equation} 1 /\\{1- F_j(X_j)\\}, \\quad j=1,\\dots, d. \\tag{3.1} \\end{equation}\\] assume sequel vector \\(X\\) normalized standard Pareto margins. multivariate Pareto distribution (MPD) defined limiting distribution exceedances \\(\\mathbf{X}\\) high threshold, multivariate threshold chosen terms \\(l_\\infty\\)-norm. \\(u>0\\), define exceedance distribution \\[\\begin{equation} \\mathbf{X}_u = \\mathbf{X} \\mid \\| \\mathbf{X} \\|_\\infty > u  \\tag{3.2} \\end{equation}\\] sending \\(u\\\\infty\\) normalizing properly, random vector \\(\\mathbf{X}_u\\) converges limiting distribution \\(\\mathbf{Y}\\) called MPD: \\[ \\mathbf{Y} = \\lim_{u\\\\infty} \\mathbf{X}_u /u,\\] limit terms convergence distribution. construction, distribution MPD \\(\\mathbf{Y}\\) defined space \\(\\mathcal L = \\{\\mathbf{x} \\[0,\\infty)^d : \\| \\mathbf{x} \\|_\\infty > 1\\}\\), \\(\\mathbf{Y}\\) possesses density \\(f_{\\mathbf{Y}}\\), proportional -called exponent measure density \\(\\lambda\\); details see Engelke Hitz (2020). practice, use approximation \\(\\mathbf{Y} \\approx \\mathbf{X}_u\\) large value \\(u\\), \\(u\\) can chosen \\(p\\)th quantile distribution \\(\\|\\mathbf{X}\\|_\\infty\\). Given \\(n\\) oberservations \\(\\mathbf{X}_1, \\dots, \\mathbf{X}_n\\) \\(\\mathbf{X}\\), function data2mpareto() first computes standardization (3.1) based empirical distribution functions \\(\\hat F_j\\) selects exceedances \\(\\mathbf{X}_u\\) according (3.2).","code":"Y <- data2mpareto(data=X, p = .8)"},{"path":"/articles/graphicalExtremes.html","id":"examples","dir":"Articles","previous_headings":"3 Multivariate Pareto distributions","what":"Examples","title":"Introduction to Extremal Graphical Models","text":"Example 3.1  extremal logistic distribution parameter \\(\\theta\\(0,1)\\) induces multivariate Pareto distribution density \\[\\begin{equation} f_{\\mathbf{Y}}(\\mathbf{y}) = \\frac{1}{d^{\\theta}} \\left(y_1^{-1/\\theta}+\\dots+y_d^{-1/\\theta}\\right)^{\\theta-d}\\prod_{=1}^{d-1}\\left(\\frac{}{\\theta}-1\\right) \\prod_{=1}^{d} y_i^{-1/\\theta-1}, \\quad \\mathbf{y} \\\\mathcal L. \\end{equation}\\] parameter \\(\\theta\\) governs extremal dependence, ranging complete dependence \\(\\theta\\0\\) independence \\(\\theta \\1\\). Example 3.2  \\(d\\)-dimensional Hüsler–Reiss distribution (Hüsler Reiss 1989) parameterized variogram matrix \\(\\Gamma = \\{\\Gamma_{ij}\\}_{1\\leq ,j\\leq d}\\). corresponding density exponent measure can written \\(k\\\\{1,\\dots, d\\}\\)  \\[\\begin{equation}   \\lambda(\\mathbf{y}) = y_k^{-2}\\prod_{\\neq k} y_i^{-1} \\phi_{d-1}\\left(\\mathbf{\\tilde y}_{\\setminus k}; \\Sigma^{(k)}\\right), \\quad \\mathbf{y} \\\\mathcal L,  \\tag{3.3} \\end{equation}\\] \\(\\phi_p(\\cdot; \\Sigma)\\) density centred \\(p\\)-dimensional normal distribution covariance matrix \\(\\Sigma\\), \\(\\mathbf{\\tilde y} = \\{\\log(y_i/y_k) + \\Gamma_{ik}/2\\}_{=1,\\dots, d}\\) \\[\\begin{equation}\\label{sigma_k}   \\Sigma^{(k)}  =\\frac{1}{2} \\{\\Gamma_{ik}+\\Gamma_{jk}-\\Gamma_{ij}\\}_{,j\\neq k} \\\\mathbb R^{(d-1)\\times (d-1)}. \\tag{3.4} \\end{equation}\\] matrix \\(\\Sigma^{(k)}\\) positive definite play important role theory extremal graphical models. representation density (3.3) seems depend choice \\(k\\), , fact, value right-hand side equation independent \\(k\\). Hüsler–Reiss multivariate Pareto distribution density \\(f_{\\mathbf{Y}}(\\mathbf{y}) \\propto \\lambda(\\mathbf{y})\\) strength dependence \\(\\)th \\(j\\)th component parameterized \\(\\Gamma_{ij}\\), ranging complete dependence \\(\\Gamma_{ij} \\0\\) independence \\(\\Gamma_{ij} \\\\infty\\). extension Hüsler–Reiss distributions random fields Brown–Resnick processes (Kabluchko, Schlather, Haan 2009), widely used models spatial extremes. function rmpareto() generates samples MPD \\(\\mathbf{Y}\\) based exact algorithm described Engelke Hitz (2020). Note can also generate samples corresponding max-stable distribution function rmstable(), following exact algorithm Dombry, Engelke, Oesting (2016).","code":"G <-  cbind(c(0,1.5), c(1.5,0)) Ysim <- rmpareto(n = 100, model = \"HR\", d = 2, par = G)  theta <- .5 Ysim <- rmpareto(n = 100, model = \"logistic\", d = 2, par = theta)"},{"path":[]},{"path":"/articles/graphicalExtremes.html","id":"extremal-correlation","dir":"Articles","previous_headings":"3 Multivariate Pareto distributions > 3.3 Measures of extremal dependence","what":"Extremal correlation","title":"Introduction to Extremal Graphical Models","text":"extremal correlation \\(\\chi_{ij}\\[0,1]\\) measures dependence largest values random variables \\(X_i\\) \\(X_j\\). defined \\[\\begin{equation}\\label{EC}   \\chi_{ij} = \\lim_{p\\1} \\chi_{ij}(p) = \\lim_{p\\1} \\mathbb P\\left\\{F_i(X_i) > p\\mid  F_j(X_j) > p \\right\\}, \\end{equation}\\] boundary cases \\(0\\) \\(1\\) correspond asymptotic independence complete dependence, respectively. \\(n\\) observations \\(X_1,\\dots, X_n\\) \\(d\\)-dimensional vector \\(X\\), can empirically estimate \\(d\\times d\\) matrix pairwise extremal correlations fixed threshold \\(p\\) close 1. function, subsequent functions, variable p = NULL data already expected MPD scale, thresholding performed. danube() data, may therefore directly use \\(\\mathbf{Y}\\) instead \\(\\mathbf{X}\\): Example 3.3  Hüsler–Reiss distribution parameter matrix \\(\\Gamma = \\{\\Gamma_{ij}\\}_{1\\leq ,j\\leq d}\\), extremal correlation given \\[ \\chi_{ij} =  2 - 2 \\Phi(\\sqrt{\\Gamma_{ij}}/2),\\] \\(\\Phi\\) standard normal distribution function. can use functions Gamma2chi() chi2Gamma() switch two coefficients.","code":"chi_hat <- emp_chi(data = X, p = .8) chi_hat <- emp_chi(data = Y)"},{"path":"/articles/graphicalExtremes.html","id":"extremal-variogram","dir":"Articles","previous_headings":"3 Multivariate Pareto distributions > 3.3 Measures of extremal dependence","what":"Extremal variogram","title":"Introduction to Extremal Graphical Models","text":"exist several summary statistics extremal dependence. extremal variogram introduced  turns particularly useful inference extremal graphical models discussed . root node \\(k\\V\\), pre-asymptotic extremal variogram defined matrix \\(\\Gamma^{(k)}\\) entries \\[\\begin{equation*}     \\Gamma_{ij}^{(k)}(p) = \\mathop{\\mathrm{Var}}\\left[\\log\\{1 -  F_i(X_{})\\}- \\log\\{1 - F_j(X_j)\\} \\mid F_k(X_k) > p\\right], \\quad ,j\\V,     \\end{equation*}\\] whenever right-hand side exists. Note \\(-\\log\\{1 - F_i(X_{})\\}\\) transforms \\(X_i\\) standard exponential distribution, \\(\\Gamma^{(k)}\\) simply variogram matrix \\(\\mathbf{X}\\) exponential scale, condtioned \\(k\\)th variable large. limit \\(p\\1\\) called extremal variogram can expressed terms MPD \\(\\mathbf{Y}\\): \\[\\begin{equation*}  \\Gamma_{ij}^{(k)} = \\lim_{p\\1} \\Gamma_{ij}^{(k)}(p) = \\mathop{\\mathrm{Var}}\\left\\{ \\log Y^k_{} - \\log Y^k_j \\mid Y_k > 1 \\right\\}, \\quad ,j\\V. \\end{equation*}\\] Weak/strong extremal dependence indicated large/small values extremal variogram, respectively. function emp_vario() estimates (pre-asymptotic) extremal variogram, instance \\(k=1\\). general, matrices \\(\\Gamma^{(k)}\\) can different \\(k \\V\\), example Hüsler–Reiss distribution, coincide. Example 3.4  Hüsler–Reiss distribution parameter matrix \\(\\Gamma\\), extremal variogram matrices satisfy \\[ \\Gamma = \\Gamma^{(1)} = \\dots = \\Gamma^{(d)}.\\] case makes sense estimate extremal variogram \\(\\hat \\Gamma\\) average estimators \\(\\hat \\Gamma^{(k)}\\):","code":"Gamma_1_hat = emp_vario(data = X, k = 1, p = 0.8) Gamma_hat = emp_vario(data = X, p = 0.8) Gamma_hat = emp_vario(data = Y)"},{"path":"/articles/graphicalExtremes.html","id":"extremal-graphical-models","dir":"Articles","previous_headings":"","what":"Extremal graphical models","title":"Introduction to Extremal Graphical Models","text":"Let \\(G=(V,E)\\) undirected graph index set \\(V = \\{1,\\dots, d\\}\\) edges \\(E \\subset V \\times V\\). figure shows examples different graphical structure: tree, decomposable graph non-decomposable graph. Engelke Hitz (2020) introduce new notion extremal conditional independence MTPs, denoted \\(\\perp_e\\). define extremal graphical model \\(G\\) MPD \\(Y = (Y_j : j\\V)\\) satisfies pairwise Markov property \\[   Y_i \\perp_e Y_j \\mid  Y_{\\setminus \\{,j\\}}, \\quad  (,j)\\notin E.\\] , \\(Y_i\\) \\(Y_j\\) conditionally independent extremal sense \\(\\perp_e\\) given nodes whenever edge \\(\\) \\(j\\) \\(G\\). MPD possesses density \\(f_{\\mathbf{Y}}\\), graph \\(G\\) connected. Engelke Hitz (2020) show Hammersley–Clifford theorem stating extr emal graphical model decomposable graph \\(G\\), density \\(f_{\\mathbf{Y}}\\) factorizes marginal density cliques.","code":""},{"path":"/articles/graphicalExtremes.html","id":"trees","dir":"Articles","previous_headings":"4 Extremal graphical models","what":"Trees","title":"Introduction to Extremal Graphical Models","text":"tree \\(T = (V,E)\\) particularly simple type graph, connected cycles. implies exactly \\(|E| = d-1\\) edges. Hammersley–Clifford theorem shown Engelke Hitz (2020) yields density extremal tree model \\(\\mathbf{Y}\\) tree \\(T= (V,E)\\) factorizes \\[\\begin{equation}   f_{\\mathbf{Y}}(\\mathbf{y}) \\propto  \\prod_{\\{,j\\}\\E} {\\lambda_{ij}(y_i,y_j) \\y_i^{-2} y_j^{-2}} \\prod_{\\V} y_i^{-2},  \\tag{4.1} \\end{equation}\\] \\(\\lambda_{ij}\\) bivariate marginals exponent measure density \\(\\lambda\\) corresponding \\(\\mathbf{Y}\\). \\(d\\)-dimensional density MPD therefore reduced bivariate interactions . extremal graphical models trees, extremal variograms \\(\\Gamma^{(k)}\\), \\(k \\V\\), natural since define -called additive tree metric, ,\\[\\begin{equation} \\Gamma_{ij}^{(k)} = \\sum_{(s,t) \\\\text{ph}(ij)} \\Gamma^{(k)}_{st}, \\tag{4.2} \\end{equation}\\] \\(\\text{ph}(ij)\\) denotes path node \\(\\) \\(j\\) tree \\(T\\).","code":""},{"path":"/articles/graphicalExtremes.html","id":"simulation","dir":"Articles","previous_headings":"4 Extremal graphical models > 4.1 Trees","what":"Simulation","title":"Introduction to Extremal Graphical Models","text":"representation (4.1) can specify models bivariate \\(\\lambda_{ij}\\) \\((,j) \\E\\) combine valid tree model. instance, use bivariate Hüsler–Reiss distributions edges tree \\(T\\), resulting \\(d\\)-dimensional tree model Hüsler–Reiss parameter matrix \\(\\Gamma\\) implied (4.2). use bivariate logistic distributions edges, results extremal tree model \\(d\\)-dimensional logistic model, flexible model \\(d-1\\) parameters. function rmpareto_tree() generates samples extremal tree model \\(\\mathbf{Y}\\). Note can also generate samples corresponding max-stable distribution function rmstable_tree().","code":"set.seed(42)  my_model <- generate_random_model(d = 4, graph_type = \"tree\") Ysim <- rmpareto_tree(n=100, model = \"HR\",                        tree = my_model$graph,                       par = my_model$Gamma)  theta_vec <- c(.2, .8, .3) Ysim <- rmpareto_tree(n=100, model = \"logistic\",                        tree = my_model$graph,                        par = theta_vec)"},{"path":"/articles/graphicalExtremes.html","id":"estimation","dir":"Articles","previous_headings":"4 Extremal graphical models > 4.1 Trees","what":"Estimation","title":"Introduction to Extremal Graphical Models","text":"given tree \\(T= (V,E)\\) parametric model \\(\\{f_{\\mathbf{Y}}(\\mathbf{y}; \\theta): \\theta \\\\Theta\\}\\) MPDs tree \\(T\\), estimation model parameters fairly straight-forward. \\(\\theta = \\{ \\theta_{ij}: (,j) \\E\\}\\) consists one parameter per edge, thanks factorization (4.1) may fit parameter \\(\\theta_{ij}\\) separately. can done (censored) maximum likelihood methods, methods M-estimation. can done (censored) maximum likelihood methods, methods M-estimation. provided tree data, function fmpareto_graph_HR() estimates \\(d-1\\) parametres Hüsler–Reiss model tree. example, fit extremal tree model (undirected) tree resulting flow connections danube() data set compare fitted empirical extremal coefficients.","code":"danube_tree <- igraph::as.undirected(danube_flow) danube_flow_fit <- fmpareto_graph_HR(data = X, graph = danube_tree, p = .8)"},{"path":"/articles/graphicalExtremes.html","id":"structure-learning","dir":"Articles","previous_headings":"4 Extremal graphical models > 4.1 Trees","what":"Structure learning","title":"Introduction to Extremal Graphical Models","text":"practice, underlying conditonal independence tree \\(T = (V,E)\\) usually unknown estimated data-driven way. extremal tree models, turns can done efficiently completely non-parametric way; see Engelke Volgushev (2020) details. method based notion minimum spanning tree. set symmetric weights \\(\\rho_{ij} > 0\\) associated pair nodes \\(,j\\V\\), \\(\\neq j\\), latter defined tree structure \\[\\begin{align}\\label{Tmin}   T_{\\mathop{\\mathrm{mst}}} = \\mathop{\\mathrm{arg\\,min}}_{T' = (V,E)} \\sum_{(,j)\\E} \\rho_{ij}, \\end{align}\\] minimizes sum distances tree. Engelke Volgushev (2020) showed \\(\\mathbf{Y}\\) extremal graphical model unkown tree \\(T\\), minimum spanning tree extremal variogram \\(\\rho_{ij} = \\Gamma_{ij}^{(k)}\\) weights unique satisfies \\(T_{\\mathop{\\mathrm{mst}}} = T\\). Using empircal estimates \\(\\hat \\Gamma_{ij}^{(k)}\\) weights, can thus consistently recover underlying tree structure fully non-parametric way. fact, taking average \\(\\hat \\Gamma^{(k)}\\), \\(k \\V\\), using weights \\(\\rho_{ij} = \\hat \\Gamma_{ij}\\) makes better use data usually improves performance structure estimation significantly. Engelke Volgushev (2020) show empircal extremal correlation \\(\\rho_{ij} = \\hat \\chi_{ij}\\) may also used consistent tree recovery, performance typically inferior extremal variogram based algorithms. function emst() estimates extremal tree structure minimum spanning tree algorithm based different summary statistics extremal dependence. provides estimated tree implied extremal variogram matrix (4.2).","code":"danube_emst_fit <- emst(data = X, p = .8, method = \"vario\") plot(danube_emst_fit$graph, layout = danube$coords_to_plot) ggplot() +   geom_point(aes(x = c(Gamma2chi(danube_flow_fit$Gamma)), y = c(chi_hat))) +   geom_abline(slope = 1, intercept = 0) +   xlab(\"Fitted\") +   ylab(\"Empirical\") +   coord_cartesian(ylim = c(0.4, 1))"},{"path":"/articles/graphicalExtremes.html","id":"hüslerreiss-graphical-models","dir":"Articles","previous_headings":"4 Extremal graphical models","what":"Hüsler–Reiss graphical models","title":"Introduction to Extremal Graphical Models","text":"Hüsler–Reiss Pareto distribution \\(\\mathbf{Y}\\) parametrized variogram matrix \\(\\Gamma\\). Using linear transformation (3.4), obtain covariance matrix \\(\\Sigma^{(k)}\\) \\(k\\V\\). inverse, called precision matrix, denoted \\(\\Theta^{(k)}\\). Engelke Hitz (2020) showed \\(k\\V\\) precision matrix contains conditional independence structure \\(\\mathbf{Y}\\), since \\(,j\\V\\) \\(\\neq j\\), \\[\\begin{equation*}     Y_i\\perp_e Y_j\\mid \\mathbf{Y}_{V\\setminus \\{,j\\}} \\quad \\iff \\quad     \\begin{cases}        \\Theta^{(k)}_{ij}= 0,  &\\text{ } ,j \\neq k,\\\\        \\sum_{l\\neq k} \\Theta^{(k)}_{jl} = 0, & \\text{ } = k,j \\neq k.     \\end{cases}    \\end{equation*}\\] means, \\(Y\\) extremal graphical graph \\(G = (V,E)\\), missing edges can read matrix \\(\\Theta^{(k)}\\) zeros -diagonal zero row sums. Note matrices \\(\\Theta^{(k)}\\) \\((d-1)\\times(d-1)\\) dimensional. combine precision matrices \\(k\\V\\), may fact positive semi-definite precision matrix \\(\\Theta \\\\mathbb R^{d\\times d}\\) \\[\\begin{equation*}  \\Theta_{ij} = \\Theta^{(k)}_{ij} \\text{ } k \\neq ,j, \\end{equation*}\\] contains extremal conditional independencies zeros -diagonal: \\[\\begin{equation*}     Y_i\\perp_e Y_j\\mid \\mathbf{Y}_{V\\setminus \\{,j\\}} \\quad \\iff \\quad        \\Theta_{ij}= 0,  \\quad ,j \\V. \\end{equation*}\\]","code":""},{"path":"/articles/graphicalExtremes.html","id":"transformations","dir":"Articles","previous_headings":"4 Extremal graphical models > 4.2 Hüsler–Reiss graphical models","what":"Transformations","title":"Introduction to Extremal Graphical Models","text":"Hüsler–Reiss distribution parameterized variogram matrix \\(\\Gamma\\), objects \\(\\Sigma^{(k)}\\), \\(\\Theta^{(k)}\\) \\(\\Theta\\) often required, instance, identify extremal graphical structure. functions Gamma2Sigma(), Sigma2Gamma(), Gamma2Theta() Theta2Gamma() often useful. Note function bijections. function Gamma2graph() creates igraph::graph() object plots .","code":"Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) ) Gamma2Sigma(Gamma, k = 1) Gamma2Theta(Gamma) my_graph <- Gamma2graph(Gamma) >      [,1] [,2] [,3] > [1,]  1.5  0.5    1 > [2,]  0.5  1.5    1 > [3,]  1.0  1.0    2 >      [,1] [,2] [,3] [,4] > [1,]  1.0 -0.5 -0.5  0.0 > [2,] -0.5  1.0  0.0 -0.5 > [3,] -0.5  0.0  1.0 -0.5 > [4,]  0.0 -0.5 -0.5  1.0"},{"path":"/articles/graphicalExtremes.html","id":"completion-of-gamma","dir":"Articles","previous_headings":"4 Extremal graphical models > 4.2 Hüsler–Reiss graphical models","what":"Completion of \\(\\Gamma\\)","title":"Introduction to Extremal Graphical Models","text":"Hüsler–Reiss graphical models suffices specify graph structure \\(G = (V,E)\\) entries parameter matrix \\(\\Gamma_{ij}\\) \\((,j) \\E\\). remaining entries matrix \\(\\Gamma\\) implicitely implied graph structure. function complete_Gamma() takes input partially specified \\(\\Gamma\\) matrix corresponding graph structure \\(G\\), completes \\(\\Gamma\\) matrix. mathematical theory completion different depening whether graph decomposable non-decomposable. simplest case tree, entries \\(\\Gamma_{ij}\\) \\((,j) \\notin E\\) can easily obtained additive tree metric property (4.2).  also works general decomposable graphs, matrix \\(\\Gamma\\) specified cliques. decomposable graphs, graph structure can also implied \\(\\Gamma_{ij} = \\text{NA}\\) \\((,j)\\notin E\\).  non-decomposable graphs, valid \\(\\Gamma\\) matrix undirected, connected graph provided.","code":"set.seed(42) my_tree <- generate_random_model(d = 4, graph_type = \"tree\")$graph Gamma_vec <- c(.5, 1.4, .8) complete_Gamma(Gamma = Gamma_vec, graph = my_tree) >      [,1] [,2] [,3] [,4] > [1,]  0.0  0.5  1.9  1.3 > [2,]  0.5  0.0  1.4  0.8 > [3,]  1.9  1.4  0.0  2.2 > [4,]  1.3  0.8  2.2  0.0 plot(my_tree) G <- rbind( c(0, 5, 7, 6, NA), c(5, 0, 14, 15, NA), c(7, 14, 0, 5, 5), c(6, 15, 5, 0, 6), c(NA, NA, 5, 6, 0) ) complete_Gamma(Gamma = G) >      [,1] [,2] [,3] [,4] [,5] > [1,]  0.0  5.0    7    6  9.6 > [2,]  5.0  0.0   14   15 17.4 > [3,]  7.0 14.0    0    5  5.0 > [4,]  6.0 15.0    5    0  6.0 > [5,]  9.6 17.4    5    6  0.0 my_graph <- Gamma2graph(complete_Gamma(G)) set.seed(42) G <- rbind( c(0, 5, 7, 6, 6), c(5, 0, 14, 15, 13), c(7, 14, 0, 5, 5), c(6, 15, 5, 0, 6), c(6, 13, 5, 6, 0) ) my_graph <- generate_random_model(d = 5, graph_type = \"general\", m = 5)$graph complete_Gamma(Gamma = G, graph = my_graph) >         [,1]    [,2]    [,3]    [,4]    [,5] > [1,]  0.0000  5.0000 10.2915  6.0000 15.2915 > [2,]  5.0000  0.0000 14.0000 10.2915 19.0000 > [3,] 10.2915 14.0000  0.0000  5.0000  5.0000 > [4,]  6.0000 10.2915  5.0000  0.0000 10.0000 > [5,] 15.2915 19.0000  5.0000 10.0000  0.0000 plot(my_graph)"},{"path":"/articles/graphicalExtremes.html","id":"estimation-1","dir":"Articles","previous_headings":"4 Extremal graphical models > 4.2 Hüsler–Reiss graphical models","what":"Estimation","title":"Introduction to Extremal Graphical Models","text":"Let us first suppose connected graph \\(G\\) given. data set, function fmpareto_graph_HR() fits Hüsler–Reiss graphical model graph \\(G\\). graph decomposable, parameters clique can fitted separately combined together full \\(\\Gamma\\) matrix. cliques small enough, (censored) maximum likelihood estimation feasible, otherwise empirical extremal variogram used. Combining clique estimates relies principle complete_Gamma() function, care required ensure \\(\\Gamma_{ij}\\) estimates consistent \\((,j)\\) belongs separator set two cliques.   graph \\(G\\) non-decomposable, empirical extremal variogram first computed fitted graph structure \\(G\\) using function complete_Gamma().","code":"set.seed(42) d <- 10 my_model <- generate_random_model(d = d, graph_type = \"decomposable\") plot(my_model$graph) Ysim <- rmpareto(n = 100, d = d, model = \"HR\", par = my_model$Gamma) my_fit <- fmpareto_graph_HR(data = Ysim, graph = my_model$graph, p = NULL, method = \"ML\") ggplot() +   geom_point(aes(x = c(Gamma2chi(my_fit$Gamma)), y = c(Gamma2chi(my_model$Gamma)))) +   geom_abline(slope = 1, intercept = 0) +   xlab(\"Fitted\") +   ylab(\"True\") +   coord_cartesian(ylim = c(0.35, 1)) set.seed(42) d <- 20 my_model <- generate_random_model(d = d, graph_type = \"general\") plot(my_model$graph) Ysim <- rmpareto(n = 100, d = d, model = \"HR\", par = my_model$Gamma) my_fit <- fmpareto_graph_HR(data = Ysim, graph = my_model$graph, p = NULL, method = \"vario\") ggplot() +   geom_point(aes(x = c(Gamma2chi(my_fit$Gamma)), y = c(Gamma2chi(my_model$Gamma)))) +   geom_abline(slope = 1, intercept = 0) +   xlab(\"Fitted\") +   ylab(\"True\") +   coord_cartesian(ylim = c(0.5, 1))"},{"path":"/articles/graphicalExtremes.html","id":"extremal-graphical-lasso","dir":"Articles","previous_headings":"4 Extremal graphical models > 4.2 Hüsler–Reiss graphical models","what":"Extremal graphical lasso","title":"Introduction to Extremal Graphical Models","text":"structure learning general, possibly non-decomposable graphs, can use extremal graphical lasso Hüsler–Reiss distributions. Given estimate \\(\\widehat \\Gamma\\) parameter matrix, e.g., obtained emp_vario(), compute corresponding matrices \\(\\widehat \\Sigma^{(k)}\\) function Gamma2Sigma(). order enforce sparsity, compute \\(\\ell_1\\)-penalized precision matrices \\(k\\V\\). tuning parameter \\(\\rho\\geq 0\\), extremal graphical lasso \\[\\begin{align*}   \\widehat \\Theta^{(k)}_{\\rho} = \\underset{{\\Theta} \\succeq 0}{\\mathop{\\mathrm{arg\\,max}}} \\,\\,   \\log \\det{\\Theta}-\\operatorname{tr}(\\widehat \\Sigma^{(k)}\\Theta) -\\rho \\sum_{\\substack{\\neq j \\\\ ,j\\neq k}} \\left|\\Theta_{ij}\\right|. \\end{align*}\\] Since run \\(d\\) different graphical lasso algorithms \\(k\\)th enforces sparsity edges involve \\(k\\)th node, determine estimated graph structure \\(\\widehat{G}_\\rho = (\\widehat E_\\rho,V)\\) majority vote: \\[ (,j) \\\\widehat E_\\rho \\quad \\Leftrightarrow \\quad \\frac1{d-2} \\# \\left\\{k \\V \\setminus \\{,j\\}: \\right(\\widehat\\Theta^{(k)}_\\rho \\left)_{ij} \\neq 0 \\right\\} \\geq 1/2.\\] best parameter \\(\\rho\\) can chosen instance minimizer BIC resulting models. extremal graphical lasso implemented eglasso() function. returns (sequence) estimated graphs , desired, corresponding \\(\\widehat \\Gamma_\\rho\\) estimates.","code":"set.seed(42) rholist = seq(1e-5, 0.04, length.out = 10) danube_eglasso_fit <- eglasso(Gamma = Gamma_hat, rholist = rholist,                      eps = .5, reg_method = \"glasso\", complete_Gamma = TRUE)  danube_loglik <- sapply(1:length(rholist), FUN = function(j)    loglik_HR(data=X, p=.8, Gamma = danube_eglasso_fit$Gamma[[j]],              graph =  danube_eglasso_fit$graph[[j]]))   danube_loglik_tree <- loglik_HR(data=X, p=.8, Gamma = danube_emst_fit$Gamma,                                 graph = danube_emst_fit$graph)  ggplot(mapping = aes(x = rholist, y = danube_loglik[3, ])) +   geom_line() +   geom_point(shape = 21, size = 3, stroke = 1, fill = \"white\") +   geom_hline(aes(yintercept = danube_loglik_tree[3]), lty = \"dashed\") +   xlab(\"rho\") +   ylab(\"BIC\") +   scale_x_continuous(     breaks = rholist,     labels = round(rholist, 3),     sec.axis = sec_axis(trans=~., breaks = rholist,                         labels = sapply(danube_eglasso_fit$graph, igraph::gsize),                         name=\"Number of edges\")   ) plot(danube_eglasso_fit$graph[[1]], layout = danube$coords_to_plot,      main = paste0(\"rho = \", round(danube_eglasso_fit$rholist[[1]], 3))) plot(danube_eglasso_fit$graph[[5]], layout = danube$coords_to_plot,      main = paste0(\"rho = \", round(danube_eglasso_fit$rholist[[5]], 3))) plot(danube_eglasso_fit$graph[[10]], layout = danube$coords_to_plot,      main = paste0(\"rho = \", round(danube_eglasso_fit$rholist[[10]], 3))) best_Gamma <- danube_eglasso_fit$Gamma[[which.min(danube_loglik[3,])]]  ggplot() +   geom_point(aes(x = c(Gamma2chi(best_Gamma)), y = c(chi_hat))) +   geom_abline(slope = 1, intercept = 0) +   xlab(\"Fitted\") +   ylab(\"Empirical\") +   coord_cartesian(ylim = c(0.4, 1))"},{"path":"/articles/graphicalExtremes.html","id":"exercises","dir":"Articles","previous_headings":"","what":"Exercises","title":"Introduction to Extremal Graphical Models","text":"flights()dataset contains daily total delays (Jan 1, 2015 – Dec 31, 2015) Southwest Airlines different airports California, Nevada, Arizona, Utah, Texas. object flights() list made : data: dplyr::tibble() containing delay data. row corresponds day column airport. airports: dplyr::tibble() containing details airport. connections: dplyr::tibble() containing details undirected flights. code , show load dataset plot flight connections.  Also, useful create igraph::graph() object flights connections. exercises modeling extremal dependence flight delays 24 airports. Note flight_graph necessarily represent extremal graphical structure, can used comparison estimated graphs. , provide helper functions might use plot igraph::graph() object US map.","code":"# Load the dataset data <- flights$data airports <- flights$airports connections <- flights$connections  mat <- data %>%    select(-DATE) %>%    as.matrix()  # Plot flight connection ggplot() +   geom_polygon(data = map_data(\"usa\"),                aes(x = long, y = lat, group = group), color = \"grey65\",                fill = \"#f9f9f9\", size = 0.2) +   geom_point(data = airports,              aes(x = LONGITUDE, y = LATITUDE, size = N_FLIGHTS),              alpha = 1) +   geom_curve(data = connections,              aes(x = LONGITUDE.origin, xend = LONGITUDE.dest,                  y = LATITUDE.origin, yend = LATITUDE.dest,                  size = N_FLIGHTS),              alpha = .2, curvature = 0) flight_graph <- connections %>%   select(ID.origin, ID.dest) %>%   as.matrix() %>%   igraph::graph_from_edgelist(directed = FALSE) # Function definition plot_connections <- function(graph, airports) {   ## igraph tibble -> ggplot   ## plots the given `graph` on the US map      # name the graph nodes   igraph::V(graph)$name <- airports$IATA_CODE[airports$ID == igraph::V(graph)]      # write flight connections   flights_connections_est <- igraph::get.edgelist(graph) %>%   as_tibble(.name_repair = ~ c(\"ORIGIN_AIRPORT\", \"DESTINATION_AIRPORT\")) %>%   left_join(airports, by = c(\"ORIGIN_AIRPORT\" = \"IATA_CODE\")) %>%   left_join(airports, by = c(\"DESTINATION_AIRPORT\" = \"IATA_CODE\"),             suffix = c(\".origin\", \".dest\")) %>%   select(ORIGIN_AIRPORT, DESTINATION_AIRPORT,          LATITUDE.origin, LONGITUDE.origin,          LATITUDE.dest, LONGITUDE.dest)      # plot connections   ggplot() +   geom_polygon(data = map_data(\"usa\"),                aes(x = long, y = lat, group = group), color = \"grey65\",                fill = \"#f9f9f9\", size = 0.2) +   geom_point(data = airports,              aes(x = LONGITUDE, y = LATITUDE, size = N_FLIGHTS),              alpha = 1) +   geom_curve(data = flights_connections_est,              aes(x = LONGITUDE.origin, xend = LONGITUDE.dest,                  y = LATITUDE.origin, yend = LATITUDE.dest),              alpha = .4, curvature = 0)       }  # Plot an igraph object plot_connections(flight_graph, airports)"},{"path":"/articles/graphicalExtremes.html","id":"part-a","dir":"Articles","previous_headings":"5 Exercises","what":"Part A","title":"Introduction to Extremal Graphical Models","text":"Fit extremal tree model flight delays using emst(), choosing threshold p = 0.7. Plot estimated tree US map interpret results. Compute BIC value fitted tree model. Plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied fitted model. Given flight_graph object, fit HR graphical model using fmpareto_graph_HR(). Compute BIC value flight_graph object corresponding Gamma matrix obtained Step 5. Plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied fitted model Step 5.","code":""},{"path":"/articles/graphicalExtremes.html","id":"part-b","dir":"Articles","previous_headings":"5 Exercises","what":"Part B","title":"Introduction to Extremal Graphical Models","text":"Fit extremal graphical lasso model eglasso(), choosing threshold p = 0.7, rholist = seq(1e-4, 0.10, length.= 10). Plot estimated graph US map different values rho interpret results. Compute plot BIC values estimated models different values rho. Plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied best fitted model. function eglasso() accepts input variogram matrix Gamma. Try estimate variogram matrix using different methods, : emp_vario(), fixing k, e.g., k = 1. graphicalExtremes:::ml_weight_matrix(), internal function. different estimates variogram: fit eglasso() model, plot corresponding BIC curves, plot empirical \\(\\chi\\) coefficient \\(\\chi\\) coefficient implied best eglasso() fit. Hint: methods, might need adjust rholist provided eglasso().","code":""},{"path":"/articles/graphicalExtremes.html","id":"solutions","dir":"Articles","previous_headings":"5 Exercises","what":"Solutions","title":"Introduction to Extremal Graphical Models","text":"solutions see vignette(\"exercises\").","code":""},{"path":"/articles/graphicalExtremes.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to Extremal Graphical Models","text":"Dombry, C., S. Engelke, M. Oesting. 2016. “Exact Simulation Max-Stable Processes.” Biometrika 103: 303–17. Engelke, S., . S. Hitz. 2020. “Graphical Models Extremes (Discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol. 82: 871–932. Engelke, S., S. Volgushev. 2020. “Structure Learning Extremal Tree Models.” https://arxiv.org/abs/2012.06179. Hüsler, J., R.-D. Reiss. 1989. “Maxima Normal Random Vectors: Independence Complete Dependence.” Statist. Probab. Lett. 7: 283–86. Kabluchko, Z., M. Schlather, L. de Haan. 2009. “Stationary Max-Stable Fields Associated Negative Definite Functions.” Ann. Probab. 37: 2042–65.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Engelke. Author, maintainer. Adrien S. Hitz. Author. Nicola Gnecco. Author. Manuel Hentschel. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Engelke S, Hitz , Gnecco N, Hentschel M (2022). graphicalExtremes: Statistical Methodology Graphical Extreme Value Models. R package version 0.1.0.9000, https://github.com/sebastian-engelke/graphicalExtremes.","code":"@Manual{,   title = {graphicalExtremes: Statistical Methodology for Graphical Extreme Value Models},   author = {Sebastian Engelke and Adrien S. Hitz and Nicola Gnecco and Manuel Hentschel},   year = {2022},   note = {R package version 0.1.0.9000},   url = {https://github.com/sebastian-engelke/graphicalExtremes}, }"},{"path":"/index.html","id":"graphicalextremes","dir":"","previous_headings":"","what":"Statistical Methodology for Graphical Extreme Value Models","title":"Statistical Methodology for Graphical Extreme Value Models","text":"goal graphicalExtremes provide implementation statistical methodology paper Engelke Hitz (2020) sparse multivariate extreme value models. includes exact simulation algorithms statistical inference methods multivariate Pareto distributions graphical structures.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Statistical Methodology for Graphical Extreme Value Models","text":"can install development version graphicalExtremes GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"sebastian-engelke/graphicalExtremes\")"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Statistical Methodology for Graphical Extreme Value Models","text":"Engelke, S., . S. Hitz. 2020. “Graphical Models Extremes (Discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol. 82: 871–932.","code":""},{"path":"/reference/Gamma2Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma^{(k)}\\) matrix — Gamma2Sigma","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma^{(k)}\\) matrix — Gamma2Sigma","text":"Transforms Gamma matrix definition Huesler--Reiss distribution corresponding \\(\\Sigma^{(k)}\\) matrix.","code":""},{"path":"/reference/Gamma2Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma^{(k)}\\) matrix — Gamma2Sigma","text":"","code":"Gamma2Sigma(Gamma, k = NULL, full = FALSE)"},{"path":"/reference/Gamma2Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma^{(k)}\\) matrix — Gamma2Sigma","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. k Integer 1 (default value) d. Indicates matrix \\(\\Sigma^{(k)}\\) produced. full Logical. true, kth row column \\(\\Sigma^{(k)}\\) included function returns \\(d \\times d\\) matrix. default, full = FALSE.","code":""},{"path":"/reference/Gamma2Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma^{(k)}\\) matrix — Gamma2Sigma","text":"Numeric \\(\\Sigma^{(k)}\\) matrix size \\((d - 1) \\times (d - 1)\\) full = FALSE, size \\(d \\times d\\) full = TRUE.","code":""},{"path":"/reference/Gamma2Sigma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma^{(k)}\\) matrix — Gamma2Sigma","text":"Every \\(d \\times d\\) Gamma matrix definition Huesler--Reiss distribution can transformed \\((d - 1) \\times (d - 1)\\) \\(\\Sigma^{(k)}\\) matrix, k 1 d. inverse \\(\\Sigma^{(k)}\\) contains graph structure corresponding Huesler--Reiss distribution parameter matrix Gamma. full = TRUE, \\(\\Sigma^{(k)}\\) returned \\(d \\times d\\) matrix additional kth row column contain zeros. details see Engelke Hitz (2020) . inverse function Sigma2Gamma.","code":""},{"path":"/reference/Gamma2Sigma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma^{(k)}\\) matrix — Gamma2Sigma","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/Gamma2Sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Sigma^{(k)}\\) matrix — Gamma2Sigma","text":"","code":"Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) ) Gamma2Sigma(Gamma, k = 1, full = FALSE) #>      [,1] [,2] [,3] #> [1,]  1.5  0.5    1 #> [2,]  0.5  1.5    1 #> [3,]  1.0  1.0    2"},{"path":"/reference/Gamma2Theta.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"Transforms Gamma matrix definition Huesler--Reiss distribution corresponding \\(\\Theta\\) matrix.","code":""},{"path":"/reference/Gamma2Theta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"","code":"Gamma2Theta(Gamma, k = NULL)"},{"path":"/reference/Gamma2Theta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"Gamma Numeric \\(d \\times d\\) variogram matrix.","code":""},{"path":"/reference/Gamma2Theta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"Numeric \\(\\Sigma^{(k)}\\) matrix size \\((d - 1) \\times (d - 1)\\) full = FALSE, size \\(d \\times d\\) full = TRUE.","code":""},{"path":"/reference/Gamma2Theta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"Every \\(d \\times d\\) Gamma matrix definition Huesler--Reiss distribution can transformed \\(d \\times d\\) \\(\\Theta\\) matrix, contains graph structure corresponding Huesler--Reiss distribution parameter matrix Gamma.","code":""},{"path":"/reference/Gamma2Theta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"references Rd macro \\insertAllCites help page.","code":""},{"path":"/reference/Gamma2Theta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Gamma2Theta","text":"","code":"Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) ) Gamma2Sigma(Gamma, k = 1, full = FALSE) #>      [,1] [,2] [,3] #> [1,]  1.5  0.5    1 #> [2,]  0.5  1.5    1 #> [3,]  1.0  1.0    2"},{"path":"/reference/Gamma2chi.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"Transforms Gamma matrix definition Huesler--Reiss distribution corresponding extremal correlation \\(\\chi\\).","code":""},{"path":"/reference/Gamma2chi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"","code":"Gamma2chi(Gamma)"},{"path":"/reference/Gamma2chi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"Gamma Numeric matrix, positive entries.","code":""},{"path":"/reference/Gamma2chi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"Numeric matrix. extremal correlation coefficient.","code":""},{"path":"/reference/Gamma2chi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of the Huesler--Reiss variogram \\(\\Gamma\\) to extremal correlation \\(\\chi\\) — Gamma2chi","text":"formula transformation Gamma \\(\\chi\\) applied element-wise $$\\chi = 2 - 2 \\Phi(\\sqrt{\\Gamma} / 2),$$ \\(\\Phi\\) standard normal distribution function. inverse chi2Gamma.","code":""},{"path":"/reference/Gamma2chi_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"Computes theoretical \\(\\chi\\) coefficient 3 dimensions.","code":""},{"path":"/reference/Gamma2chi_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"","code":"Gamma2chi_3D(Gamma)"},{"path":"/reference/Gamma2chi_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"Gamma Numeric matrix \\(3\\times 3\\).","code":""},{"path":"/reference/Gamma2chi_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute theoretical \\(\\chi\\) in 3D — Gamma2chi_3D","text":"3-dimensional \\(\\chi\\) coefficient, .e., extremal correlation coefficient HR distribution. Note \\(0 \\leq \\chi \\leq 1\\).","code":""},{"path":"/reference/Gamma2graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of \\(\\Gamma\\) matrix to graph object — Gamma2graph","title":"Transformation of \\(\\Gamma\\) matrix to graph object — Gamma2graph","text":"Transforms Gamma matrix igraph object corresponding Huesler--Reiss extremal graphical model, plots (optionally).","code":""},{"path":"/reference/Gamma2graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of \\(\\Gamma\\) matrix to graph object — Gamma2graph","text":"","code":"Gamma2graph(Gamma, to_plot = TRUE, ...)"},{"path":"/reference/Gamma2graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of \\(\\Gamma\\) matrix to graph object — Gamma2graph","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. to_plot Logical. TRUE (default), plots resulting graph. ... Graphical parameters plot.igraph function package igraph.","code":""},{"path":"/reference/Gamma2graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of \\(\\Gamma\\) matrix to graph object — Gamma2graph","text":"Graph object igraph package. undirected graph.","code":""},{"path":"/reference/Gamma2graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of \\(\\Gamma\\) matrix to graph object — Gamma2graph","text":"variogram uniquely determines extremal graph structure corresponding Huesler--Reiss distribution. conditional independencies can identified inverses matrices \\(\\Sigma^{(k)}\\) defined equation (10) Engelke Hitz (2020) .","code":""},{"path":"/reference/Gamma2graph.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transformation of \\(\\Gamma\\) matrix to graph object — Gamma2graph","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/Gamma2graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformation of \\(\\Gamma\\) matrix to graph object — Gamma2graph","text":"","code":"Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  Gamma2graph(Gamma, to_plot = TRUE)  #> IGRAPH ecd1d04 U--- 4 4 --  #> + edges from ecd1d04: #> [1] 1--2 1--3 2--4 3--4"},{"path":"/reference/Gamma2par.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","title":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","text":"function returns vector containing upper triangular part matrix Gamma. Gamma already vector, returns .","code":""},{"path":"/reference/Gamma2par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","text":"","code":"Gamma2par(Gamma)"},{"path":"/reference/Gamma2par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","text":"Gamma Numeric \\(d \\times d\\) variogram matrix.","code":""},{"path":"/reference/Gamma2par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract upper triangular part of \\(\\Gamma\\) — Gamma2par","text":"Numeric vector \\(d\\) elements. upper triangular part given Gamma matrix.","code":""},{"path":"/reference/Sigma2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of \\(\\Sigma^{(k)}\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","title":"Transformation of \\(\\Sigma^{(k)}\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"Transforms \\(\\Sigma^{(k)}\\) matrix definition Huesler--Reiss distribution corresponding \\(\\Gamma\\) matrix.","code":""},{"path":"/reference/Sigma2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of \\(\\Sigma^{(k)}\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"","code":"Sigma2Gamma(S, k = NULL, full = FALSE)"},{"path":"/reference/Sigma2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of \\(\\Sigma^{(k)}\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"S Numeric \\((d - 1) \\times (d - 1)\\) covariance matrix \\(\\Sigma^{(k)}\\) definition Huesler--Reiss distribution. Numeric \\(d \\times d\\) covariance matrix full = TRUE, see full parameter. k Integer 1 (default value) d. Indicates matrix \\(\\Sigma^{(k)}\\) represented S. full Logical. true, kth row column \\(\\Sigma^{(k)}\\) included function returns \\(d \\times d\\) matrix. default, full = FALSE.","code":""},{"path":"/reference/Sigma2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of \\(\\Sigma^{(k)}\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"Numeric \\(d \\times d\\)  \\(\\Gamma\\) matrix.","code":""},{"path":"/reference/Sigma2Gamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of \\(\\Sigma^{(k)}\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"k 1 d, \\(\\Sigma^{(k)}\\) matrix size \\((d - 1) \\times (d - 1)\\) definition Huesler--Reiss distribution can transformed corresponding \\(d \\times d\\) \\(\\Gamma\\) matrix. full = TRUE, \\(\\Sigma^{(k)}\\) must \\(d \\times d\\) matrix kth row column containing zeros. details see Engelke Hitz (2020) . inverse function Gamma2Sigma.","code":""},{"path":"/reference/Sigma2Gamma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transformation of \\(\\Sigma^{(k)}\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/Sigma2Gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformation of \\(\\Sigma^{(k)}\\) matrix to \\(\\Gamma\\) matrix — Sigma2Gamma","text":"","code":"Sigma1 <- rbind(   c(1.5, 0.5, 1),   c(0.5, 1.5, 1),   c(1, 1, 2) ) Sigma2Gamma(Sigma1, k = 1, full = FALSE) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  1.5  1.5  2.0 #> [2,]  1.5  0.0  2.0  1.5 #> [3,]  1.5  2.0  0.0  1.5 #> [4,]  2.0  1.5  1.5  0.0"},{"path":"/reference/Theta2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Theta2Gamma","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Theta2Gamma","text":"Transformation \\(\\Gamma\\) matrix \\(\\Theta\\) matrix","code":""},{"path":"/reference/Theta2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of \\(\\Gamma\\) matrix to \\(\\Theta\\) matrix — Theta2Gamma","text":"","code":"Theta2Gamma(Theta, k = NULL)"},{"path":"/reference/V_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute exponent measure — V_HR","title":"Compute exponent measure — V_HR","text":"Computes exponent measure HR distribution.","code":""},{"path":"/reference/V_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute exponent measure — V_HR","text":"","code":"V_HR(x, par)"},{"path":"/reference/V_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute exponent measure — V_HR","text":"x Numeric vector \\(d\\) positive elements exponent measure evaluated. par Numeric vector \\(\\frac{d(d - 1)}{2}\\) elements. represents upper triangular portion variogram matrix \\(\\Gamma\\).","code":""},{"path":"/reference/V_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute exponent measure — V_HR","text":"Numeric. exponent measure HR distribution.","code":""},{"path":"/reference/Zmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the Z-matrix — Zmatrix","title":"Computes the Z-matrix — Zmatrix","text":"Copied R package \"golazo\" kind permission Piotr Zwiernik piotr.zwiernik@utoronto.ca. function outputs Z matrix, , unique ultrametric matrix dominating S. matrix used connstruct starting point GOLAZO algorithm L=0 U strictly positive (-diagonal entries).","code":""},{"path":"/reference/Zmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the Z-matrix — Zmatrix","text":"","code":"Zmatrix(S)"},{"path":"/reference/Zmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the Z-matrix — Zmatrix","text":"S covariance matrix","code":""},{"path":"/reference/censor.html","id":null,"dir":"Reference","previous_headings":"","what":"Censor dataset — censor","title":"Censor dataset — censor","text":"Censors row matrix x vector p.","code":""},{"path":"/reference/censor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Censor dataset — censor","text":"","code":"censor(x, p)"},{"path":"/reference/censor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Censor dataset — censor","text":"x Numeric matrix \\(n \\times d\\). p Numeric vector \\(d\\) elements.","code":""},{"path":"/reference/censor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Censor dataset — censor","text":"Numeric matrix \\(n \\times d\\).","code":""},{"path":"/reference/check_Gamma_and_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input graph and Gamma matrix — check_Gamma_and_graph","title":"Check input graph and Gamma matrix — check_Gamma_and_graph","text":"Checks converts (incomplete) Gamma matrix graph given HR graphical model.","code":""},{"path":"/reference/check_Gamma_and_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input graph and Gamma matrix — check_Gamma_and_graph","text":"","code":"check_Gamma_and_graph(Gamma, graph = NULL, graph_type = \"general\")"},{"path":"/reference/check_Gamma_and_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input graph and Gamma matrix — check_Gamma_and_graph","text":"Gamma Gamma matrix vector entries corresponding edges graph graph graph object NULL graph structure specified NA Gamma matrix graph_type Passed check_graph().","code":""},{"path":"/reference/check_Gamma_and_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input graph and Gamma matrix — check_Gamma_and_graph","text":"list containing two named entries, Gamma graph containing input matrix graph. Throws error input valid.","code":""},{"path":[]},{"path":"/reference/check_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check input graph — check_graph","title":"Check input graph — check_graph","text":"Checks input graph valid graph extremal graphical model. necessary, converts graph undirected graph.","code":""},{"path":"/reference/check_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check input graph — check_graph","text":"","code":"check_graph(   graph,   graph_type = \"general\",   check_connected = TRUE,   nVertices = NULL )"},{"path":"/reference/check_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check input graph — check_graph","text":"graph igraph::graph object graph_type \"general\", \"decomposable\", \"block\", \"tree\" required type graph check_connected Whether check graph connected nVertcies number vertices required graph","code":""},{"path":"/reference/check_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check input graph — check_graph","text":"given graph, necessary converted undirected. graph valid error thrown.","code":""},{"path":[]},{"path":"/reference/chi2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"Transforms extremal correlation \\(\\chi\\) Gamma matrix definition Huesler--Reiss distribution.","code":""},{"path":"/reference/chi2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"","code":"chi2Gamma(chi)"},{"path":"/reference/chi2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"chi Numeric matrix, entries 0 1.","code":""},{"path":"/reference/chi2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"Numeric matrix. \\(\\Gamma\\) parameters Huesler--Reiss distribution.","code":""},{"path":"/reference/chi2Gamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation of extremal correlation \\(\\chi\\) to the Huesler--Reiss variogram \\(\\Gamma\\) — chi2Gamma","text":"formula transformation chi \\(\\Gamma\\) applied element-wise $$\\Gamma = (2 \\Phi^{-1}(1 - 0.5 \\chi))^2,$$ \\(\\Phi^{-1}\\) inverse standard normal distribution function. inverse Gamma2chi.","code":""},{"path":"/reference/complete_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of Gamma matrices — complete_Gamma","title":"Completion of Gamma matrices — complete_Gamma","text":"Given graph Gamma matrix specified (least) edges graph, returns full Gamma matrix implied conditional independencies.","code":""},{"path":"/reference/complete_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of Gamma matrices — complete_Gamma","text":"","code":"complete_Gamma(Gamma, graph = NULL, allowed_graph_type = \"general\", ...)"},{"path":"/reference/complete_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completion of Gamma matrices — complete_Gamma","text":"Gamma Numeric \\(d \\times d\\) variogram matrix. graph Graph object igraph package. graph must connected, undirected graph. Can also implied NA entries Gamma decomposable. allowed_graph_type passed graph_type check_graph(). Can used throw error graph specified type, influence completion algorithm. ... arguments passed complete_gamma_general() graph decomposable","code":""},{"path":"/reference/complete_Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completion of Gamma matrices — complete_Gamma","text":"Completed \\(d \\times d\\)  Gamma matrix.","code":""},{"path":"/reference/complete_Gamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Completion of Gamma matrices — complete_Gamma","text":"graph decomposable, Gamma needs specified edges graph graph structure can implied setting remaining entries NA. graph decomposable, algorithm requires fully specified variogram matrix Gamma graph structure needs explicitly provided graph. decomposable graph suffices specify dependence parameters Huesler--Reiss distribution within cliques graph, remaining entries implied conditional independence properties. details see Engelke Hitz (2020) .","code":""},{"path":"/reference/complete_Gamma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Completion of Gamma matrices — complete_Gamma","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":[]},{"path":"/reference/complete_Gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Completion of Gamma matrices — complete_Gamma","text":"","code":"## Block graph: Gamma <- rbind(   c(0, .5, NA, NA),   c(.5, 0, 1, 1.5),   c(NA, 1, 0, .8),   c(NA, 1.5, .8, 0) )  complete_Gamma(Gamma) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.5  2.0 #> [2,]  0.5  0.0  1.0  1.5 #> [3,]  1.5  1.0  0.0  0.8 #> [4,]  2.0  1.5  0.8  0.0  ## Alternative representation of the same completion problem: my_graph <- igraph::graph_from_adjacency_matrix(rbind(   c(0, 1, 0, 0),   c(1, 0, 1, 1),   c(0, 1, 0, 1),   c(0, 1, 1, 0) ), mode = \"undirected\") Gamma_vec <- c(.5, 1, 1.5, .8) complete_Gamma(Gamma_vec, my_graph) #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.5  2.0 #> [2,]  0.5  0.0  1.0  1.5 #> [3,]  1.5  1.0  0.0  0.8 #> [4,]  2.0  1.5  0.8  0.0  ## Decomposable graph: G <- rbind( c(0, 5, 7, 6, NA), c(5, 0, 14, 15, NA), c(7, 14, 0, 5, 5), c(6, 15, 5, 0, 6), c(NA, NA, 5, 6, 0) )  complete_Gamma(G) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  0.0  5.0    7    6  9.6 #> [2,]  5.0  0.0   14   15 17.4 #> [3,]  7.0 14.0    0    5  5.0 #> [4,]  6.0 15.0    5    0  6.0 #> [5,]  9.6 17.4    5    6  0.0  ## Non-decomposable graph: G <- rbind( c(0, 5, 7, 6, 6), c(5, 0, 14, 15, 13), c(7, 14, 0, 5, 5), c(6, 15, 5, 0, 6), c(6, 13, 5, 6, 0) ) g <- igraph::make_ring(5)  complete_Gamma(G, g) #>          [,1]      [,2]      [,3]     [,4]     [,5] #> [1,]  0.00000  5.000000 12.723425 10.37104 6.000000 #> [2,]  5.00000  0.000000 14.000000 12.72342 9.676194 #> [3,] 12.72342 14.000000  0.000000  5.00000 9.676194 #> [4,] 10.37104 12.723425  5.000000  0.00000 6.000000 #> [5,]  6.00000  9.676194  9.676194  6.00000 0.000000"},{"path":"/reference/complete_Gamma_decomposable.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"Given decomposable graph incomplete variogram matrix Gamma, returns full Gamma matrix implied conditional independencies.","code":""},{"path":"/reference/complete_Gamma_decomposable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"","code":"complete_Gamma_decomposable(Gamma, graph)"},{"path":"/reference/complete_Gamma_decomposable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"Gamma variogram matrix specified edges graph diagonals. entries ignored. graph decomposable igraph::graph object","code":""},{"path":"/reference/complete_Gamma_decomposable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completion of decomposable Gamma matrices — complete_Gamma_decomposable","text":"complete variogram matrix agrees Gamma entries corresponding edges graph diagonals. corresponding \\(\\Theta\\) matrix pdocued Gamma2Theta zeros remaining entries.","code":""},{"path":[]},{"path":"/reference/complete_Gamma_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of non-decomposable Gamma matrices — complete_Gamma_general","title":"Completion of non-decomposable Gamma matrices — complete_Gamma_general","text":"Given graph variogram matrix Gamma, returns full Gamma matrix implied conditional independencies. function uses convergent iterative algorithm.","code":""},{"path":"/reference/complete_Gamma_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of non-decomposable Gamma matrices — complete_Gamma_general","text":"","code":"complete_Gamma_general(Gamma, graph, N = 1000, tol = 0, check_tol = 100)"},{"path":"/reference/complete_Gamma_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completion of non-decomposable Gamma matrices — complete_Gamma_general","text":"Gamma complete variogram matrix (without graphical structure) graph igraph::graph object N maximal number iterations algorithm tol tolerance use checking zero entries Theta check_tol many iterations check tolerance Theta","code":""},{"path":"/reference/complete_Gamma_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completion of non-decomposable Gamma matrices — complete_Gamma_general","text":"matrix agrees Gamma entries corresponding edges graph diagonals. corresponding \\(\\Theta\\) matrix produced Gamma2Theta values close zero remaining entries (close depends input number iterations).","code":""},{"path":[]},{"path":"/reference/complete_Gamma_one_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","title":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","text":"Given decomposable graph consisting two cliques incomplete variogram matrix Gamma, returns full Gamma matrix implied conditional independencies.","code":""},{"path":"/reference/complete_Gamma_one_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","text":"","code":"complete_Gamma_one_step(Gamma, nA, nC, nB)"},{"path":"/reference/complete_Gamma_one_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","text":"Gamma variogram matrix specified edges graph diagonals. entries ignored. graph decomposable igraph::graph object two cliques non-empty separator set","code":""},{"path":"/reference/complete_Gamma_one_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completion of two-clique decomposable Gamma matrices — complete_Gamma_one_step","text":"complete variogram matrix agrees Gamma entries corresponding edges graph diagonals. corresponding \\(\\Theta\\) matrix pdocued Gamma2Theta zeros remaining entries.","code":""},{"path":[]},{"path":"/reference/danube.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper Danube basin dataset. — danube","title":"Upper Danube basin dataset. — danube","text":"dataset containing river discharge data tributaries Danube.","code":""},{"path":"/reference/danube.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper Danube basin dataset. — danube","text":"","code":"danube"},{"path":"/reference/danube.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Upper Danube basin dataset. — danube","text":"object class list length 4.","code":""},{"path":"/reference/danube.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Upper Danube basin dataset. — danube","text":"Bavarian Environmental Agency http://www.gkd.bayern.de.","code":""},{"path":"/reference/data2mpareto.html","id":null,"dir":"Reference","previous_headings":"","what":"Data standardization to multivariate Pareto scale — data2mpareto","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"Transforms data matrix empirically multivariate Pareto scale.","code":""},{"path":"/reference/data2mpareto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"","code":"data2mpareto(data, p)"},{"path":"/reference/data2mpareto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. p Numeric 0 1. Probability used quantile threshold data.","code":""},{"path":"/reference/data2mpareto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"Numeric matrix \\(m \\times d\\), \\(m\\) number rows original data matrix threshold.","code":""},{"path":"/reference/data2mpareto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"columns data matrix first transformed empirically standard Pareto distributions. , observations least one component exceeds p-quantile standard Pareto distribution kept. observations finally divided p-quantile standard Pareto distribution standardize multivariate Pareto scale.","code":""},{"path":"/reference/data2mpareto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data standardization to multivariate Pareto scale — data2mpareto","text":"","code":"n <- 20 d <- 4 p <- .8 G <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  set.seed(123) my_data <- rmstable(n, \"HR\", d = d, par = G) data2mpareto(my_data, p) #>            [,1]      [,2]      [,3]      [,4] #>  [1,] 0.2801120 0.4761905 1.5873016 0.7936508 #>  [2,] 1.1904762 0.6802721 0.3968254 0.2645503 #>  [3,] 0.6802721 0.3663004 1.1904762 0.3401361 #>  [4,] 0.7936508 0.5952381 0.9523810 1.5873016 #>  [5,] 2.3809524 1.5873016 0.6802721 0.6802721 #>  [6,] 0.5291005 0.3401361 0.2506266 2.3809524 #>  [7,] 0.4329004 2.3809524 0.4329004 1.1904762 #>  [8,] 1.5873016 0.9523810 4.7619048 0.5291005 #>  [9,] 4.7619048 1.1904762 2.3809524 4.7619048 #> [10,] 0.3663004 4.7619048 0.2380952 0.2801120"},{"path":"/reference/dim_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Gamma square matrix? — dim_Gamma","title":"Is Gamma square matrix? — dim_Gamma","text":"Check Gamma matrix square matrix. , return dimension. Else, raise error.","code":""},{"path":"/reference/dim_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Gamma square matrix? — dim_Gamma","text":"","code":"dim_Gamma(Gamma)"},{"path":"/reference/dim_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Gamma square matrix? — dim_Gamma","text":"Gamma Numeric matrix. Matrix representing variogram HR distribution.","code":""},{"path":"/reference/dim_Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Gamma square matrix? — dim_Gamma","text":"Numeric. dimension matrix (number rows columns, matrix symmetric). Else, raises error.","code":""},{"path":"/reference/eglasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting extremal graphical lasso — eglasso","title":"Fitting extremal graphical lasso — eglasso","text":"Fits extremal minimum spanning tree","code":""},{"path":"/reference/eglasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting extremal graphical lasso — eglasso","text":"","code":"eglasso(   Gamma,   rholist = c(0.1, 0.15, 0.19, 0.205),   reg_method = c(\"mb\", \"glasso\"),   eps = 0.5,   complete_Gamma = FALSE )"},{"path":"/reference/eglasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting extremal graphical lasso — eglasso","text":"Gamma Numeric matrix \\(n\\times d\\). represents variogram matrix \\(\\Gamma\\). rholist Numeric vector non-negative regularization parameters lasso. details see glasso::glassopath. reg_method One \"mb\" \"glasso\". Default reg_method = \"mb\". eps Regularization parameter covariance matrix. Default eps = 0.5. complete_Gamma Whether want complete Gamma matrix. Default complete_Gamma = FALSE.","code":""},{"path":"/reference/eglasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting extremal graphical lasso — eglasso","text":"List made : graph list igraph::graph objects representing fitted graphs rho rholist. Gamma list numeric \\(d\\times d\\) estimated variogram matrices \\(\\Gamma\\) corresponding fitted graphs, rho rholist. rholist list penalty coefficients.","code":""},{"path":"/reference/eglearn.html","id":null,"dir":"Reference","previous_headings":"","what":"Learning extremal graph structure — eglearn","title":"Learning extremal graph structure — eglearn","text":"Fits extremal graph structure using neighborhood selection approach (see Meinshausen Bühlmann (2006) ) graphical lasso (see Friedman et al. (2008) ).","code":""},{"path":"/reference/eglearn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learning extremal graph structure — eglearn","text":"","code":"eglearn(   data,   p = NULL,   rholist = c(0.1, 0.15, 0.19, 0.205),   reg_method = c(\"ns\", \"glasso\"),   complete_Gamma = FALSE )"},{"path":"/reference/eglearn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learning extremal graph structure — eglearn","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data. rholist Numeric vector non-negative regularization parameters lasso. Default rholist = c(0.1, 0.15, 0.19, 0.205). details see glasso::glassopath. reg_method One \"ns\", \"glasso\", neighborhood selection graphical lasso, respectively. Default reg_method = \"ns\". details see Meinshausen Bühlmann (2006) , Friedman et al. (2008) . complete_Gamma Whether want try fto complete Gamma matrix. Default complete_Gamma = FALSE.","code":""},{"path":"/reference/eglearn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Learning extremal graph structure — eglearn","text":"List made : graph list igraph::graph objects representing fitted graphs rho rholist. Gamma list numeric \\(d\\times d\\) estimated variogram matrices \\(\\Gamma\\) corresponding fitted graphs, rho rholist. complete_Gamma = FALSE underlying graph connected, returns NA. rholist list penalty coefficients. graph_ic list igraph::graph objects representing optimal graph according aic, bic, mbic information criteria. reg_method = \"glasso\", returns list NA. Gamma_ic list numeric \\(d\\times d\\) estimated variogram matrices \\(\\Gamma\\) corresponding aic, bic, mbic information criteria. reg_method = \"glasso\", complete_Gamma = FALSE, underlying graph connected, returns list NA.","code":""},{"path":"/reference/emp_chi.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"Estimates empirically matrix bivariate extremal correlation coefficients \\(\\chi\\).","code":""},{"path":"/reference/emp_chi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"","code":"emp_chi(data, p = NULL)"},{"path":"/reference/emp_chi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data.","code":""},{"path":"/reference/emp_chi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"Numeric matrix \\(d\\times d\\). matrix contains bivariate extremal coefficients \\(\\chi_{ij}\\), \\(, j = 1, ..., d\\).","code":""},{"path":"/reference/emp_chi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical estimation of extremal correlation matrix \\(\\chi\\) — emp_chi","text":"","code":"n <- 100 d <- 4 p <- .8 Gamma <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  set.seed(123) my_data <- rmstable(n, \"HR\", d = d, par = Gamma) emp_chi(my_data, p) #>      [,1] [,2] [,3] [,4] #> [1,] 1.00 0.65 0.55 0.45 #> [2,] 0.65 1.00 0.60 0.55 #> [3,] 0.55 0.60 1.00 0.60 #> [4,] 0.45 0.55 0.60 1.00"},{"path":"/reference/emp_chi_multdim.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"Estimates \\(d\\)-dimensional extremal correlation coefficient \\(\\chi\\) empirically.","code":""},{"path":"/reference/emp_chi_multdim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"","code":"emp_chi_multdim(data, p = NULL)"},{"path":"/reference/emp_chi_multdim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data.","code":""},{"path":"/reference/emp_chi_multdim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"Numeric. empirical \\(d\\)-dimensional extremal correlation coefficient \\(\\chi\\) data.","code":""},{"path":"/reference/emp_chi_multdim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical estimation of extremal correlation \\(\\chi\\) — emp_chi_multdim","text":"","code":"n <- 100 d <- 2 p <- .8 G <- cbind(   c(0, 1.5),   c(1.5, 0) )  set.seed(123) my_data <- rmstable(n, \"HR\", d = d, par = G) emp_chi_multdim(my_data, p) #> [1] 0.55"},{"path":"/reference/emp_vario.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the variogram matrix \\(\\Gamma\\) of the Huesler--Reiss distribution — emp_vario","title":"Estimation of the variogram matrix \\(\\Gamma\\) of the Huesler--Reiss distribution — emp_vario","text":"Estimates variogram Huesler--Reiss distribution empirically.","code":""},{"path":"/reference/emp_vario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the variogram matrix \\(\\Gamma\\) of the Huesler--Reiss distribution — emp_vario","text":"","code":"emp_vario(data, k = NULL, p = NULL)"},{"path":"/reference/emp_vario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the variogram matrix \\(\\Gamma\\) of the Huesler--Reiss distribution — emp_vario","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. k Integer 1 \\(d\\). Component multivariate observations conditioned larger threshold p. NULL (default), average k returned. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data.","code":""},{"path":"/reference/emp_vario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the variogram matrix \\(\\Gamma\\) of the Huesler--Reiss distribution — emp_vario","text":"Numeric matrix \\(d \\times d\\). estimated variogram Huesler--Reiss distribution.","code":""},{"path":"/reference/emst.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting extremal minimum spanning tree — emst","title":"Fitting extremal minimum spanning tree — emst","text":"Fits extremal minimum spanning tree, edge weights : negative maximized log-likelihoods bivariate Huesler--Reiss distributions, method = \"ML\". See Engelke Hitz (2020)  details. empirical extremal variogram, method = \"vario\". See Engelke Volgushev (2020)  details. empirical extremal correlation, method = \"chi\". See Engelke Volgushev (2020)  details.","code":""},{"path":"/reference/emst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting extremal minimum spanning tree — emst","text":"","code":"emst(data, p = NULL, method = c(\"vario\", \"ML\", \"chi\"), cens = FALSE)"},{"path":"/reference/emst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting extremal minimum spanning tree — emst","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data. method One \"vario\", \"ML\", \"chi\". Default method = \"vario\". cens Logical. argument considered method = \"ML\". TRUE, censored likelihood contributions used components threshold. default, cens = FALSE.","code":""},{"path":"/reference/emst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting extremal minimum spanning tree — emst","text":"List consisting : graph: igraph::graph() object. fitted minimum spanning tree. Gamma: Numeric \\(d\\times d\\) estimated variogram matrix \\(\\Gamma\\) corresponding fitted minimum spanning tree.","code":""},{"path":"/reference/emst.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting extremal minimum spanning tree — emst","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932. Engelke S, Volgushev S (2020). “Structure learning extremal tree models.” Available https://arxiv.org/abs/2012.06179., https://arxiv.org/abs/2012.06179.","code":""},{"path":"/reference/emst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting extremal minimum spanning tree — emst","text":"","code":"## Fitting a 4-dimensional HR minimum spanning tree  my_graph <- igraph::graph_from_adjacency_matrix(   rbind(     c(0, 1, 0, 0),     c(1, 0, 1, 1),     c(0, 1, 0, 0),     c(0, 1, 0, 0)   ),   mode = \"undirected\" ) n <- 100 Gamma_vec <- c(.5, 1.4, .8) complete_Gamma(Gamma = Gamma_vec, graph = my_graph) ## full Gamma matrix #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.9  1.3 #> [2,]  0.5  0.0  1.4  0.8 #> [3,]  1.9  1.4  0.0  2.2 #> [4,]  1.3  0.8  2.2  0.0  set.seed(123) my_data <- rmpareto_tree(n, \"HR\", tree = my_graph, par = Gamma_vec) my_fit <- emst(my_data, p = NULL, method = \"ML\", cens = FALSE)"},{"path":"/reference/emtp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"function implements block descent algorithm find maximum Gaussian log-likelihood constraint concentration matrix Laplacian matrix.","code":""},{"path":"/reference/emtp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"","code":"emtp2(G, tol = 1e-06, verbose = TRUE, initial_point = TRUE)"},{"path":"/reference/emtp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"G conditionally negative semidefinite matrix. typically empirical variogram matrix. tol convergence tolerance (default tol=1e-7). algorithm terminates sum absolute differences two iterations tol. verbose TRUE (default) output printed. initial_point TRUE (default), algorithm construct initial point iteration steps.","code":""},{"path":"/reference/emtp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs Gaussian likelihood optimization under Laplacian matrix constraints. — emtp2","text":"G_emtp2 optimal value variogram matrix number iterations","code":""},{"path":"/reference/fit_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Experimental: Fit graph using empirical Theta matrix — fit_graph","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph","text":"Fits graph empirical Gamma matrix computing corresponding Theta matrix using Gamma2Theta() greedily chooses m edges correspond high absolute values Theta.","code":""},{"path":"/reference/fit_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph","text":"","code":"fit_graph(data, m = NULL, Gamma_emp = NULL)"},{"path":"/reference/fit_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph","text":"data (standardized) data compute Gamma m number edges add, defaults number edges tree Gamma_emp empirical Gamma matrix (can NULL data given)","code":""},{"path":"/reference/fit_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Experimental: Fit graph using empirical Theta matrix — fit_graph","text":"list containing igraph::graph object fitted Gamma matrix","code":""},{"path":"/reference/flights.html","id":null,"dir":"Reference","previous_headings":"","what":"Flights delay data. — flights","title":"Flights delay data. — flights","text":"dataset containing daily total delays (Jan 1, 2015 -- Dec 31, 2015) Southwest Airlines different airports California, Nevada, Arizona, Utah, Texas.","code":""},{"path":"/reference/flights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flights delay data. — flights","text":"","code":"flights"},{"path":"/reference/flights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Flights delay data. — flights","text":"object class list length 3.","code":""},{"path":"/reference/flights.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flights delay data. — flights","text":"U.S. Department Transportation's (DOT) Bureau Transportation Statistics https://www.bts.gov/.","code":""},{"path":"/reference/fmpareto_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR","text":"Fits parameters multivariate Huesler--Reiss Pareto distribution using (censored) likelihood estimation.","code":""},{"path":"/reference/fmpareto_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR","text":"","code":"fmpareto_HR(   data,   p = NULL,   cens = FALSE,   init,   fixParams = integer(0),   maxit = 100,   graph = NULL,   method = \"BFGS\" )"},{"path":"/reference/fmpareto_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data. cens Logical. true, censored likelihood contributions used components threshold. default, cens = FALSE. init Numeric vector. Initial parameter values optimization. graph given, entries correspond edges graph. fixParams Numeric vector. Indices parameter vectors kept fixed optimization. Default integer(0). maxit Positive integer. maximum number iterations optimization. graph Graph object igraph package NULL. provided, graph must undirected block graph, .e., decomposable, connected graph singleton separator sets. method String. valid optimization method used function optim. default, method = \"BFGS\".","code":""},{"path":"/reference/fmpareto_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR","text":"List consisting : convergence: Logical. Indicates whether optimization converged . par: Numeric vector. Optimized parameters fixed parameters. par_opt: Numeric. Optimized parameters. Gamma: Numeric matrix \\(d \\times d\\). Fitted variogram matrix. nllik: Numeric. Optimized value negative log-likelihood function. hessian: Numeric matrix. Estimated Hessian matrix estimated parameters.","code":""},{"path":"/reference/fmpareto_HR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distribution — fmpareto_HR","text":"graph = NULL, parameters \\(d \\times d\\) parameter matrix \\(\\Gamma\\) Huesler--Reiss Pareto distribution fitted. graph provided, conditional independence structure graph assumed parameters edges fitted. cases full likelihood used therefore function used small dimensions, say, \\(d<5\\). models higher dimensions fitting can done separately cliques; see fmpareto_graph_HR.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on block graphs — fmpareto_graph_HR","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on block graphs — fmpareto_graph_HR","text":"Fits parameters multivariate Huesler--Reiss Pareto distribution using (censored) likelihood estimation. See Engelke Hitz (2020)  details.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on block graphs — fmpareto_graph_HR","text":"","code":"fmpareto_graph_HR(   data,   graph,   p = NULL,   method = c(\"ML\", \"vario\"),   cens = FALSE )"},{"path":"/reference/fmpareto_graph_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on block graphs — fmpareto_graph_HR","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. graph Undirected graph object igraph package. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data. method One \"ML\", \"vario\". Default method = \"ML\". cens Logical. true, censored likelihood contributions used components threshold. default, cens = FALSE.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on block graphs — fmpareto_graph_HR","text":"List consisting : graph: igraph::graph() object. Gamma: Numeric \\(d\\times d\\) estimated variogram matrix \\(\\Gamma\\).","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on block graphs — fmpareto_graph_HR","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/fmpareto_graph_HR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on block graphs — fmpareto_graph_HR","text":"","code":"## Fitting a 4-dimensional HR distribution  my_graph <- igraph::graph_from_adjacency_matrix(   rbind(     c(0, 1, 0, 0),     c(1, 0, 1, 1),     c(0, 1, 0, 0),     c(0, 1, 0, 0)   ),   mode = \"undirected\" ) n <- 100 Gamma_vec <- c(.5, 1.4, .8) complete_Gamma(Gamma = Gamma_vec, graph = my_graph) ## full Gamma matrix #>      [,1] [,2] [,3] [,4] #> [1,]  0.0  0.5  1.9  1.3 #> [2,]  0.5  0.0  1.4  0.8 #> [3,]  1.9  1.4  0.0  2.2 #> [4,]  1.3  0.8  2.2  0.0 edges_to_add <- rbind(c(1, 3), c(1, 4), c(3, 4))  set.seed(123) my_data <- rmpareto_tree(n, \"HR\", tree = my_graph, par = Gamma_vec) my_fit <- fmpareto_graph_HR(my_data,   graph = my_graph, method = \"ML\",   p = NULL, cens = FALSE )"},{"path":"/reference/fmpareto_graph_HR_decomposable.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on decomposable graphs — fmpareto_graph_HR_decomposable","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on decomposable graphs — fmpareto_graph_HR_decomposable","text":"Similar fmpareto_graph_HR(). Differences : Works decomposable graph, just block graphs support edges_to_add","code":""},{"path":"/reference/fmpareto_graph_HR_decomposable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on decomposable graphs — fmpareto_graph_HR_decomposable","text":"","code":"fmpareto_graph_HR_decomposable(data, graph, p = NULL, cens = FALSE)"},{"path":"/reference/fmpareto_graph_HR_decomposable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on decomposable graphs — fmpareto_graph_HR_decomposable","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. graph Decomposable graph object igraph package. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data. cens Logical. true, censored likelihood contributions used components threshold. default, cens = FALSE.","code":""},{"path":"/reference/fmpareto_graph_HR_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on non-decomposable graphs — fmpareto_graph_HR_general","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on non-decomposable graphs — fmpareto_graph_HR_general","text":"Works computing empirical Gamma matrix fitting given graph.","code":""},{"path":"/reference/fmpareto_graph_HR_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on non-decomposable graphs — fmpareto_graph_HR_general","text":"","code":"fmpareto_graph_HR_general(data, graph, p = NULL, ...)"},{"path":"/reference/fmpareto_graph_HR_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter fitting for multivariate Huesler--Reiss Pareto distributions on non-decomposable graphs — fmpareto_graph_HR_general","text":"data Numeric matrix size \\(n\\times d\\), \\(n\\) number observations \\(d\\) dimension. graph Connected graph object igraph package. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data. ... arguments passed complete_gamma_general() graph decomposable","code":""},{"path":"/reference/generate_random_chordal_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random chordal graph — generate_random_chordal_graph","title":"Generate a random chordal graph — generate_random_chordal_graph","text":"Generates random chordal graph starting (small) complete graph adding new cliques specified size reached. sizes cliques separators can specified.","code":""},{"path":"/reference/generate_random_chordal_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random chordal graph — generate_random_chordal_graph","text":"","code":"generate_random_chordal_graph(   d,   cMin = 2,   cMax = 6,   sMin = 1,   sMax = 4,   block_graph = FALSE,   ... )"},{"path":"/reference/generate_random_chordal_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random chordal graph — generate_random_chordal_graph","text":"d Number vertices graph cMin Minimal size cliques (last clique might smaller necessary) cMax Maximal size cliques sMin Minimal size separators sMax Maximal size separators block_graph Force sMin == sMax == 1 produce block graph ... Ignored, allowed compatibility","code":""},{"path":"/reference/generate_random_chordal_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random chordal graph — generate_random_chordal_graph","text":"igraph::graph object","code":""},{"path":[]},{"path":"/reference/generate_random_connected_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random connected graph — generate_random_connected_graph","title":"Generate a random connected graph — generate_random_connected_graph","text":"Generates random connected graph. First tries generate Erdoes-Renyi graph, fails, falls back producing tree adding random edges tree.","code":""},{"path":"/reference/generate_random_connected_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random connected graph — generate_random_connected_graph","text":"","code":"generate_random_connected_graph(   d,   m = NULL,   p = 2/(d + 1),   maxTries = 1000,   ... )"},{"path":"/reference/generate_random_connected_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random connected graph — generate_random_connected_graph","text":"d Number vertices graph m Number edges graph (specify p) p Probability edge graph (specify m) maxTries Maximum number tries produce connected Eroes-Renyi graph ... Ignored, allowed compatibility","code":""},{"path":"/reference/generate_random_connected_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random connected graph — generate_random_connected_graph","text":"igraph::graph object","code":""},{"path":[]},{"path":"/reference/generate_random_graphical_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","title":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","text":"Generates valid Gamma matrix conditional independence structure specified graph","code":""},{"path":"/reference/generate_random_graphical_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","text":"","code":"generate_random_graphical_Gamma(graph, ...)"},{"path":"/reference/generate_random_graphical_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random Gamma matrix for a given graph — generate_random_graphical_Gamma","text":"graph igraph::graph object ... Furhter arguments passed generate_random_spd_matrix()","code":""},{"path":[]},{"path":"/reference/generate_random_integer_Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"Generates random variogram Matrix producing \\((d-1) \\times (d-1)\\) matrix B random integer entries -b b, computing S = B %*% t(B), passing S Sigma2Gamma(). process repeated increasing b valid Gamma matrix produced.","code":""},{"path":"/reference/generate_random_integer_Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"","code":"generate_random_integer_Gamma(d, b = 2, b_step = 1)"},{"path":"/reference/generate_random_integer_Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"d Number rows/columns output matrix b Initial b used algorithm described b_step much b increased iteration","code":""},{"path":"/reference/generate_random_integer_Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"\\(d \\times d\\) variogram matrix integer entries","code":""},{"path":[]},{"path":"/reference/generate_random_integer_Gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random Gamma matrix containing only integers — generate_random_integer_Gamma","text":"","code":"generate_random_integer_Gamma(5, 2, 0.1) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    2    6    3    7 #> [2,]    2    0   14    7    9 #> [3,]    6   14    0    9   13 #> [4,]    3    7    9    0   14 #> [5,]    7    9   13   14    0"},{"path":"/reference/generate_random_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random Hüsler--Reiss Models — generate_random_model","title":"Generate random Hüsler--Reiss Models — generate_random_model","text":"Generates random connected graph Gamma matrix conditional independence structure corresponding graph.","code":""},{"path":"/reference/generate_random_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random Hüsler--Reiss Models — generate_random_model","text":"","code":"generate_random_model(d, graph_type = \"tree\", ...)"},{"path":"/reference/generate_random_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random Hüsler--Reiss Models — generate_random_model","text":"d Number vertices graph graph_type \"tree\", \"block\", \"decomposable\", \"general\" ... arguments passed functions generating graph Gamma matrix","code":""},{"path":[]},{"path":"/reference/generate_random_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random Hüsler--Reiss Models — generate_random_model","text":"","code":"set.seed(1) d <- 12  generate_random_model(d, 'tree') #> $graph #> IGRAPH 4a9257a U--- 12 11 --  #> + edges from 4a9257a: #>  [1] 1-- 7 1--12 2-- 3 3-- 8 3-- 9 4-- 5 4-- 6 6--10 7--10 7--11 9--10 #>  #> $Gamma #>            [,1]      [,2]      [,3]       [,4]       [,5]      [,6]      [,7] #>  [1,] 0.0000000 2.6720780 2.0022634 1.75490900 1.84728711 1.5147334 0.4817166 #>  [2,] 2.6720780 0.0000000 0.6698146 1.80053975 1.89291786 1.5603642 2.1903614 #>  [3,] 2.0022634 0.6698146 0.0000000 1.13072516 1.22310327 0.8905496 1.5205468 #>  [4,] 1.7549090 1.8005397 1.1307252 0.00000000 0.09237811 0.2401756 1.2731924 #>  [5,] 1.8472871 1.8929179 1.2231033 0.09237811 0.00000000 0.3325537 1.3655705 #>  [6,] 1.5147334 1.5603642 0.8905496 0.24017559 0.33255370 0.0000000 1.0330168 #>  [7,] 0.4817166 2.1903614 1.5205468 1.27319238 1.36557049 1.0330168 0.0000000 #>  [8,] 2.3459810 1.0135322 0.3437176 1.47444277 1.56682088 1.2342672 1.8642644 #>  [9,] 1.8552114 0.8168666 0.1470520 0.98367317 1.07605128 0.7434976 1.3734948 #> [10,] 1.3132236 1.3588544 0.6890398 0.44168538 0.53406349 0.2015098 0.8315070 #> [11,] 1.2638652 2.9725099 2.3026953 2.05534092 2.14771903 1.8151653 0.7821485 #> [12,] 1.0796174 3.7516954 3.0818808 2.83452640 2.92690451 2.5943508 1.5613340 #>            [,8]      [,9]     [,10]     [,11]    [,12] #>  [1,] 2.3459810 1.8552114 1.3132236 1.2638652 1.079617 #>  [2,] 1.0135322 0.8168666 1.3588544 2.9725099 3.751695 #>  [3,] 0.3437176 0.1470520 0.6890398 2.3026953 3.081881 #>  [4,] 1.4744428 0.9836732 0.4416854 2.0553409 2.834526 #>  [5,] 1.5668209 1.0760513 0.5340635 2.1477190 2.926905 #>  [6,] 1.2342672 0.7434976 0.2015098 1.8151653 2.594351 #>  [7,] 1.8642644 1.3734948 0.8315070 0.7821485 1.561334 #>  [8,] 0.0000000 0.4907696 1.0327574 2.6464129 3.425598 #>  [9,] 0.4907696 0.0000000 0.5419878 2.1556433 2.934829 #> [10,] 1.0327574 0.5419878 0.0000000 1.6136555 2.392841 #> [11,] 2.6464129 2.1556433 1.6136555 0.0000000 2.343483 #> [12,] 3.4255984 2.9348288 2.3928410 2.3434826 0.000000 #>  generate_random_model(d, 'block') #> $graph #> IGRAPH 077a916 U--- 12 21 --  #> + edges from 077a916: #>  [1]  1-- 2  2-- 3  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8  2-- 9  2--10  4-- 5 #> [11]  4-- 6  5-- 6  7-- 8  7-- 9  7--10  7--11  7--12  8-- 9  8--10  9--10 #> [21] 11--12 #>  #> $Gamma #>            [,1]       [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>  [1,] 0.0000000 0.38002970 0.5128718 3.7521179 2.4857676 0.9578492 0.5603988 #>  [2,] 0.3800297 0.00000000 0.1328421 3.3720882 2.1057379 0.5778195 0.1803691 #>  [3,] 0.5128718 0.13284212 0.0000000 3.5049303 2.2385800 0.7106617 0.3132112 #>  [4,] 3.7521179 3.37208816 3.5049303 0.0000000 0.4559447 1.8011275 3.5524572 #>  [5,] 2.4857676 2.10573786 2.2385800 0.4559447 0.0000000 1.2910493 2.2861069 #>  [6,] 0.9578492 0.57781954 0.7106617 1.8011275 1.2910493 0.0000000 0.7581886 #>  [7,] 0.5603988 0.18036908 0.3132112 3.5524572 2.2861069 0.7581886 0.0000000 #>  [8,] 0.5067318 0.12670214 0.2595443 3.4987903 2.2324400 0.7045217 0.1053878 #>  [9,] 0.4699951 0.08996541 0.2228075 3.4620536 2.1957033 0.6677850 0.1736513 #> [10,] 0.5444061 0.16437641 0.2972185 3.5364646 2.2701143 0.7421960 0.2060129 #> [11,] 0.8742990 0.49426927 0.6271114 3.8663574 2.6000071 1.0720888 0.3139002 #> [12,] 1.3181809 0.93815122 1.0709933 4.3102394 3.0438891 1.5159708 0.7577821 #>             [,8]       [,9]     [,10]     [,11]     [,12] #>  [1,] 0.50673183 0.46999511 0.5444061 0.8742990 1.3181809 #>  [2,] 0.12670214 0.08996541 0.1643764 0.4942693 0.9381512 #>  [3,] 0.25954425 0.22280753 0.2972185 0.6271114 1.0709933 #>  [4,] 3.49879029 3.46205357 3.5364646 3.8663574 4.3102394 #>  [5,] 2.23243999 2.19570327 2.2701143 2.6000071 3.0438891 #>  [6,] 0.70452168 0.66778496 0.7421960 1.0720888 1.5159708 #>  [7,] 0.10538784 0.17365132 0.2060129 0.3139002 0.7577821 #>  [8,] 0.00000000 0.07218944 0.1525241 0.4192880 0.8631700 #>  [9,] 0.07218944 0.00000000 0.1396240 0.4875515 0.9314335 #> [10,] 0.15252407 0.13962401 0.0000000 0.5199131 0.9637950 #> [11,] 0.41928804 0.48755151 0.5199131 0.0000000 0.2993314 #> [12,] 0.86316999 0.93143346 0.9637950 0.2993314 0.0000000 #>  generate_random_model(d, 'decomposable') #> $graph #> IGRAPH 8cb228b U--- 12 25 --  #> + edges from 8cb228b: #>  [1]  1-- 2  1-- 3  1-- 7  1-- 8  2-- 3  2-- 4  2-- 5  2-- 6  2-- 7  2-- 8 #> [11]  2-- 9  2--10  2--11  4-- 5  4-- 6  4-- 9  4--10  4--11  4--12  5-- 6 #> [21]  5--12  7-- 8  9--10  9--11 10--11 #>  #> $Gamma #>            [,1]      [,2]      [,3]       [,4]      [,5]      [,6]      [,7] #>  [1,] 0.0000000 0.2072024 0.1386426 0.45955830 0.4605872 0.2945035 0.4398021 #>  [2,] 0.2072024 0.0000000 0.2646398 0.25235592 0.2533848 0.0873011 0.1755466 #>  [3,] 0.1386426 0.2646398 0.0000000 0.51699569 0.5180246 0.3519409 0.4860596 #>  [4,] 0.4595583 0.2523559 0.5169957 0.00000000 0.6699109 0.1489949 0.4279025 #>  [5,] 0.4605872 0.2533848 0.5180246 0.66991088 0.0000000 0.3154622 0.4289314 #>  [6,] 0.2945035 0.0873011 0.3519409 0.14899488 0.3154622 0.0000000 0.2628477 #>  [7,] 0.4398021 0.1755466 0.4860596 0.42790253 0.4289314 0.2628477 0.0000000 #>  [8,] 0.3328008 0.6838590 0.4996328 0.93621489 0.9372438 0.7711601 0.7628150 #>  [9,] 1.2633699 1.0561675 1.3208073 0.38677108 1.6093753 0.7952634 1.2317141 #> [10,] 0.8844230 0.6772206 0.9418604 0.25448673 1.1501952 0.5094968 0.8527672 #> [11,] 0.4985067 0.2913044 0.5559441 0.09057542 0.6920664 0.2074462 0.4668510 #> [12,] 1.1002993 0.8930969 1.1577367 0.38261960 1.5695674 0.7258932 1.0686435 #>            [,8]      [,9]     [,10]      [,11]     [,12] #>  [1,] 0.3328008 1.2633699 0.8844230 0.49850674 1.1002993 #>  [2,] 0.6838590 1.0561675 0.6772206 0.29130436 0.8930969 #>  [3,] 0.4996328 1.3208073 0.9418604 0.55594414 1.1577367 #>  [4,] 0.9362149 0.3867711 0.2544867 0.09057542 0.3826196 #>  [5,] 0.9372438 1.6093753 1.1501952 0.69206636 1.5695674 #>  [6,] 0.7711601 0.7952634 0.5094968 0.20744615 0.7258932 #>  [7,] 0.7628150 1.2317141 0.8527672 0.46685097 1.0686435 #>  [8,] 0.0000000 1.7400265 1.3610796 0.97516334 1.5769559 #>  [9,] 1.7400265 0.0000000 0.2040745 0.44858546 0.5561065 #> [10,] 1.3610796 0.2040745 0.0000000 0.38005204 0.5499711 #> [11,] 0.9751633 0.4485855 0.3800520 0.00000000 0.4995983 #> [12,] 1.5769559 0.5561065 0.5499711 0.49959825 0.0000000 #>  generate_random_model(d, 'general') #> $graph #> IGRAPH 248d79b U--- 12 11 -- Erdos-Renyi (gnp) graph #> + attr: name (g/c), type (g/c), loops (g/l), p (g/n) #> + edges from 248d79b: #>  [1]  2-- 5  3-- 5  5-- 7  6-- 7  4-- 8  6-- 8  4-- 9  1--11  6--11  8--12 #> [11] 10--12 #>  #> $Gamma #>            [,1]       [,2]        [,3]      [,4]        [,5]      [,6] #>  [1,] 0.0000000  1.2308538  0.87786706 0.7584570  0.83480760 0.2328692 #>  [2,] 1.2308538  0.0000000  0.43910567 1.5235724  0.39604621 0.9979846 #>  [3,] 0.8778671  0.4391057  0.00000000 1.1705857  0.04305946 0.6449979 #>  [4,] 0.7584570  1.5235724  1.17058570 0.0000000  1.12752623 0.5255878 #>  [5,] 0.8348076  0.3960462  0.04305946 1.1275262  0.00000000 0.6019384 #>  [6,] 0.2328692  0.9979846  0.64499786 0.5255878  0.60193840 0.0000000 #>  [7,] 0.5072249  0.7236290  0.37064221 0.7999435  0.32758274 0.2743557 #>  [8,] 0.3647879  1.1299033  0.77691658 0.3936691  0.73385711 0.1319187 #>  [9,] 0.9042390  1.6693544  1.31636766 0.1457820  1.27330819 0.6713698 #> [10,] 9.9342146 10.6993300 10.34634327 9.9630958 10.30328380 9.7013454 #> [11,] 0.2167794  1.0140744  0.66108766 0.5416776  0.61802820 0.0160898 #> [12,] 0.5028813  1.2679967  0.91500992 0.5317625  0.87195046 0.2700121 #>            [,7]      [,8]       [,9]     [,10]     [,11]     [,12] #>  [1,] 0.5072249 0.3647879  0.9042390  9.934215 0.2167794 0.5028813 #>  [2,] 0.7236290 1.1299033  1.6693544 10.699330 1.0140744 1.2679967 #>  [3,] 0.3706422 0.7769166  1.3163677 10.346343 0.6610877 0.9150099 #>  [4,] 0.7999435 0.3936691  0.1457820  9.963096 0.5416776 0.5317625 #>  [5,] 0.3275827 0.7338571  1.2733082 10.303284 0.6180282 0.8719505 #>  [6,] 0.2743557 0.1319187  0.6713698  9.701345 0.0160898 0.2700121 #>  [7,] 0.0000000 0.4062744  0.9457254  9.975701 0.2904455 0.5443677 #>  [8,] 0.4062744 0.0000000  0.5394511  9.569427 0.1480085 0.1380933 #>  [9,] 0.9457254 0.5394511  0.0000000 10.108878 0.6874596 0.6775444 #> [10,] 9.9757011 9.5694267 10.1088778  0.000000 9.7174352 9.4313333 #> [11,] 0.2904455 0.1480085  0.6874596  9.717435 0.0000000 0.2861019 #> [12,] 0.5443677 0.1380933  0.6775444  9.431333 0.2861019 0.0000000 #>"},{"path":"/reference/generate_random_spd_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","title":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","text":"Generates random \\(d \\times d\\) symmetric positive definite matrix. done generating random \\(d \\times d\\) matrix B, computing B %*% t(B), normalizing matrix approximately single digit entries.","code":""},{"path":"/reference/generate_random_spd_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","text":"","code":"generate_random_spd_matrix(d, bMin = -10, bMax = 10, ...)"},{"path":"/reference/generate_random_spd_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random symmetric positive definite matrix — generate_random_spd_matrix","text":"d Number rows/columns bMin Minimum value entries B bMax Maximum value entries B ... Ignored, allowed compatibility","code":""},{"path":[]},{"path":"/reference/generate_random_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random tree — generate_random_tree","title":"Generate a random tree — generate_random_tree","text":"Generates random tree random Pruefer sequence","code":""},{"path":"/reference/generate_random_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random tree — generate_random_tree","text":"","code":"generate_random_tree(d)"},{"path":"/reference/generate_random_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random tree — generate_random_tree","text":"d Number vertices graph","code":""},{"path":"/reference/generate_random_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random tree — generate_random_tree","text":"igraph::graph object","code":""},{"path":[]},{"path":"/reference/get_cliques_and_separators.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cliques and Separators of a graph — get_cliques_and_separators","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"Finds cliques, separators, (recursively) separators separators graph.","code":""},{"path":"/reference/get_cliques_and_separators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"","code":"get_cliques_and_separators(graph)"},{"path":"/reference/get_cliques_and_separators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"graph igraph::graph object","code":""},{"path":"/reference/get_cliques_and_separators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cliques and Separators of a graph — get_cliques_and_separators","text":"list vertex sets represent cliques (recursive) separators graph","code":""},{"path":"/reference/graphicalExtremes.html","id":null,"dir":"Reference","previous_headings":"","what":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"graphicalExtremes package provides three categories functions: simulation, estimation transformation.","code":""},{"path":"/reference/graphicalExtremes.html","id":"simulation-functions","dir":"Reference","previous_headings":"","what":"Simulation functions","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"rmpareto rmpareto_tree rmstable rmstable_tree","code":""},{"path":"/reference/graphicalExtremes.html","id":"estimation-functions","dir":"Reference","previous_headings":"","what":"Estimation functions","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"fmpareto_graph_HR mst_HR emp_chi_multdim emp_chi","code":""},{"path":"/reference/graphicalExtremes.html","id":"transformation-functions","dir":"Reference","previous_headings":"","what":"Transformation functions","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"Gamma2graph Gamma2Sigma Sigma2Gamma Gamma2chi chi2Gamma complete_Gamma data2mpareto","code":""},{"path":"/reference/graphicalExtremes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"graphicalExtremes: Statistical methodology for graphical extreme value models. — graphicalExtremes","text":"Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/is_block_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a graph is a block graph — is_block_graph","title":"Check if a graph is a block graph — is_block_graph","text":"Check graph block graph","code":""},{"path":"/reference/is_block_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a graph is a block graph — is_block_graph","text":"","code":"is_block_graph(graph)"},{"path":"/reference/is_block_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a graph is a block graph — is_block_graph","text":"graph igraph::graph object","code":""},{"path":"/reference/is_block_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a graph is a block graph — is_block_graph","text":"boolean indicating graph glock graph","code":""},{"path":[]},{"path":"/reference/logLH_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Full censored log-likelihood of HR model — logLH_HR","title":"Full censored log-likelihood of HR model — logLH_HR","text":"Computes full (censored) log-likelihood HR model.","code":""},{"path":"/reference/logLH_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full censored log-likelihood of HR model — logLH_HR","text":"","code":"logLH_HR(data, Gamma, cens = FALSE)"},{"path":"/reference/logLH_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full censored log-likelihood of HR model — logLH_HR","text":"data Numeric matrix \\(n\\times d\\). contains observations following multivariate HR Pareto distribution. Gamma Numeric matrix \\(n\\times d\\). represents variogram matrix \\(\\Gamma\\). cens Boolean. true, censored log-likelihood computed. default, cens = FALSE.","code":""},{"path":"/reference/logLH_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full censored log-likelihood of HR model — logLH_HR","text":"Numeric. full censored log-likelihood HR model.","code":""},{"path":"/reference/logdVK_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute censored exponent measure — logdVK_HR","title":"Compute censored exponent measure — logdVK_HR","text":"Computes censored exponent measure density HR distribution.","code":""},{"path":"/reference/logdVK_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute censored exponent measure — logdVK_HR","text":"","code":"logdVK_HR(x, K, par)"},{"path":"/reference/logdVK_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute censored exponent measure — logdVK_HR","text":"x Numeric vector \\(d\\) positive elements censored exponent measure evaluated. K Integer vector, subset \\(\\{1, \\dots, d\\}\\). index set censored. par Numeric vector \\(\\frac{d(d - 1)}{2}\\) elements. represents upper triangular portion variogram matrix \\(\\Gamma\\).","code":""},{"path":"/reference/logdVK_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute censored exponent measure — logdVK_HR","text":"Numeric. censored exponent measure HR distribution.","code":""},{"path":"/reference/logdV_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the exponent measure density of HR distribution — logdV_HR","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"Computes exponent measure density HR distribution.","code":""},{"path":"/reference/logdV_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"","code":"logdV_HR(x, par)"},{"path":"/reference/logdV_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"x Numeric matrix \\(n\\times d\\) vector \\(d\\) elements. par Numeric vector \\(\\frac{d(d - 1)}{2}\\) elements. represents upper triangular portion variogram matrix \\(\\Gamma\\).","code":""},{"path":"/reference/logdV_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the exponent measure density of HR distribution — logdV_HR","text":"Numeric. censored exponent measure HR distribution.","code":""},{"path":"/reference/loglik_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","title":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"Computes (censored) Huesler--Reiss log-likelihood, AIC, BIC values.","code":""},{"path":"/reference/loglik_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"","code":"loglik_HR(data, p = NULL, graph, Gamma, cens = FALSE)"},{"path":"/reference/loglik_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"data Numeric matrix \\(n\\times d\\). contains observations following multivariate HR Pareto distribution. p Numeric 0 1 NULL. NULL (default), assumed data already multivariate Pareto scale. Else, p used probability function data2mpareto standardize data. graph igraph::graph object. graph must undirected connected Gamma Numeric matrix \\(n\\times d\\). represents variogram matrix \\(\\Gamma\\). cens Boolean. true, censored log-likelihood computed. default, cens = FALSE.","code":""},{"path":"/reference/loglik_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Huesler--Reiss log-likelihood, AIC, and BIC — loglik_HR","text":"Numeric vector c(\"loglik\"=..., \"aic\"=..., \"bic\"=...) evaluated log-likelihood, AIC, BIC values.","code":""},{"path":"/reference/mparetomargins.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginalize multivariate Pareto dataset — mparetomargins","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"Marginalize multivariate Pareto dataset data respect variables set_indices.","code":""},{"path":"/reference/mparetomargins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"","code":"mparetomargins(data, set_indices)"},{"path":"/reference/mparetomargins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"data Numeric matrix \\(n\\times d\\). dataset containing observations following multivariate Pareto distribution. set_indices Numeric vector \\(d\\) different elements 1, ..., \\(d\\). variables respect marginalize multivariate distribution.","code":""},{"path":"/reference/mparetomargins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginalize multivariate Pareto dataset — mparetomargins","text":"Numeric matrix \\(n\\times m\\), \\(m\\) length set_indices. Marginalized multivariate Pareto data.","code":""},{"path":"/reference/order_cliques.html","id":null,"dir":"Reference","previous_headings":"","what":"Order Cliques — order_cliques","title":"Order Cliques — order_cliques","text":"Orders cliques connected decomposable graph fulfill running intersection property.","code":""},{"path":"/reference/order_cliques.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order Cliques — order_cliques","text":"","code":"order_cliques(cliques)"},{"path":"/reference/par2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Create \\(\\Gamma\\) from vector — par2Gamma","title":"Create \\(\\Gamma\\) from vector — par2Gamma","text":"function takes parameters vector par (upper triangular Gamma matrix) returns full Gamma.","code":""},{"path":"/reference/par2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create \\(\\Gamma\\) from vector — par2Gamma","text":"","code":"par2Gamma(par)"},{"path":"/reference/par2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create \\(\\Gamma\\) from vector — par2Gamma","text":"par Numeric vector \\(d\\) elements. Upper triangular part Gamma matrix.","code":""},{"path":"/reference/par2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create \\(\\Gamma\\) from vector — par2Gamma","text":"Numeric matrix \\(d \\times d\\). Full Gamma matrix.","code":""},{"path":"/reference/pruefer_to_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Pruefer sequence to a graph — pruefer_to_graph","title":"Convert a Pruefer sequence to a graph — pruefer_to_graph","text":"Convert Pruefer sequence graph","code":""},{"path":"/reference/pruefer_to_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Pruefer sequence to a graph — pruefer_to_graph","text":"","code":"pruefer_to_graph(pruefer)"},{"path":"/reference/rmpareto.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate Pareto distribution — rmpareto","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"Simulates exact samples multivariate Pareto distribution.","code":""},{"path":"/reference/rmpareto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"","code":"rmpareto(n, model = c(\"HR\", \"logistic\", \"neglogistic\", \"dirichlet\")[1], d, par)"},{"path":"/reference/rmpareto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"n Number simulations. model parametric model type; one : HR (default), logistic, neglogistic, dirichlet. d Dimension multivariate Pareto distribution. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, model = HR. \\(\\theta \\(0, 1)\\), model = logistic. \\(\\theta > 0\\), model = neglogistic. \\(\\alpha\\), numeric vector size d positive entries, model = dirichlet.","code":""},{"path":"/reference/rmpareto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"Numeric matrix size \\(n \\times d\\) simulations multivariate Pareto distribution.","code":""},{"path":"/reference/rmpareto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"simulation follows algorithm Engelke Hitz (2020) . details parameters Huesler--Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmpareto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"Coles SG, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317. Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/rmpareto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate Pareto distribution — rmpareto","text":"","code":"## A 4-dimensional HR distribution n <- 10 d <- 4 G <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  rmpareto(n, \"HR\", d = d, par = G) #>            [,1]      [,2]       [,3]      [,4] #>  [1,] 1.5417348 0.6687125 0.53179013 0.9310867 #>  [2,] 0.3319329 1.1119546 0.18435378 0.9126737 #>  [3,] 6.3837104 3.0451475 2.35883930 5.6052171 #>  [4,] 1.3956915 1.5677871 2.90441830 2.0780491 #>  [5,] 0.9775273 1.3798756 0.04752097 2.4238717 #>  [6,] 0.4705918 0.6246992 0.50328369 2.3639409 #>  [7,] 1.1608287 0.9936025 0.20393843 1.1606914 #>  [8,] 1.0411925 0.1890028 0.92558369 0.1272640 #>  [9,] 1.0161098 0.1093052 0.08739437 0.3216439 #> [10,] 0.5842568 1.1467366 0.04405890 0.1015256  ## A 3-dimensional logistic distribution n <- 10 d <- 3 theta <- .6 rmpareto(n, \"logistic\", d, par = theta) #>             [,1]       [,2]       [,3] #>  [1,] 1.07713867 1.62375233 1.65119930 #>  [2,] 0.20357793 1.06984474 0.50643524 #>  [3,] 1.21457338 0.05300082 0.24811185 #>  [4,] 1.42037615 0.79059451 0.46751597 #>  [5,] 0.34949212 2.18362845 0.97523543 #>  [6,] 0.39631663 2.13184020 1.98002940 #>  [7,] 0.20531414 1.17498618 0.18683788 #>  [8,] 0.17424730 2.86248339 0.04829661 #>  [9,] 0.04228709 0.05728603 1.06836094 #> [10,] 3.70759358 1.81749352 1.98290418  ## A 5-dimensional negative logistic distribution n <- 10 d <- 5 theta <- 1.5 rmpareto(n, \"neglogistic\", d, par = theta) #>            [,1]      [,2]        [,3]      [,4]      [,5] #>  [1,] 1.8312599 1.1056142  0.16803787 2.8631817 3.9601745 #>  [2,] 0.5663816 1.0546481  0.56278179 0.7307199 0.8226854 #>  [3,] 1.1603439 0.4843039  0.47790658 0.6713704 0.4976342 #>  [4,] 0.5328217 0.8339900  1.30645360 0.3879871 0.5948820 #>  [5,] 5.9972664 1.5678082  1.30669219 2.7786683 2.5929902 #>  [6,] 0.2882552 0.5710630  0.17426849 1.4431127 0.8536229 #>  [7,] 6.2031360 2.8220883 10.10944457 2.3214239 4.7585770 #>  [8,] 0.7684642 1.6845776  0.43974936 0.3676126 1.2205655 #>  [9,] 0.8909148 1.0072556  0.09266287 0.5188209 1.0250493 #> [10,] 4.1313549 5.6845342  1.15597328 3.1637688 3.9774906  ## A 4-dimensional Dirichlet distribution n <- 10 d <- 4 alpha <- c(.8, 1, .5, 2) rmpareto(n, \"dirichlet\", d, par = alpha) #>             [,1]       [,2]         [,3]       [,4] #>  [1,] 0.25289887 9.99416098 0.0177259816 1.97780084 #>  [2,] 1.09896983 1.49320476 0.3114441555 0.65700256 #>  [3,] 0.26284400 1.40961075 0.0002279827 1.44103791 #>  [4,] 0.99112753 9.81882537 2.0691669183 4.24474822 #>  [5,] 0.53112063 0.01839776 2.0969161208 0.05385129 #>  [6,] 0.28346248 1.05827208 0.1787620633 0.48736746 #>  [7,] 8.12293367 5.56926884 4.0087540295 1.87097983 #>  [8,] 2.85776326 0.34059646 1.0899375411 0.98070566 #>  [9,] 3.72499394 0.28038407 0.0379689534 0.16903621 #> [10,] 0.08246743 0.15987726 1.4780748949 1.41080036"},{"path":"/reference/rmpareto_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"Simulates exact samples multivariate Pareto distribution extremal graphical model tree defined Engelke Hitz (2020) .","code":""},{"path":"/reference/rmpareto_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"","code":"rmpareto_tree(n, model = c(\"HR\", \"logistic\", \"dirichlet\")[1], tree, par)"},{"path":"/reference/rmpareto_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"n Number simulations. model parametric model type; one : HR (default), logistic, dirichlet. tree Graph object igraph package. object must tree, .e., undirected graph connected cycles. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, entries corresponding edges tree used, model = HR. Alternatively, can vector length \\(d - 1\\) containing entries variogram corresponding edges given tree. \\(\\theta \\(0, 1)\\), vector length \\(d - 1\\) containing logistic parameters corresponding edges given tree, model = logistic. matrix size \\((d - 1) \\times 2\\), rows contain parameters vectors \\(\\alpha\\) size 2 positve entries edges tree, model = dirichlet.","code":""},{"path":"/reference/rmpareto_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"Numeric matrix size \\(n \\times d\\) simulations multivariate Pareto distribution.","code":""},{"path":"/reference/rmpareto_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"simulation follows algorithm Engelke Hitz (2020) . details parameters Huesler--Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmpareto_tree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"Coles SG, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317. Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/rmpareto_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate Pareto distribution on a tree — rmpareto_tree","text":"","code":"## A 4-dimensional HR tree model  my_tree <- igraph::graph_from_adjacency_matrix(rbind(   c(0, 1, 0, 0),   c(1, 0, 1, 1),   c(0, 1, 0, 0),   c(0, 1, 0, 0) ), mode = \"undirected\" ) n <- 10 Gamma_vec <- c(.5, 1.4, .8) set.seed(123) rmpareto_tree(n, \"HR\", tree = my_tree, par = Gamma_vec) #>             [,1]      [,2]      [,3]      [,4] #>  [1,] 2.84253613 1.0005391 0.3084607 0.4418211 #>  [2,] 2.47736524 1.3292869 1.2637143 1.2880978 #>  [3,] 0.06591181 0.2870575 1.0531443 0.3019635 #>  [4,] 7.55377972 9.1991979 5.8316487 3.9821044 #>  [5,] 3.04152555 1.7000302 6.6294011 0.4891234 #>  [6,] 1.06779693 0.2294188 0.2181644 0.1903021 #>  [7,] 0.21873177 0.3305197 0.1273843 1.0729052 #>  [8,] 0.42635241 0.3883451 1.0709708 0.2981210 #>  [9,] 0.10432605 0.2854805 1.0420470 0.1541613 #> [10,] 0.60313584 0.4771446 1.4032066 0.0989642  ## A 4-dimensional Dirichlet model with asymmetric edge distributions  alpha <- cbind(c(.2, 1, .5), c(1.5, .6, .8)) rmpareto_tree(n, model = \"dirichlet\", tree = my_tree, par = alpha) #>               [,1]        [,2]         [,3]        [,4] #>  [1,] 5.762897e-04  7.58402408 12.509319036 0.157712818 #>  [2,] 3.533313e-02  0.06507584  0.002406825 1.997241878 #>  [3,] 3.282715e+00  0.91728177  0.431414007 0.010582074 #>  [4,] 1.000012e+00  0.10685203  0.125698592 0.005096915 #>  [5,] 5.247710e-07  1.59205151  0.335459093 3.595989200 #>  [6,] 9.668793e-03 15.03385028  0.927124706 5.745471227 #>  [7,] 1.534824e+00  0.09823805  0.034636347 1.393518517 #>  [8,] 3.906524e+00  0.30175547  0.770171700 0.045366892 #>  [9,] 5.232992e+00  0.81597984  0.509299749 0.590041154 #> [10,] 1.029222e-01  1.07372668  2.867594928 0.584238945"},{"path":"/reference/rmstable.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate max-stable distribution — rmstable","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"Simulates exact samples multivariate max-stable distribution.","code":""},{"path":"/reference/rmstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"","code":"rmstable(n, model = c(\"HR\", \"logistic\", \"neglogistic\", \"dirichlet\")[1], d, par)"},{"path":"/reference/rmstable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"n Number simulations. model parametric model type; one : HR (default), logistic, neglogistic, dirichlet. d Dimension multivariate Pareto distribution. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, model = HR. \\(\\theta \\(0, 1)\\), model = logistic. \\(\\theta > 0\\), model = neglogistic. \\(\\alpha\\), numeric vector size d positive entries, model = dirichlet.","code":""},{"path":"/reference/rmstable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"Numeric matrix size \\(n \\times d\\) simulations multivariate max-stable distribution.","code":""},{"path":"/reference/rmstable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"simulation follows extremal function algorithm Dombry et al. (2016) . details parameters Huesler--Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmstable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"Coles SG, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317.","code":""},{"path":"/reference/rmstable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate max-stable distribution — rmstable","text":"","code":"## A 4-dimensional HR distribution n <- 10 d <- 4 G <- cbind(   c(0, 1.5, 1.5, 2),   c(1.5, 0, 2, 1.5),   c(1.5, 2, 0, 1.5),   c(2, 1.5, 1.5, 0) )  rmstable(n, \"HR\", d = d, par = G) #>             [,1]       [,2]       [,3]       [,4] #>  [1,]  0.9129700  2.7320869  4.3930684  2.0396394 #>  [2,]  0.2666331  0.7563013  1.6998662  0.7642649 #>  [3,]  1.4469430  3.2588614  0.6616103  0.9099434 #>  [4,]  0.4459274  1.6260210  0.6936030  1.0758879 #>  [5,]  0.4388372  0.7088128  0.4051627  0.5354991 #>  [6,]  0.5635592  0.6925003  2.5880064  0.4623138 #>  [7,]  1.6316665  1.2772479  2.3119953  6.8583689 #>  [8,] 25.5877634  9.4518333 30.2610583 11.8954021 #>  [9,]  9.1793281  9.6263068  7.7595231 18.7535580 #> [10,] 23.4589286 30.4513683 27.9736059 12.6065325  ## A 3-dimensional logistic distribution n <- 10 d <- 3 theta <- .6 rmstable(n, \"logistic\", d, par = theta) #>            [,1]       [,2]      [,3] #>  [1,] 0.7920967  0.3838593 0.5446596 #>  [2,] 0.4762412  1.7332709 1.3834479 #>  [3,] 1.3370597  0.2851836 4.0607764 #>  [4,] 0.7421880  1.8327530 2.2199731 #>  [5,] 1.9280030 10.7751455 1.5144490 #>  [6,] 1.2808886  0.8044145 0.8670885 #>  [7,] 1.2840544  0.7799514 5.0934757 #>  [8,] 0.5676049  0.3633312 0.3426581 #>  [9,] 0.2693890  0.3870772 0.4698337 #> [10,] 1.0291076  0.4829797 1.6501069  ## A 5-dimensional negative logistic distribution n <- 10 d <- 5 theta <- 1.5 rmstable(n, \"neglogistic\", d, par = theta) #>             [,1]       [,2]       [,3]       [,4]       [,5] #>  [1,]  7.6648654 12.7130188  5.1404650 29.9312790  6.7218769 #>  [2,]  0.6997510  0.7048263  1.2611360  0.8094214  0.5227736 #>  [3,] 23.7136939  1.8638248  7.7195594  8.6375029 18.3126055 #>  [4,]  1.1596061  0.9826885  1.1413147  1.3009600  0.4160243 #>  [5,]  1.3697433  0.6338478  0.7218860  1.4924707  0.9762449 #>  [6,]  2.2482129  2.8355838  1.4315486  4.9443567  1.6710074 #>  [7,] 16.7420023 15.0632920 12.9267446 20.3789551 28.2010827 #>  [8,]  0.4362455  0.3568023  0.3109209  0.9655873  0.3155885 #>  [9,]  0.8675428  0.6111543  0.4107973  0.8449127  0.6456791 #> [10,]  3.8236338  3.0036666  4.5845912  1.6076321  2.4079347  ## A 4-dimensional Dirichlet distribution n <- 10 d <- 4 alpha <- c(.8, 1, .5, 2) rmstable(n, \"dirichlet\", d, par = alpha) #>            [,1]      [,2]      [,3]      [,4] #>  [1,] 1.8895508 0.7655561 1.2157059 2.1661873 #>  [2,] 0.7099777 1.8470676 3.6166997 0.7038762 #>  [3,] 3.0723931 0.4386526 0.9849517 0.7825669 #>  [4,] 0.5039515 0.4160592 0.9417922 2.8132326 #>  [5,] 8.8648594 2.9460901 7.5495707 6.8022550 #>  [6,] 2.8973698 4.9357845 2.1741180 4.9137229 #>  [7,] 1.5847216 6.1903019 3.3346973 1.8198441 #>  [8,] 0.2975653 1.2948784 1.5564330 2.1926874 #>  [9,] 1.3155831 0.5673063 0.4437899 1.0480459 #> [10,] 1.7603035 5.4723088 1.5448006 4.8258270"},{"path":"/reference/rmstable_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"Simulates exact samples multivariate max-stable distribution extremal graphical model tree defined Engelke Hitz (2020) .","code":""},{"path":"/reference/rmstable_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"","code":"rmstable_tree(n, model = c(\"HR\", \"logistic\", \"dirichlet\")[1], tree, par)"},{"path":"/reference/rmstable_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"n Number simulations. model parametric model type; one : HR (default), logistic, dirichlet. tree Graph object igraph package. object must tree, .e., undirected graph connected cycles. par Respective parameter given model, , \\(\\Gamma\\), numeric \\(d \\times d\\) variogram matrix, entries corresponding edges tree used, model = HR. Alternatively, can vector length \\(d - 1\\) containing entries variogram corresponding edges given tree. \\(\\theta \\(0, 1)\\), vector length \\(d - 1\\) containing logistic parameters corresponding edges given tree, model = logistic. matrix size \\((d - 1) \\times 2\\), rows contain parameter vectors \\(\\alpha\\) size 2 positve entries edges tree, model = dirichlet.","code":""},{"path":"/reference/rmstable_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"Numeric matrix size \\(n \\times d\\) simulations multivariate max-stable distribution.","code":""},{"path":"/reference/rmstable_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"simulation follows combination extremal function algorithm Dombry et al. (2016)  theory Engelke Hitz (2020)  sample single extremal function. details parameters Huesler--Reiss, logistic negative logistic distributions see Dombry et al. (2016) , Dirichlet distribution see Coles Tawn (1991) .","code":""},{"path":"/reference/rmstable_tree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"Coles SG, Tawn JA (1991). “Modelling extreme multivariate events.” J. R. Stat. Soc. Ser. B Stat. Methodol., 53, 377--392. Dombry C, Engelke S, Oesting M (2016). “Exact simulation max-stable processes.” Biometrika, 103, 303--317. Engelke S, Hitz (2020). “Graphical models extremes (discussion).” J. R. Stat. Soc. Ser. B Stat. Methodol., 82, 871--932.","code":""},{"path":"/reference/rmstable_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling of a multivariate max-stable distribution on a tree — rmstable_tree","text":"","code":"## A 4-dimensional HR tree model  my_tree <- igraph::graph_from_adjacency_matrix(rbind(   c(0, 1, 0, 0),   c(1, 0, 1, 1),   c(0, 1, 0, 0),   c(0, 1, 0, 0) ), mode = \"undirected\" ) n <- 10 Gamma_vec <- c(.5, 1.4, .8) rmstable_tree(n, \"HR\", tree = my_tree, par = Gamma_vec) #>             [,1]        [,2]        [,3]        [,4] #>  [1,] 11.4926835   6.2692985   7.2692681   7.3656059 #>  [2,]  0.4240365   0.8814177   2.1049743   0.5471967 #>  [3,]  2.0693665   3.8310442   0.8515348   1.8757676 #>  [4,]  0.5332370   0.3338001   1.1440102   0.2431660 #>  [5,]  0.9622793   0.3529766   0.6154679   0.6122024 #>  [6,]  3.6110854   2.0049875   3.5542388   0.7321436 #>  [7,]  2.0810677   1.6376026   1.2619098   1.5633647 #>  [8,]  0.6077383   0.3588807   0.7824510   0.5408133 #>  [9,] 41.5770869 355.9902771 225.9689381 510.2973482 #> [10,]  3.0393533   1.5666653   2.4999867   5.7565452  ## A 4-dimensional Dirichlet model with asymmetric edge distributions  alpha <- cbind(c(.2, 1, .5), c(1.5, .6, .8)) rmstable_tree(n, model = \"dirichlet\", tree = my_tree, par = alpha) #>             [,1]       [,2]       [,3]       [,4] #>  [1,]  7.6875162 57.5437511  4.2553267  2.1829200 #>  [2,]  0.4213234  5.1944645  0.8254621  0.9480425 #>  [3,]  0.6316744  0.4647958  0.3077491  0.9783213 #>  [4,]  1.8720697 36.3060340 54.3817655 19.8613889 #>  [5,] 15.2347659  3.2621610  4.4430843  5.1449147 #>  [6,]  2.4624789  1.9151092  0.8660182  3.4762745 #>  [7,]  3.0352577  3.1889870  1.8856030  3.3643334 #>  [8,]  0.5431711  0.4845968  3.6101540  0.5459028 #>  [9,]  3.6090469  0.4368999  1.1240025  1.7006204 #> [10,]  2.5925942  1.4293217  3.0304101  0.9766790"},{"path":"/reference/select_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Select edges to add to a graph — select_edges","title":"Select edges to add to a graph — select_edges","text":"function selects possible edges can added graph still remaining class block graphs.","code":""},{"path":"/reference/select_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select edges to add to a graph — select_edges","text":"","code":"select_edges(graph)"},{"path":"/reference/select_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select edges to add to a graph — select_edges","text":"graph Graph object igraph package. graph must connected, undirected graph. Can also implied NA entries Gamma decomposable.","code":""},{"path":"/reference/select_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select edges to add to a graph — select_edges","text":"Numeric vector.","code":""},{"path":"/reference/set_graph_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set graphical parameters — set_graph_parameters","title":"Set graphical parameters — set_graph_parameters","text":"Set graphical parameters graph object igraph package.","code":""},{"path":"/reference/set_graph_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set graphical parameters — set_graph_parameters","text":"","code":"set_graph_parameters(graph)"},{"path":"/reference/set_graph_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set graphical parameters — set_graph_parameters","text":"graph Graph object igraph package.","code":""},{"path":"/reference/set_graph_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set graphical parameters — set_graph_parameters","text":"Graph object igraph package.","code":""},{"path":"/reference/simu_px_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate HR extremal functions — simu_px_HR","title":"Simulate HR extremal functions — simu_px_HR","text":"Simulates Huessler--Reiss extremal functions","code":""},{"path":"/reference/simu_px_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate HR extremal functions — simu_px_HR","text":"","code":"simu_px_HR(n, d, idx, trend, chol_mat)"},{"path":"/reference/simu_px_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate HR extremal functions — simu_px_HR","text":"n Number simulations. d Dimension multivariate Pareto distribution. idx Integer. Index corresponding variable extremal function simulated. trend Numeric. Trend corresponding variable idx. chol_mat Numeric matrix \\(d\\times d\\). Cholesky decomposition desired covariance matrix.","code":""},{"path":"/reference/simu_px_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate HR extremal functions — simu_px_HR","text":"Numeric matrix \\(n\\times d\\). Simulated data.","code":""},{"path":"/reference/simu_px_dirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Dirichlet extremal functions — simu_px_dirichlet","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"Simulates Dirichlet extremal functions","code":""},{"path":"/reference/simu_px_dirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"","code":"simu_px_dirichlet(n, d, idx, alpha)"},{"path":"/reference/simu_px_dirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"n Number simulations. d Dimension multivariate Pareto distribution. idx Integer numeric vector n elements. Inde(x|ces) 1 d, determine extremal function simulate. alpha Numeric vector size d.","code":""},{"path":"/reference/simu_px_dirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Dirichlet extremal functions — simu_px_dirichlet","text":"Numeric matrix \\(n\\times d\\). Simulated data.","code":""},{"path":"/reference/simu_px_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate logistic extremal functions — simu_px_logistic","title":"Simulate logistic extremal functions — simu_px_logistic","text":"Simulates logistic extremal functions","code":""},{"path":"/reference/simu_px_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate logistic extremal functions — simu_px_logistic","text":"","code":"simu_px_logistic(n, d, idx, theta)"},{"path":"/reference/simu_px_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate logistic extremal functions — simu_px_logistic","text":"n Number simulations. d Dimension multivariate Pareto distribution. idx Integer numeric vector n elements. Inde(x|ces) 1 d, determine extremal function simulate. theta Numeric --- assume \\(0 < \\theta < 1\\).","code":""},{"path":"/reference/simu_px_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate logistic extremal functions — simu_px_logistic","text":"Numeric matrix \\(n\\times d\\). Simulated data.","code":""},{"path":"/reference/simu_px_neglogistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate negative logistic extremal functions — simu_px_neglogistic","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"Simulates negative logistic extremal functions","code":""},{"path":"/reference/simu_px_neglogistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"","code":"simu_px_neglogistic(n, d, idx, theta)"},{"path":"/reference/simu_px_neglogistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"n Number simulations. d Dimension multivariate Pareto distribution. idx Integer numeric vector n elements. Inde(x|ces) 1 d, determine extremal function simulate. theta Numeric --- assume \\(\\theta > 0\\).","code":""},{"path":"/reference/simu_px_neglogistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate negative logistic extremal functions — simu_px_neglogistic","text":"Numeric matrix \\(n\\times d\\). Simulated data.","code":""},{"path":"/reference/simu_px_tree_HR.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate HR extremal functions on a tree — simu_px_tree_HR","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"Simulates Huessler--Reiss extremal functions tree","code":""},{"path":"/reference/simu_px_tree_HR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"","code":"simu_px_tree_HR(n, Gamma_vec, A)"},{"path":"/reference/simu_px_tree_HR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"n Number simulations. Gamma_vec Numeric vector \\(d - 1\\) elements, \\(d\\) number nodes tree (\\(d - 1\\) number edges). Numeric matrix \\(d \\times (d - 1)\\); rows represent nodes tree, columns represent edges. fixed node \\(k = 1, \\dots, d\\), entry \\((, j)\\) equal 1 edge position \\(j\\) directed path node \\(k\\) node \\(\\) polytree rooted node \\(k\\).","code":""},{"path":"/reference/simu_px_tree_HR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate HR extremal functions on a tree — simu_px_tree_HR","text":"Numeric matrix \\(n\\times d\\). Simulated data.","code":""},{"path":"/reference/simu_px_tree_dirichlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"Simulates Dirichlet extremal functions tree","code":""},{"path":"/reference/simu_px_tree_dirichlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"","code":"simu_px_tree_dirichlet(n, alpha.start, alpha.end, A)"},{"path":"/reference/simu_px_tree_dirichlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"n Number simulations. alpha.start Numeric vector \\(d - 1\\) elements, \\(d\\) number nodes tree (\\(d - 1\\) number edges). alpha.end Numeric vector \\(d - 1\\) elements, \\(d\\) number nodes tree (\\(d - 1\\) number edges). Numeric matrix \\(d \\times (d - 1)\\); rows represent nodes tree, columns represent edges. fixed node \\(k = 1, \\dots, d\\), entry \\((, j)\\) equal 1 edge position \\(j\\) directed path node \\(k\\) node \\(\\) polytree rooted node \\(k\\).","code":""},{"path":"/reference/simu_px_tree_dirichlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Dirichlet extremal functions on a tree — simu_px_tree_dirichlet","text":"Numeric matrix \\(n\\times d\\). Simulated data.","code":""},{"path":"/reference/simu_px_tree_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"Simulates logistic extremal functions tree","code":""},{"path":"/reference/simu_px_tree_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"","code":"simu_px_tree_logistic(n, theta, A)"},{"path":"/reference/simu_px_tree_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"n Number simulations. theta Numeric vector 1 \\(d - 1\\) elements. Assume entry \\(0 < \\theta < 1\\). Numeric matrix \\(d \\times (d - 1)\\); rows represent nodes tree, columns represent edges. fixed node \\(k = 1, \\dots, d\\), entry \\((, j)\\) equal 1 edge position \\(j\\) directed path node \\(k\\) node \\(\\) polytree rooted node \\(k\\).","code":""},{"path":"/reference/simu_px_tree_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate logistic extremal functions on a tree — simu_px_tree_logistic","text":"Numeric matrix \\(n\\times d\\). Simulated data.","code":""},{"path":"/reference/unif.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform margin — unif","title":"Uniform margin — unif","text":"Rescale vector x empirically uniform margin.","code":""},{"path":"/reference/unif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform margin — unif","text":"","code":"unif(x)"},{"path":"/reference/unif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform margin — unif","text":"x Numeric vector.","code":""},{"path":"/reference/unif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform margin — unif","text":"Numeric vector entries rescaled uniform margins","code":""}]
